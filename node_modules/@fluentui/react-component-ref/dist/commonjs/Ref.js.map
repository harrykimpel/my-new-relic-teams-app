{"version":3,"sources":["Ref.tsx"],"names":["Ref","props","children","innerRef","rest","child","React","Children","only","ElementType","ReactIs","isForwardRef","RefForward","RefFindNode","childWithProps","Object","keys","length","cloneElement","displayName","process","env","NODE_ENV","propTypes","PropTypes","element","isRequired","refPropType"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,GAAsC,GAAG,SAAzCA,GAAyC,CAAAC,KAAK,EAAI;AAAA,MAC9CC,QAD8C,GACdD,KADc,CAC9CC,QAD8C;AAAA,MACpCC,QADoC,GACdF,KADc,CACpCE,QADoC;AAAA,MACvBC,IADuB,0CACdH,KADc;AAGtD,MAAMI,KAAK,GAAGC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAAd;AACA,MAAMO,WAAW,GAAGC,OAAO,CAACC,YAAR,CAAqBN,KAArB,IAA8BO,mBAA9B,GAA2CC,oBAA/D;AACA,MAAMC,cAAc,GAAGT,KAAK,IAAID,IAAT,IAAiBW,MAAM,CAACC,IAAP,CAAYZ,IAAZ,EAAkBa,MAAlB,GAA2B,CAA5C,GAAgDX,KAAK,CAACY,YAAN,CAAmBb,KAAnB,EAA0BD,IAA1B,CAAhD,GAAkFC,KAAzG;AAEA,SAAO,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEF;AAAvB,KAAkCW,cAAlC,CAAP;AACD,CARD;;AAUAd,GAAG,CAACmB,WAAJ,GAAkB,KAAlB,C,CACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCtB,EAAAA,GAAG,CAACuB,SAAJ,GAAgB;AACdrB,IAAAA,QAAQ,EAAEsB,SAAS,CAACC,OAAV,CAAkBC,UADd;AAEdvB,IAAAA,QAAQ,EAAEwB,mBAAYD;AAFR,GAAhB;AAID;;eAEc1B,G","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as ReactIs from 'react-is';\n\nimport RefFindNode from './RefFindNode';\nimport RefForward from './RefForward';\nimport { RefProps, refPropType } from './types';\n\nconst Ref: React.FunctionComponent<RefProps> = props => {\n  const { children, innerRef, ...rest } = props;\n\n  const child = React.Children.only(children);\n  const ElementType = ReactIs.isForwardRef(child) ? RefForward : RefFindNode;\n  const childWithProps = child && rest && Object.keys(rest).length > 0 ? React.cloneElement(child, rest) : child;\n\n  return <ElementType innerRef={innerRef}>{childWithProps}</ElementType>;\n};\n\nRef.displayName = 'Ref';\n// TODO: use Babel plugin for this\nif (process.env.NODE_ENV !== 'production') {\n  Ref.propTypes = {\n    children: PropTypes.element.isRequired,\n    innerRef: refPropType.isRequired,\n  };\n}\n\nexport default Ref;\n"],"file":"Ref.js"}