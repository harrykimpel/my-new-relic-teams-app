"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var isObject = function isObject(o) {
  return o !== null && (0, _typeof2.default)(o) === 'object' && !Array.isArray(o);
}; // Heads Up!
// Changes here need to consider breaking all object references.
// Merging should result in a themes that are non-mutated and have broken references.


var deepmerge = function deepmerge() {
  var inner = function inner(target, source) {
    Object.keys(source).forEach(function (k) {
      if (isObject(source[k])) {
        if (!isObject(target[k])) {
          target[k] = {};
        }

        inner(target[k], source[k]);
      } else {
        target[k] = source[k]; // TODO: do deep clone for arrays? We currently do not have any deep arrays in variables
      }
    });
    return target;
  };

  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }

  return sources.filter(Boolean).reduce(function (acc, src) {
    return inner(acc, src);
  }, {});
};

var _default = deepmerge;
exports.default = _default;
//# sourceMappingURL=deepmerge.js.map
