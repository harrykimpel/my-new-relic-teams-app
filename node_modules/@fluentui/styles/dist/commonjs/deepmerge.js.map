{"version":3,"sources":["deepmerge.ts"],"names":["isObject","o","Array","isArray","deepmerge","inner","target","source","Object","keys","forEach","k","sources","filter","Boolean","reduce","acc","src"],"mappings":";;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,SAAIA,CAAC,KAAK,IAAN,IAAc,sBAAOA,CAAP,MAAa,QAA3B,IAAuC,CAACC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAA5C;AAAA,CAAlB,C,CAEA;AACA;AACA;;;AACA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAgB;AAChC,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,MAAD,EAASC,MAAT,EAAoB;AAChCC,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAAAC,CAAC,EAAI;AAC/B,UAAIX,QAAQ,CAACO,MAAM,CAACI,CAAD,CAAP,CAAZ,EAAyB;AACvB,YAAI,CAACX,QAAQ,CAACM,MAAM,CAACK,CAAD,CAAP,CAAb,EAA0B;AACxBL,UAAAA,MAAM,CAACK,CAAD,CAAN,GAAY,EAAZ;AACD;;AAEDN,QAAAA,KAAK,CAACC,MAAM,CAACK,CAAD,CAAP,EAAYJ,MAAM,CAACI,CAAD,CAAlB,CAAL;AACD,OAND,MAMO;AACLL,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYJ,MAAM,CAACI,CAAD,CAAlB,CADK,CACkB;AACxB;AACF,KAVD;AAWA,WAAOL,MAAP;AACD,GAbD;;AADgC,oCAAZM,OAAY;AAAZA,IAAAA,OAAY;AAAA;;AAehC,SAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,EAAwBC,MAAxB,CAA+B,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAcZ,KAAK,CAACW,GAAD,EAAMC,GAAN,CAAnB;AAAA,GAA/B,EAA8D,EAA9D,CAAP;AACD,CAhBD;;eAkBeb,S","sourcesContent":["const isObject = o => o !== null && typeof o === 'object' && !Array.isArray(o);\n\n// Heads Up!\n// Changes here need to consider breaking all object references.\n// Merging should result in a themes that are non-mutated and have broken references.\nconst deepmerge = (...sources) => {\n  const inner = (target, source) => {\n    Object.keys(source).forEach(k => {\n      if (isObject(source[k])) {\n        if (!isObject(target[k])) {\n          target[k] = {};\n        }\n\n        inner(target[k], source[k]);\n      } else {\n        target[k] = source[k]; // TODO: do deep clone for arrays? We currently do not have any deep arrays in variables\n      }\n    });\n    return target;\n  };\n  return sources.filter(Boolean).reduce((acc, src) => inner(acc, src), {});\n};\n\nexport default deepmerge;\n"],"file":"deepmerge.js"}