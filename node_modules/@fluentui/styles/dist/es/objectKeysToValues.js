import _typeof from "@babel/runtime/helpers/esm/typeof";

var isObject = function isObject(o) {
  return o !== null && _typeof(o) === 'object' && !Array.isArray(o);
};

var objectKeyToValues = function objectKeyToValues(input) {
  var formatter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (input) {
    return input;
  };

  if (!isObject(input)) {
    return input;
  }

  var inner = function inner(result, obj, prefix) {
    Object.keys(obj).forEach(function (k) {
      if (isObject(obj[k])) {
        result[k] = {};
        inner(result[k], obj[k], "".concat(prefix).concat(k, "."));
      } else {
        result[k] = formatter("".concat(prefix).concat(k));
      }
    });
    return result;
  };

  return inner({}, input, '');
};

export default objectKeyToValues;
//# sourceMappingURL=objectKeysToValues.js.map
