{"version":3,"sources":["utils/renderComponent.tsx"],"names":["FocusZone","getElementType","deprecated_getTelemetry","getTelemetry","getUnhandledProps","unstable_getAccessibility","getAccessibility","unstable_getStyles","getStyles","emptyTheme","logProviderMissingWarning","renderComponent","config","context","className","displayName","handledProps","props","state","actionHandlers","render","saveDebug","telemetry","setStart","setEnd","rtl","ElementType","unhandledProps","stateAndProps","accessibility","disableAnimations","displayNames","renderer","renderRule","theme","performance","enableStylesCaching","enableBooleanVariablesCaching","classes","variables","styles","resolvedConfig","focusZone","originalElementType","as","isRtl","element"],"mappings":"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","sourcesContent":["import {\n  AccessibilityActionHandlers,\n  ComponentSlotClasses,\n  FocusZone,\n  getElementType,\n  deprecated_getTelemetry as getTelemetry,\n  getUnhandledProps,\n  ReactAccessibilityBehavior,\n  unstable_getAccessibility as getAccessibility,\n  unstable_getStyles as getStyles,\n} from '@fluentui/react-bindings';\nimport {\n  emptyTheme,\n  ComponentSlotStylesResolved,\n  ComponentVariablesObject,\n  DebugData,\n  PropsWithVarsAndStyles,\n  ThemePrepared,\n} from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { Props, ProviderContextPrepared } from '../types';\nimport logProviderMissingWarning from './providerMissingHandler';\n\nexport interface RenderResultConfig<P> {\n  ElementType: React.ElementType<P>;\n  classes: ComponentSlotClasses;\n  unhandledProps: Props;\n  variables: ComponentVariablesObject;\n  styles: ComponentSlotStylesResolved;\n  accessibility: ReactAccessibilityBehavior;\n  rtl: boolean;\n  theme: ThemePrepared;\n}\n\nexport type RenderComponentCallback<P> = (config: RenderResultConfig<P>) => any;\n\nexport interface RenderConfig<P> {\n  className?: string;\n  displayName: string;\n  handledProps: string[];\n  props: PropsWithVarsAndStyles;\n  state: Record<string, any>;\n  actionHandlers: AccessibilityActionHandlers;\n  render: RenderComponentCallback<P>;\n  saveDebug: (debug: DebugData | null) => void;\n}\n\nconst renderComponent = <P extends {}>(\n  config: RenderConfig<P>,\n  context?: ProviderContextPrepared,\n): React.ReactElement<P> => {\n  const { className, displayName, handledProps, props, state, actionHandlers, render, saveDebug = () => {} } = config;\n\n  if (_.isEmpty(context)) {\n    logProviderMissingWarning();\n  }\n\n  const { setStart, setEnd } = getTelemetry(displayName, context.telemetry);\n  const rtl = context.rtl || false;\n\n  setStart();\n\n  const ElementType = getElementType(props) as React.ReactType<P>;\n  const unhandledProps = getUnhandledProps(handledProps, props);\n  const stateAndProps = { ...state, ...props };\n\n  const accessibility: ReactAccessibilityBehavior = getAccessibility(\n    displayName,\n    props.accessibility,\n    stateAndProps,\n    rtl,\n    actionHandlers,\n  );\n  const { classes, variables, styles, theme } = getStyles({\n    className,\n    disableAnimations: context.disableAnimations || false,\n    displayNames: [displayName],\n    props: stateAndProps,\n    renderer: context.renderer || { renderRule: () => '' },\n    rtl,\n    saveDebug,\n    theme: context.theme || emptyTheme,\n    performance: {\n      ...context.performance,\n      // we cannot enable caching for class components\n      enableStylesCaching: false,\n      enableBooleanVariablesCaching: false,\n    },\n  });\n\n  const resolvedConfig: RenderResultConfig<P> = {\n    ElementType,\n    unhandledProps,\n    classes,\n    variables,\n    styles,\n    accessibility,\n    rtl,\n    theme,\n  };\n\n  if (accessibility.focusZone) {\n    const originalElementType = resolvedConfig.ElementType;\n\n    resolvedConfig.ElementType = FocusZone as any;\n    resolvedConfig.unhandledProps = {\n      ...resolvedConfig.unhandledProps,\n      ...accessibility.focusZone.props,\n    };\n    resolvedConfig.unhandledProps.as = originalElementType;\n    resolvedConfig.unhandledProps.isRtl = resolvedConfig.rtl;\n  }\n\n  const element = render(resolvedConfig);\n  setEnd();\n\n  return element;\n};\n\nexport default renderComponent;\n"],"file":"renderComponent.js"}