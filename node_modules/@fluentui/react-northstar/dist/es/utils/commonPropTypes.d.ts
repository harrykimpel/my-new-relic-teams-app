import * as PropTypes from 'prop-types';
export interface CreateCommonConfig {
    accessibility?: boolean;
    children?: boolean | 'node' | 'element';
    as?: boolean;
    className?: boolean;
    color?: boolean;
    content?: boolean | 'node' | 'shorthand';
    styled?: boolean;
}
export declare const createCommon: (config?: CreateCommonConfig) => {
    styles: PropTypes.Requireable<object>;
    variables: PropTypes.Requireable<object>;
    design: PropTypes.Requireable<PropTypes.InferProps<{
        position: PropTypes.Requireable<string>;
        display: PropTypes.Requireable<string>;
        top: PropTypes.Requireable<string>;
        right: PropTypes.Requireable<string>;
        bottom: PropTypes.Requireable<string>;
        left: PropTypes.Requireable<string>;
        padding: PropTypes.Requireable<string>;
        paddingTop: PropTypes.Requireable<string>;
        paddingRight: PropTypes.Requireable<string>;
        paddingBottom: PropTypes.Requireable<string>;
        paddingLeft: PropTypes.Requireable<string>;
        margin: PropTypes.Requireable<string>;
        marginTop: PropTypes.Requireable<string>;
        marginRight: PropTypes.Requireable<string>;
        marginBottom: PropTypes.Requireable<string>;
        marginLeft: PropTypes.Requireable<string>;
        width: PropTypes.Requireable<string>;
        height: PropTypes.Requireable<string>;
        minWidth: PropTypes.Requireable<string>;
        maxWidth: PropTypes.Requireable<string>;
        minHeight: PropTypes.Requireable<string>;
        maxHeight: PropTypes.Requireable<string>;
    }>>;
    content: (props: Record<string, any>, propName: string, componentName: string, ...args: any[]) => any;
    color: PropTypes.Requireable<string>;
    className: PropTypes.Requireable<string>;
    children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    as: PropTypes.Requireable<PropTypes.ReactComponentLike>;
    accessibility: PropTypes.Requireable<(...args: any[]) => any>;
};
