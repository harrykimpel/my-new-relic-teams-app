import _findKey from "lodash/findKey";
import { RULE_TYPE } from 'fela-utils';

/**
 * A Fela enhancer that allows to use `:focus-visible`. Uses `what-input` library and its global
 * selector. Modifies generated selectors:
 * `.a:focus-visible {}` => `html[data-whatinput="keyboard"] a:focus`.
 */
var felaFocusVisibleEnhancer = function felaFocusVisibleEnhancer(renderer) {
  return Object.assign({}, renderer, {
    _emitChange: function _emitChange(change) {
      if (change.type === RULE_TYPE && change.selector.indexOf(':focus-visible') !== -1) {
        var pseudo = change.pseudo ? change.pseudo.replace(':focus-visible', ':focus') : undefined;
        var selector = "html[data-whatinput=\"keyboard\"] ".concat(change.selector.replace(':focus-visible', ':focus'));

        var declarationReference = _findKey(renderer.cache, change);

        var enhancedChange = Object.assign({}, change, {
          pseudo: pseudo,
          selector: selector
        }); // Fela has two types for rendering:
        // - DOM via subscriptions that's why `_emitChange()` is replaced, it will notify all
        //   subscriptions
        // - static rendering, it directly accesses `.cache` via `clusterCache()` and generates
        //   stylesheets from changes

        renderer.cache[declarationReference] = enhancedChange;

        renderer._emitChange(enhancedChange);

        return;
      }

      renderer._emitChange(change);
    }
  });
};

export default felaFocusVisibleEnhancer;
//# sourceMappingURL=felaFocusVisibleEnhancer.js.map
