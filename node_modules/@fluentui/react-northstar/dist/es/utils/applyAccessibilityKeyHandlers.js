import _invoke from "lodash/invoke";
import _mapValues from "lodash/mapValues";
import _isPlainObject from "lodash/isPlainObject";
import * as React from 'react';

// Makes sure that 'onKeyDown' is correctly overriden on the slots.
// It should be applied after 'unhandledProps' because they can contain 'onKeyDown' from user and is handled by UTs in isConformant()
var applyAccessibilityKeyHandlers = function applyAccessibilityKeyHandlers(keyHandlers, value) {
  var valIsPropsObject = _isPlainObject(value);

  var valIsReactElement = React.isValidElement(value);
  var slotProps = valIsReactElement && value.props || valIsPropsObject && value || {};
  return _mapValues(keyHandlers, function (accessibilityHandler, handleName) {
    return function (e) {
      accessibilityHandler(e);

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      _invoke.apply(void 0, [slotProps, handleName, e].concat(args));
    };
  });
};

export default applyAccessibilityKeyHandlers;
//# sourceMappingURL=applyAccessibilityKeyHandlers.js.map
