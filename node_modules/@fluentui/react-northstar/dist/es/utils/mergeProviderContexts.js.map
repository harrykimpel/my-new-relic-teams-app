{"version":3,"sources":["utils/mergeProviderContexts.ts"],"names":["mergeThemes","createRenderer","felaRenderer","isBrowser","registeredRenderers","WeakMap","mergeRenderers","current","next","target","document","has","get","createdRenderer","set","mergePerformanceOptions","sources","Object","assign","mergeBooleanValues","reduce","acc","mergeProviderContexts","emptyContext","theme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","rtl","disableAnimations","undefined","performance","enableSanitizeCssPlugin","process","env","NODE_ENV","enableStylesCaching","enableVariablesCaching","enableBooleanVariablesCaching","telemetry","renderer","contexts","mergedRTL","mergedDisableAnimations"],"mappings":"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","sourcesContent":["import { Renderer, StylesContextPerformance, StylesContextPerformanceInput } from '@fluentui/react-bindings';\nimport { mergeThemes } from '@fluentui/styles';\n\nimport { ProviderContextPrepared, ProviderContextInput } from '../types';\nimport { createRenderer, felaRenderer } from './felaRenderer';\nimport isBrowser from './isBrowser';\n\nconst registeredRenderers = new WeakMap<Document, Renderer>();\n\nexport const mergeRenderers = (current: Renderer, next?: Renderer, target?: Document): Renderer => {\n  if (next) {\n    return next;\n  }\n\n  // A valid comparisons, default renderer will be used\n  if (!isBrowser() || typeof target === 'undefined') {\n    return felaRenderer;\n  }\n\n  // SSR logic will be handled by condition above\n  // eslint-disable-next-line no-undef\n  if (target === document) {\n    return felaRenderer;\n  }\n\n  if (registeredRenderers.has(target)) {\n    return registeredRenderers.get(target);\n  }\n\n  const createdRenderer = createRenderer();\n  registeredRenderers.set(target, createdRenderer);\n\n  return createdRenderer;\n};\n\nexport const mergePerformanceOptions = (\n  target: StylesContextPerformance | StylesContextPerformanceInput,\n  ...sources: StylesContextPerformanceInput[]\n) => {\n  return Object.assign(target, ...sources);\n};\n\nexport const mergeBooleanValues = (target, ...sources) => {\n  return sources.reduce((acc, next) => {\n    return typeof next === 'boolean' ? next : acc;\n  }, target);\n};\n\nconst mergeProviderContexts = (\n  ...contexts: (ProviderContextInput | ProviderContextPrepared)[]\n): ProviderContextPrepared => {\n  const emptyContext: ProviderContextPrepared = {\n    theme: {\n      siteVariables: {\n        fontSizes: {},\n      },\n      componentVariables: {},\n      componentStyles: {},\n      fontFaces: [],\n      staticStyles: [],\n      animations: {},\n    },\n    rtl: false,\n    disableAnimations: false,\n    target: isBrowser() ? document : undefined, // eslint-disable-line no-undef\n    performance: {\n      enableSanitizeCssPlugin: process.env.NODE_ENV !== 'production',\n      enableStylesCaching: true,\n      enableVariablesCaching: true,\n      enableBooleanVariablesCaching: false,\n    },\n    telemetry: undefined,\n    renderer: undefined,\n  };\n\n  return contexts.reduce<ProviderContextPrepared>(\n    (acc: ProviderContextPrepared, next: ProviderContextInput | ProviderContextPrepared) => {\n      if (!next) return acc;\n\n      acc.theme = mergeThemes(acc.theme, next.theme);\n\n      // Latest RTL value wins\n      const mergedRTL = mergeBooleanValues(acc.rtl, next.rtl);\n      if (typeof mergedRTL === 'boolean') {\n        acc.rtl = mergedRTL;\n      }\n\n      // Use provided renderer if it is defined\n      acc.target = next.target || acc.target;\n      acc.renderer = mergeRenderers(acc.renderer, next.renderer, acc.target);\n\n      // Latest disableAnimations value wins\n      const mergedDisableAnimations = mergeBooleanValues(acc.disableAnimations, next.disableAnimations);\n      if (typeof mergedDisableAnimations === 'boolean') {\n        acc.disableAnimations = mergedDisableAnimations;\n      }\n\n      acc.performance = mergePerformanceOptions(acc.performance, next.performance || {});\n\n      acc.telemetry = next.telemetry || acc.telemetry;\n\n      return acc;\n    },\n    emptyContext,\n  );\n};\n\nexport default mergeProviderContexts;\n"],"file":"mergeProviderContexts.js"}