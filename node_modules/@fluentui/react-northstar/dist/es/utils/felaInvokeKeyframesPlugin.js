import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _isPlainObject from "lodash/isPlainObject";
import { callable } from '@fluentui/styles';

/**
 * Fela plugin for invoking keyframes with params. The keyframes, defined in the animationName prop,
 * are called with the params object, if defined in the animationName prop.
 *
 * Caution! Infinite recursion is possible in case if style object has links to self in the props
 * tree.
 */
export default (function () {
  var invokeKeyframes = function invokeKeyframes(styles) {
    return Object.keys(styles).reduce(function (acc, cssPropertyName) {
      var cssPropertyValue = styles[cssPropertyName];

      if (_isPlainObject(cssPropertyValue)) {
        if (cssPropertyName === 'animationName') {
          if (cssPropertyValue.keyframe) {
            styles[cssPropertyName] = callable(cssPropertyValue.keyframe)(cssPropertyValue.params || {});
          }

          return Object.assign({}, acc, _defineProperty({}, cssPropertyName, styles[cssPropertyName]));
        }

        return Object.assign({}, acc, _defineProperty({}, cssPropertyName, invokeKeyframes(cssPropertyValue)));
      }

      return Object.assign({}, acc, _defineProperty({}, cssPropertyName, styles[cssPropertyName]));
    }, {});
  };

  return invokeKeyframes;
});
//# sourceMappingURL=felaInvokeKeyframesPlugin.js.map
