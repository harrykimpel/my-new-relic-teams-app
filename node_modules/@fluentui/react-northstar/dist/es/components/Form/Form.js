import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _map from "lodash/map";
import _invoke from "lodash/invoke";
import * as customPropTypes from '@fluentui/react-proptypes';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { UIComponent, childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';
import { withSafeTypeForAs } from '../../types';
import FormField from './FormField';
export var formClassName = 'ui-form';

var Form =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(Form, _UIComponent);

  function Form() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Form);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(_args)));

    _defineProperty(_assertThisInitialized(_this), "handleSubmit", function (e) {
      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()
      // method.

      if (!action) _invoke(e, 'preventDefault');

      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));
    });

    _defineProperty(_assertThisInitialized(_this), "renderFields", function () {
      var fields = _this.props.fields;
      return _map(fields, function (field) {
        return FormField.create(field);
      });
    });

    return _this;
  }

  _createClass(Form, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          action = _this$props.action,
          children = _this$props.children;
      return React.createElement(ElementType, _extends({
        className: classes.root,
        action: action,
        onSubmit: this.handleSubmit
      }, rtlTextContainer.getAttributes({
        forElements: [children]
      }), accessibility.attributes.root, unhandledProps), childrenExist(children) ? children : this.renderFields());
    }
  }]);

  return Form;
}(UIComponent);
/**
 * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.
 */


_defineProperty(Form, "create", void 0);

_defineProperty(Form, "displayName", 'Form');

_defineProperty(Form, "deprecated_className", formClassName);

_defineProperty(Form, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  content: false
}), {
  action: PropTypes.string,
  fields: customPropTypes.collectionShorthand,
  onSubmit: PropTypes.func
}));

_defineProperty(Form, "defaultProps", {
  as: 'form'
});

_defineProperty(Form, "Field", FormField);

export default withSafeTypeForAs(Form);
//# sourceMappingURL=Form.js.map
