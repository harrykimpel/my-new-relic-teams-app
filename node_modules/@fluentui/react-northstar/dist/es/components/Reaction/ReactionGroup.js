import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _map from "lodash/map";
import _isNil from "lodash/isNil";
import * as customPropTypes from '@fluentui/react-proptypes';
import * as React from 'react';
import { withSafeTypeForAs } from '../../types';
import { UIComponent, childrenExist, commonPropTypes, rtlTextContainer, createShorthandFactory } from '../../utils';
import Reaction from './Reaction';
export var reactionGroupClassName = 'ui-reactions';

var ReactionGroup =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(ReactionGroup, _UIComponent);

  function ReactionGroup() {
    _classCallCheck(this, ReactionGroup);

    return _possibleConstructorReturn(this, _getPrototypeOf(ReactionGroup).apply(this, arguments));
  }

  _createClass(ReactionGroup, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          styles = _ref.styles,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          items = _this$props.items,
          content = _this$props.content;

      if (_isNil(items)) {
        return React.createElement(ElementType, _extends({}, accessibility.attributes.root, rtlTextContainer.getAttributes({
          forElements: [children, content]
        }), unhandledProps, {
          className: classes.root
        }), childrenExist(children) ? children : content);
      }

      return React.createElement(ElementType, _extends({}, unhandledProps, {
        className: classes.root
      }), _map(items, function (reaction) {
        return Reaction.create(reaction, {
          defaultProps: function defaultProps() {
            return {
              styles: styles.reaction
            };
          }
        });
      }));
    }
  }]);

  return ReactionGroup;
}(UIComponent);

_defineProperty(ReactionGroup, "create", void 0);

_defineProperty(ReactionGroup, "displayName", 'ReactionGroup');

_defineProperty(ReactionGroup, "deprecated_className", reactionGroupClassName);

_defineProperty(ReactionGroup, "propTypes", Object.assign({}, commonPropTypes.createCommon(), {
  items: customPropTypes.collectionShorthand
}));

ReactionGroup.create = createShorthandFactory({
  Component: ReactionGroup,
  mappedProp: 'content',
  mappedArrayProp: 'items'
});
/**
 * A ReactionGroup groups multiple Reaction elements.
 */

export default withSafeTypeForAs(ReactionGroup);
//# sourceMappingURL=ReactionGroup.js.map
