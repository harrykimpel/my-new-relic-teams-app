{"version":3,"sources":["components/Reaction/Reaction.tsx"],"names":["customPropTypes","React","UIComponent","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","withSafeTypeForAs","Box","ReactionGroup","reactionClassName","reactionSlotClassNames","icon","content","Reaction","accessibility","ElementType","classes","styles","unhandledProps","props","children","getAttributes","forElements","attributes","root","create","defaultProps","className","createCommon","shorthandAllowingChildren","as","Component","mappedProp"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SACEC,WADF,EAEEC,aAFF,EAKEC,eALF,EAMEC,gBANF,EAOEC,sBAPF,QAUO,aAVP;AAaA,SAAqCC,iBAArC,QAA8D,aAA9D;AACA,OAAOC,GAAP,MAA8B,YAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAoBA,OAAO,IAAMC,iBAAiB,GAAG,aAA1B;AACP,OAAO,IAAMC,sBAA8C,GAAG;AAC5DC,EAAAA,IAAI,YAAKF,iBAAL,WADwD;AAE5DG,EAAAA,OAAO,YAAKH,iBAAL;AAFqD,CAAvD;;IAKDI,Q;;;;;;;;;;;;;0CAoB6E;AAAA,UAA/DC,aAA+D,QAA/DA,aAA+D;AAAA,UAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,UAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,UAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,UAAlBC,cAAkB,QAAlBA,cAAkB;AAAA,wBAC3C,KAAKC,KADsC;AAAA,UACvEC,QADuE,eACvEA,QADuE;AAAA,UAC7DT,IAD6D,eAC7DA,IAD6D;AAAA,UACvDC,OADuD,eACvDA,OADuD;AAG/E,aACE,oBAAC,WAAD,eACMR,gBAAgB,CAACiB,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACF,QAAD;AAAf,OAA/B,CADN,EAEMN,aAAa,CAACS,UAAd,CAAyBC,IAF/B,EAGMN,cAHN;AAIE,QAAA,SAAS,EAAEF,OAAO,CAACQ;AAJrB,UAMGtB,aAAa,CAACkB,QAAD,CAAb,GACCA,QADD,GAGC,0CACGb,GAAG,CAACkB,MAAJ,CAAWd,IAAX,EAAiB;AAChBe,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnBC,YAAAA,SAAS,EAAEjB,sBAAsB,CAACC,IADf;AAEnBM,YAAAA,MAAM,EAAEA,MAAM,CAACN;AAFI,WAAP;AAAA;AADE,OAAjB,CADH,EAOGJ,GAAG,CAACkB,MAAJ,CAAWb,OAAX,EAAoB;AACnBc,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnBC,YAAAA,SAAS,EAAEjB,sBAAsB,CAACE,OADf;AAEnBK,YAAAA,MAAM,EAAEA,MAAM,CAACL;AAFI,WAAP;AAAA;AADK,OAApB,CAPH,CATJ,CADF;AA2BD;;;;EAlDoBX,W;;gBAAjBY,Q;;gBAAAA,Q,0BAG0BJ,iB;;gBAH1BI,Q,iBAKiB,U;;gBALjBA,Q,iCAQCV,eAAe,CAACyB,YAAhB,CAA6B;AAC9BhB,EAAAA,OAAO,EAAE;AADqB,CAA7B,C;AAGHD,EAAAA,IAAI,EAAEZ,eAAe,CAAC8B;;;gBAXpBhB,Q,kBAckB;AACpBiB,EAAAA,EAAE,EAAE;AADgB,C;;gBAdlBjB,Q,WAkBWL,a;;AAmCjBK,QAAQ,CAACY,MAAT,GAAkBpB,sBAAsB,CAAC;AAAE0B,EAAAA,SAAS,EAAElB,QAAb;AAAuBmB,EAAAA,UAAU,EAAE;AAAnC,CAAD,CAAxC;AAEA;;;;;AAIA,eAAe1B,iBAAiB,CAAyCO,QAAzC,CAAhC","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\n\nimport {\n  UIComponent,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  ContentComponentProps,\n  ShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { WithAsProp, ShorthandValue, withSafeTypeForAs } from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport ReactionGroup from './ReactionGroup';\n\nexport interface ReactionSlotClassNames {\n  icon: string;\n  content: string;\n}\n\nexport interface ReactionProps\n  extends UIComponentProps<ReactionProps>,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n\n  /** A reaction can have icon for the indicator of the reaction. */\n  icon?: ShorthandValue<BoxProps>;\n}\n\nexport const reactionClassName = 'ui-reaction';\nexport const reactionSlotClassNames: ReactionSlotClassNames = {\n  icon: `${reactionClassName}__icon`,\n  content: `${reactionClassName}__content`,\n};\n\nclass Reaction extends UIComponent<WithAsProp<ReactionProps>> {\n  static create: ShorthandFactory<ReactionProps>;\n\n  static deprecated_className = reactionClassName;\n\n  static displayName = 'Reaction';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: 'shorthand',\n    }),\n    icon: customPropTypes.shorthandAllowingChildren,\n  };\n\n  static defaultProps = {\n    as: 'span',\n  };\n\n  static Group = ReactionGroup;\n\n  renderComponent({ accessibility, ElementType, classes, styles, unhandledProps }) {\n    const { children, icon, content } = this.props;\n\n    return (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {Box.create(icon, {\n              defaultProps: () => ({\n                className: reactionSlotClassNames.icon,\n                styles: styles.icon,\n              }),\n            })}\n            {Box.create(content, {\n              defaultProps: () => ({\n                className: reactionSlotClassNames.content,\n                styles: styles.content,\n              }),\n            })}\n          </>\n        )}\n      </ElementType>\n    );\n  }\n}\n\nReaction.create = createShorthandFactory({ Component: Reaction, mappedProp: 'content' });\n\n/**\n * A Reaction indicates user's emotion or perception.\n * Used to display user's reaction for entity in Chat (e.g. message).\n */\nexport default withSafeTypeForAs<typeof Reaction, ReactionProps, 'span'>(Reaction);\n"],"file":"Reaction.js"}