{"version":3,"sources":["components/Reaction/ReactionGroup.tsx"],"names":["customPropTypes","React","withSafeTypeForAs","UIComponent","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","Reaction","reactionGroupClassName","ReactionGroup","ElementType","classes","accessibility","styles","unhandledProps","props","children","items","content","attributes","root","getAttributes","forElements","reaction","create","defaultProps","createCommon","collectionShorthand","Component","mappedProp","mappedArrayProp"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAAqBC,iBAArB,QAAmE,aAAnE;AACA,SACEC,WADF,EAEEC,aAFF,EAMEC,eANF,EAOEC,gBAPF,EAQEC,sBARF,QAUO,aAVP;AAYA,OAAOC,QAAP,MAAwC,YAAxC;AAYA,OAAO,IAAMC,sBAAsB,GAAG,cAA/B;;IAEDC,a;;;;;;;;;;;;;0CAY8F;AAAA,UAAhFC,WAAgF,QAAhFA,WAAgF;AAAA,UAAnEC,OAAmE,QAAnEA,OAAmE;AAAA,UAA1DC,aAA0D,QAA1DA,aAA0D;AAAA,UAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,UAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,wBAC3D,KAAKC,KADsD;AAAA,UACxFC,QADwF,eACxFA,QADwF;AAAA,UAC9EC,KAD8E,eAC9EA,KAD8E;AAAA,UACvEC,OADuE,eACvEA,OADuE;;AAEhG,UAAI,OAAQD,KAAR,CAAJ,EAAoB;AAClB,eACE,oBAAC,WAAD,eACML,aAAa,CAACO,UAAd,CAAyBC,IAD/B,EAEMf,gBAAgB,CAACgB,aAAjB,CAA+B;AAAEC,UAAAA,WAAW,EAAE,CAACN,QAAD,EAAWE,OAAX;AAAf,SAA/B,CAFN,EAGMJ,cAHN;AAIE,UAAA,SAAS,EAAEH,OAAO,CAACS;AAJrB,YAMGjB,aAAa,CAACa,QAAD,CAAb,GAA0BA,QAA1B,GAAqCE,OANxC,CADF;AAUD;;AAED,aACE,oBAAC,WAAD,eAAiBJ,cAAjB;AAAiC,QAAA,SAAS,EAAEH,OAAO,CAACS;AAApD,UACG,KAAMH,KAAN,EAAa,UAAAM,QAAQ;AAAA,eACpBhB,QAAQ,CAACiB,MAAT,CAAgBD,QAAhB,EAA0B;AACxBE,UAAAA,YAAY,EAAE;AAAA,mBAAO;AACnBZ,cAAAA,MAAM,EAAEA,MAAM,CAACU;AADI,aAAP;AAAA;AADU,SAA1B,CADoB;AAAA,OAArB,CADH,CADF;AAWD;;;;EAtCyBrB,W;;gBAAtBO,a;;gBAAAA,a,iBAGiB,e;;gBAHjBA,a,0BAK0BD,sB;;gBAL1BC,a,iCAQCL,eAAe,CAACsB,YAAhB,E;AACHT,EAAAA,KAAK,EAAElB,eAAe,CAAC4B;;;AAgC3BlB,aAAa,CAACe,MAAd,GAAuBlB,sBAAsB,CAAC;AAC5CsB,EAAAA,SAAS,EAAEnB,aADiC;AAE5CoB,EAAAA,UAAU,EAAE,SAFgC;AAG5CC,EAAAA,eAAe,EAAE;AAH2B,CAAD,CAA7C;AAMA;;;;AAGA,eAAe7B,iBAAiB,CAA2CQ,aAA3C,CAAhC","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { WithAsProp, withSafeTypeForAs, ShorthandCollection } from '../../types';\nimport {\n  UIComponent,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  ShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\nimport Reaction, { ReactionProps } from './Reaction';\n\nexport interface ReactionGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n\n  /** The reactions contained inside the reaction group. */\n  items?: ShorthandCollection<ReactionProps>;\n}\n\nexport const reactionGroupClassName = 'ui-reactions';\n\nclass ReactionGroup extends UIComponent<WithAsProp<ReactionGroupProps>> {\n  static create: ShorthandFactory<ReactionGroupProps>;\n\n  static displayName = 'ReactionGroup';\n\n  static deprecated_className = reactionGroupClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    items: customPropTypes.collectionShorthand,\n  };\n\n  renderComponent({ ElementType, classes, accessibility, styles, unhandledProps }): React.ReactNode {\n    const { children, items, content } = this.props;\n    if (_.isNil(items)) {\n      return (\n        <ElementType\n          {...accessibility.attributes.root}\n          {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n          {...unhandledProps}\n          className={classes.root}\n        >\n          {childrenExist(children) ? children : content}\n        </ElementType>\n      );\n    }\n\n    return (\n      <ElementType {...unhandledProps} className={classes.root}>\n        {_.map(items, reaction =>\n          Reaction.create(reaction, {\n            defaultProps: () => ({\n              styles: styles.reaction,\n            }),\n          }),\n        )}\n      </ElementType>\n    );\n  }\n}\n\nReactionGroup.create = createShorthandFactory({\n  Component: ReactionGroup,\n  mappedProp: 'content',\n  mappedArrayProp: 'items',\n});\n\n/**\n * A ReactionGroup groups multiple Reaction elements.\n */\nexport default withSafeTypeForAs<typeof ReactionGroup, ReactionGroupProps>(ReactionGroup);\n"],"file":"ReactionGroup.js"}