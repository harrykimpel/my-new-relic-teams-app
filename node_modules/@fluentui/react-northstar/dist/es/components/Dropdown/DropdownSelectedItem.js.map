{"version":3,"sources":["components/Dropdown/DropdownSelectedItem.tsx"],"names":["Ref","customPropTypes","React","PropTypes","CloseIcon","keyboardKey","withSafeTypeForAs","createShorthandFactory","UIComponent","commonPropTypes","Image","Label","Box","dropdownSelectedItemClassName","dropdownSelectedItemSlotClassNames","header","icon","image","DropdownSelectedItem","createRef","e","props","predefinedProps","onClick","iconProps","stopPropagation","onKeyDown","getCode","Enter","prevProps","active","itemRef","current","focus","unhandledProps","classes","styles","contentElement","create","defaultProps","as","className","name","children","ComponentType","overrideProps","handleIconOverrides","imageProps","avatar","root","handleClick","handleKeyDown","createCommon","accessibility","bool","itemShorthand","shorthandAllowingChildren","itemShorthandWithoutJSX","func","onRemove","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\n\nimport keyboardKey from 'keyboard-key';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  ComponentKeyboardEventHandler,\n  withSafeTypeForAs,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport {\n  createShorthandFactory,\n  UIComponent,\n  RenderResultConfig,\n  commonPropTypes,\n  ShorthandFactory,\n} from '../../utils';\nimport Image, { ImageProps } from '../Image/Image';\nimport Label from '../Label/Label';\nimport Box, { BoxProps } from '../Box/Box';\n\nexport interface DropdownSelectedItemSlotClassNames {\n  header: string;\n  icon: string;\n  image: string;\n}\n\nexport interface DropdownSelectedItemProps extends UIComponentProps<DropdownSelectedItemProps> {\n  /** A selected item can be active. */\n  active?: boolean;\n\n  /** Header of the selected item. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Icon of the selected item. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** Image of the selected item. */\n  image?: ShorthandValue<ImageProps>;\n\n  /**\n   * Called on selected item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called on selected item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called when item is removed from the selection list.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onRemove?: ComponentEventHandler<DropdownSelectedItemProps>;\n}\n\nexport const dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';\nexport const dropdownSelectedItemSlotClassNames: DropdownSelectedItemSlotClassNames = {\n  header: `${dropdownSelectedItemClassName}__header`,\n  icon: `${dropdownSelectedItemClassName}__icon`,\n  image: `${dropdownSelectedItemClassName}__image`,\n};\n\nclass DropdownSelectedItem extends UIComponent<WithAsProp<DropdownSelectedItemProps>, any> {\n  itemRef = React.createRef<HTMLElement>();\n\n  static displayName = 'DropdownSelectedItem';\n  static create: ShorthandFactory<DropdownSelectedItemProps>;\n  static deprecated_className = dropdownSelectedItemClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      children: false,\n    }),\n    active: PropTypes.bool,\n    header: customPropTypes.itemShorthand,\n    icon: customPropTypes.shorthandAllowingChildren,\n    image: customPropTypes.itemShorthandWithoutJSX,\n    onClick: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onRemove: PropTypes.func,\n  };\n\n  static defaultProps = {\n    // TODO: fix me\n    icon: <CloseIcon />,\n  };\n\n  componentDidUpdate(prevProps: DropdownSelectedItemProps) {\n    if (!prevProps.active && this.props.active) {\n      this.itemRef.current.focus();\n    }\n  }\n\n  handleClick = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  handleKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onKeyDown', e, this.props);\n  };\n\n  handleIconOverrides = props => (predefinedProps: BoxProps) => ({\n    ...props,\n    onClick: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      _.invoke(this.props, 'onRemove', e, this.props);\n      _.invoke(predefinedProps, 'onClick', e, iconProps);\n    },\n    onKeyDown: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      if (keyboardKey.getCode(e) === keyboardKey.Enter) {\n        _.invoke(this.props, 'onRemove', e, this.props);\n      }\n      _.invoke(predefinedProps, 'onKeyDown', e, iconProps);\n    },\n  });\n\n  renderComponent({ unhandledProps, classes, styles }: RenderResultConfig<DropdownSelectedItemProps>) {\n    const { active, header, icon, image } = this.props;\n\n    const contentElement = Box.create(header, {\n      defaultProps: () => ({\n        as: 'span',\n        className: dropdownSelectedItemSlotClassNames.header,\n        styles: styles.header,\n      }),\n    });\n    const iconProps = _.isNil(icon)\n      ? icon\n      : {\n          name: null,\n          children: (ComponentType, props) =>\n            Box.create(icon, {\n              defaultProps: () => ({\n                'aria-label': `Remove ${header} from selection.`, // TODO: Extract this in a behaviour.\n                className: dropdownSelectedItemSlotClassNames.icon,\n                styles: styles.icon,\n              }),\n              overrideProps: this.handleIconOverrides(props),\n            }),\n        };\n    const imageProps = _.isNil(image)\n      ? image\n      : {\n          children: (ComponentType, props) =>\n            Image.create(image, {\n              defaultProps: () => ({\n                avatar: true,\n                className: dropdownSelectedItemSlotClassNames.image,\n                styles: styles.image,\n              }),\n              overrideProps: props,\n            }),\n        };\n\n    return (\n      <Ref innerRef={this.itemRef}>\n        <Label\n          className={classes.root}\n          tabIndex={active ? 0 : -1}\n          styles={styles.root}\n          circular\n          onClick={this.handleClick}\n          onKeyDown={this.handleKeyDown}\n          content={contentElement}\n          icon={iconProps}\n          image={imageProps}\n          {...unhandledProps}\n        />\n      </Ref>\n    );\n  }\n}\n\nDropdownSelectedItem.create = createShorthandFactory({\n  Component: DropdownSelectedItem,\n  mappedProp: 'header',\n});\n\n/**\n * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.\n */\nexport default withSafeTypeForAs<typeof DropdownSelectedItem, DropdownSelectedItemProps>(DropdownSelectedItem);\n"],"file":"DropdownSelectedItem.js"}