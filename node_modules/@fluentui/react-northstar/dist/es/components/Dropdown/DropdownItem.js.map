{"version":3,"sources":["components/Dropdown/DropdownItem.tsx"],"names":["customPropTypes","indicatorBehavior","React","PropTypes","ThemeContext","getElementType","useUnhandledProps","useStyles","useTelemetry","cx","createShorthandFactory","commonPropTypes","withSafeTypeForAs","Image","Box","dropdownItemClassName","dropdownItemSlotClassNames","main","content","header","image","checkableIndicator","DropdownItem","props","context","useContext","displayName","telemetry","setStart","setEnd","active","accessibilityItemProps","className","design","isFromKeyboard","styles","checkable","selected","variables","mapPropsToStyles","hasContent","hasHeader","mapPropsToInlineStyles","rtl","classes","resolvedStyles","ElementType","unhandledProps","handledProps","handleClick","e","contentElement","create","defaultProps","headerElement","endMediaElement","accessibility","imageElement","avatar","media","element","root","as","propTypes","createCommon","children","object","bool","itemShorthand","shorthandAllowingChildren","disabled","itemShorthandWithoutJSX","onClick","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { indicatorBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { getElementType, useUnhandledProps, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport cx from 'classnames';\n\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport {\n  ShorthandValue,\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport Image, { ImageProps } from '../Image/Image';\nimport Box, { BoxProps } from '../Box/Box';\n\nexport interface DropdownItemSlotClassNames {\n  content: string;\n  header: string;\n  image: string;\n  checkableIndicator: string;\n  main: string;\n}\n\nexport interface DropdownItemProps extends UIComponentProps<DropdownItemProps> {\n  /** A dropdown item can be active. */\n  active?: boolean;\n\n  /** Item's accessibility props. */\n  accessibilityItemProps?: any;\n\n  /** Item's content. */\n  content?: ShorthandValue<BoxProps>;\n\n  /** Item can show check indicator if selected. */\n  checkable?: boolean;\n\n  /** A slot for a checkable indicator. */\n  checkableIndicator?: ShorthandValue<BoxProps>;\n\n  /** A dropdown item can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Item's header. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Item's image. */\n  image?: ShorthandValue<ImageProps>;\n\n  /** Indicated whether the item has been set active by keyboard. */\n  isFromKeyboard?: boolean;\n\n  /**\n   * Called on dropdown item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownItemProps>;\n\n  /** A dropdown item can be selected if single selection Dropdown is used. */\n  selected?: boolean;\n}\n\nexport const dropdownItemClassName = 'ui-dropdown__item';\nexport const dropdownItemSlotClassNames: DropdownItemSlotClassNames = {\n  main: `${dropdownItemClassName}__main`,\n  content: `${dropdownItemClassName}__content`,\n  header: `${dropdownItemClassName}__header`,\n  image: `${dropdownItemClassName}__image`,\n  checkableIndicator: `${dropdownItemClassName}__checkable-indicator`,\n};\n\nconst DropdownItem: React.FC<WithAsProp<DropdownItemProps> & { index: number }> &\n  FluentComponentStaticProps<DropdownItemProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DropdownItem.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    active,\n    accessibilityItemProps,\n    className,\n    content,\n    design,\n    header,\n    image,\n    isFromKeyboard,\n    styles,\n    checkable,\n    checkableIndicator,\n    selected,\n    variables,\n  } = props;\n\n  const { classes, styles: resolvedStyles } = useStyles(DropdownItem.displayName, {\n    className: dropdownItemClassName,\n    mapPropsToStyles: () => ({\n      active,\n      isFromKeyboard,\n      selected,\n      hasContent: !!content,\n      hasHeader: !!header,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DropdownItem.handledProps, props);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      className: dropdownItemSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n  const headerElement = Box.create(header, {\n    defaultProps: () => ({\n      className: dropdownItemSlotClassNames.header,\n      styles: resolvedStyles.header,\n    }),\n  });\n  const endMediaElement =\n    selected && checkable\n      ? Box.create(checkableIndicator, {\n          defaultProps: () => ({\n            className: dropdownItemSlotClassNames.checkableIndicator,\n            styles: resolvedStyles.checkableIndicator,\n            accessibility: indicatorBehavior,\n          }),\n        })\n      : null;\n  const imageElement = Box.create(\n    Image.create(image, {\n      defaultProps: () => ({\n        avatar: true,\n        className: dropdownItemSlotClassNames.image,\n        styles: resolvedStyles.image,\n      }),\n    }),\n    {\n      defaultProps: () => ({\n        className: dropdownItemSlotClassNames.image,\n        styles: resolvedStyles.media,\n      }),\n    },\n  );\n\n  const element = (\n    <ElementType className={classes.root} onClick={handleClick} {...accessibilityItemProps} {...unhandledProps}>\n      {imageElement}\n\n      <div className={cx(dropdownItemSlotClassNames.main, classes.main)}>\n        {headerElement}\n        {contentElement}\n      </div>\n\n      {endMediaElement}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nDropdownItem.displayName = 'DropdownItem';\n\nDropdownItem.defaultProps = {\n  as: 'li',\n  checkableIndicator: {},\n};\n\nDropdownItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityItemProps: PropTypes.object,\n  active: PropTypes.bool,\n  content: customPropTypes.itemShorthand,\n  checkable: PropTypes.bool,\n  checkableIndicator: customPropTypes.shorthandAllowingChildren,\n  disabled: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  onClick: PropTypes.func,\n  isFromKeyboard: PropTypes.bool,\n  selected: PropTypes.bool,\n};\nDropdownItem.handledProps = Object.keys(DropdownItem.propTypes) as any;\n\nDropdownItem.create = createShorthandFactory({ Component: DropdownItem, mappedProp: 'header' });\n\n/**\n * A DropdownItem represents an option of Dropdown list.\n * Displays an item with optional rich media metadata.\n */\nexport default withSafeTypeForAs<typeof DropdownItem, DropdownItemProps>(DropdownItem);\n"],"file":"DropdownItem.js"}