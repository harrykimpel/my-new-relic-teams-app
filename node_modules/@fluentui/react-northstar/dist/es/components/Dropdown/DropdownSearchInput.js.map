{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["customPropTypes","React","PropTypes","ThemeContext","createShorthandFactory","commonPropTypes","withSafeTypeForAs","Input","useTelemetry","useStyles","useUnhandledProps","dropdownSearchInputClassName","dropdownSearchInputSlotClassNames","input","wrapper","DropdownSearchInput","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibilityComboboxProps","accessibilityInputProps","inputRef","inline","placeholder","disabled","className","design","styles","variables","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","resolvedStyles","handleFocus","e","handleInputKeyDown","handleInputBlur","handleKeyUp","element","root","type","onBlur","onKeyDown","propTypes","createCommon","accessibility","children","content","object","bool","ref","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport Input from '../Input/Input';\nimport { useTelemetry, useStyles, useUnhandledProps } from '@fluentui/react-bindings';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nexport const dropdownSearchInputClassName = 'ui-dropdown__searchinput';\nexport const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames = {\n  input: `${dropdownSearchInputClassName}__input`,\n  wrapper: `${dropdownSearchInputClassName}__wrapper`,\n};\n\nexport type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;\n\nexport const DropdownSearchInput: React.FC<WithAsProp<DropdownSearchInputProps>> &\n  FluentComponentStaticProps<DropdownSearchInputProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DropdownSearchInput.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibilityComboboxProps,\n    accessibilityInputProps,\n    inputRef,\n    inline,\n    placeholder,\n    disabled,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(DropdownSearchInput.handledProps, props);\n\n  const { styles: resolvedStyles } = useStyles<DropdownSearchInputStylesProps>(DropdownSearchInput.displayName, {\n    className: dropdownSearchInputClassName,\n    mapPropsToStyles: () => ({ inline }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputKeyDown', e, props);\n  };\n\n  const handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputBlur', e, props);\n  };\n\n  const handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyUp', e, props);\n  };\n\n  const element = (\n    <Input\n      disabled={disabled}\n      inputRef={inputRef}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      {...unhandledProps}\n      wrapper={{\n        className: dropdownSearchInputSlotClassNames.wrapper,\n        styles: resolvedStyles.root,\n        ...accessibilityComboboxProps,\n        ...unhandledProps.wrapper,\n      }}\n      input={{\n        type: 'text',\n        className: dropdownSearchInputSlotClassNames.input,\n        styles: resolvedStyles.input,\n        placeholder,\n        onBlur: handleInputBlur,\n        onKeyDown: handleInputKeyDown,\n        ...accessibilityInputProps,\n        ...unhandledProps.input,\n      }}\n    />\n  );\n  setEnd();\n  return element;\n};\n\nDropdownSearchInput.displayName = 'DropdownSearchInput';\n\nDropdownSearchInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nDropdownSearchInput.handledProps = Object.keys(DropdownSearchInput.propTypes) as any;\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport default withSafeTypeForAs<typeof DropdownSearchInput, DropdownSearchInputProps>(DropdownSearchInput);\n"],"file":"DropdownSearchInput.js"}