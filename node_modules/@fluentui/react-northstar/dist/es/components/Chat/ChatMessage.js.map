{"version":3,"sources":["components/Chat/ChatMessage.tsx"],"names":["IS_FOCUSABLE_ATTRIBUTE","chatMessageBehavior","menuAsToolbarBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useContextSelector","Ref","customPropTypes","cx","PropTypes","React","ThemeContext","getScrollParent","Popper","getPopperPropsFromShorthand","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","withSafeTypeForAs","Box","Label","Menu","Text","Reaction","ChatItemContext","chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","timestamp","badge","content","reactionGroup","ChatMessage","props","context","useContext","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","accessibility","badgePosition","children","className","design","mine","positionActionMenu","reactionGroupPosition","styles","variables","overflow","unstable_overflow","useState","focused","setFocused","messageNode","setMessageNode","updateActionsMenuPosition","useRef","getA11Props","actionHandlers","preventDefault","event","currentTarget","target","focus","stopPropagation","mapPropsToStyles","hasBadge","hasReactionGroup","mapPropsToInlineStyles","rtl","classes","resolvedStyles","handleFocus","e","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","renderActionMenu","actionMenuElement","create","defaultProps","modifiers","name","options","fallbackPlacements","boundary","scheduleUpdate","current","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","element","unstable_wrapWithFocusZone","onBlur","onFocus","onMouseEnter","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  IS_FOCUSABLE_ATTRIBUTE,\n  chatMessageBehavior,\n  menuAsToolbarBehavior,\n  ChatMessageBehaviorProps,\n} from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  getScrollParent,\n  Popper,\n  PopperShorthandProps,\n  getPopperPropsFromShorthand,\n  PopperModifiers,\n} from '../../utils/positioner';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  WithAsProp,\n  ShorthandValue,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport Label, { LabelProps } from '../Label/Label';\nimport Menu, { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport Text, { TextProps } from '../Text/Text';\nimport Reaction, { ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { ChatItemContext } from './chatItemContext';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  timestamp: string;\n  badge: string;\n  content: string;\n  reactionGroup: string;\n}\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /** Menu with actions of the message. */\n  actionMenu?: ShorthandValue<MenuProps & { popper?: PopperShorthandProps }> | ShorthandCollection<MenuItemProps>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'mine'> & {\n  focused: boolean;\n  hasBadge: boolean;\n  hasReactionGroup: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n  badge: `${chatMessageClassName}__badge`,\n  content: `${chatMessageClassName}__content`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n};\n\nconst ChatMessage: React.FC<WithAsProp<ChatMessageProps>> & FluentComponentStaticProps<ChatMessageProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const {\n    accessibility,\n    actionMenu,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    content,\n    design,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    timestamp,\n    styles,\n    variables,\n    unstable_overflow: overflow,\n  } = props;\n\n  const [focused, setFocused] = React.useState<boolean>(false);\n  const [messageNode, setMessageNode] = React.useState<HTMLElement | null>(null);\n\n  const updateActionsMenuPosition = React.useRef<(() => void) | null>(null);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        if (messageNode) {\n          messageNode.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      focused,\n      mine,\n      hasBadge: !!badge,\n      hasReactionGroup: !!reactionGroup,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n    });\n\n    if (!actionMenuElement) {\n      return actionMenuElement;\n    }\n\n    const modifiers: PopperModifiers | undefined = positionActionMenu && [\n      // https://popper.js.org/docs/v2/modifiers/flip/\n      // Forces to flip only in \"top-*\" positions\n      { name: 'flip', options: { fallbackPlacements: ['top'] } },\n      overflow && {\n        name: 'preventOverflow',\n        options: { boundary: getScrollParent(messageNode) },\n      },\n    ];\n\n    return (\n      <Popper\n        enabled={positionActionMenu}\n        align=\"end\"\n        modifiers={modifiers}\n        position=\"above\"\n        positionFixed={overflow}\n        targetRef={messageNode}\n        {...getPopperPropsFromShorthand(actionMenu)}\n      >\n        {({ scheduleUpdate }) => {\n          updateActionsMenuPosition.current = scheduleUpdate;\n\n          return actionMenuElement;\n        }}\n      </Popper>\n    );\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = Box.create(content, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const element = (\n    <Ref innerRef={setMessageNode}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? (\n            children\n          ) : (\n            <>\n              {actionMenuElement}\n              {badgePosition === 'start' && badgeElement}\n              {authorElement}\n              {timestampElement}\n              {reactionGroupPosition === 'start' && reactionGroupElement}\n              {messageContent}\n              {reactionGroupPosition === 'end' && reactionGroupElement}\n              {badgePosition === 'end' && badgeElement}\n            </>\n          )}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n};\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  accessibility: chatMessageBehavior,\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  mine: PropTypes.bool,\n  timestamp: customPropTypes.itemShorthand,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  unstable_overflow: PropTypes.bool,\n};\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport default withSafeTypeForAs<typeof ChatMessage, ChatMessageProps>(ChatMessage);\n"],"file":"ChatMessage.js"}