{"version":3,"sources":["components/Menu/MenuItem.tsx"],"names":["menuItemBehavior","submenuBehavior","indicatorBehavior","focusAsync","EventListener","Ref","customPropTypes","cx","PropTypes","React","AutoControlledComponent","childrenExist","createShorthandFactory","doesNodeContainClick","commonPropTypes","isFromKeyboard","applyAccessibilityKeyHandlers","Menu","Box","withSafeTypeForAs","Popper","getPopperPropsFromShorthand","menuItemClassName","menuItemSlotClassNames","submenu","wrapper","indicator","MenuItem","createRef","e","props","inSubmenu","currentTarget","contains","relatedTarget","trySetMenuOpen","performClick","event","defaultPrevented","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","stopPropagation","isSubmenuOpen","itemRef","current","context","target","menuRef","active","menu","state","menuOpen","preventDefault","disabled","setState","forceTriggerFocus","shouldStopPropagation","vertical","ElementType","classes","accessibility","unhandledProps","styles","rtl","children","content","icon","primary","secondary","menuItemInner","root","handleBlur","handleFocus","attributes","keyHandlers","onClick","create","defaultProps","as","className","maybeSubmenu","outsideClickHandler","overrideProps","onBlur","handleWrapperBlur","newValue","onStateChanged","createCommon","bool","shorthandAllowingChildren","iconOnly","index","number","itemPosition","itemsCount","func","onFocus","pills","pointing","oneOfType","oneOf","every","disallow","underlined","node","object","itemShorthand","collectionShorthand","defaultMenuOpen","onActiveChanged","onMenuOpenChange","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, menuItemBehavior, submenuBehavior, indicatorBehavior } from '@fluentui/accessibility';\nimport { focusAsync } from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  AutoControlledComponent,\n  childrenExist,\n  createShorthandFactory,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  isFromKeyboard,\n  applyAccessibilityKeyHandlers,\n  ShorthandFactory,\n} from '../../utils';\nimport Menu, { MenuProps, MenuShorthandKinds } from './Menu';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, WithAsProp, ShorthandValue, ShorthandCollection, withSafeTypeForAs } from '../../types';\nimport { Popper, PopperShorthandProps, getPopperPropsFromShorthand } from '../../utils/positioner';\n\nexport interface MenuItemSlotClassNames {\n  wrapper: string;\n  submenu: string;\n  indicator: string;\n}\n\nexport interface MenuItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuItemAsToolbarButtonBehavior, tabBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** A menu item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Menu Item Icon */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A menu may have just icons. */\n  iconOnly?: boolean;\n\n  /** MenuItem index inside Menu. */\n  index?: number;\n\n  /** MenuItem position inside Menu (skipping separators). */\n  itemPosition?: number;\n\n  /** MenuItem count inside Menu. */\n  itemsCount?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<MenuItemProps>;\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu item can have primary type. */\n  primary?: boolean;\n\n  /** The menu item can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<MenuItemProps, MenuShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /** Callback for setting the current menu item as active element in the menu. */\n  onActiveChanged?: ComponentEventHandler<MenuItemProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<MenuItemProps>;\n}\n\nexport interface MenuItemState {\n  isFromKeyboard: boolean;\n  menuOpen: boolean;\n}\n\nexport const menuItemClassName = 'ui-menu__item';\nexport const menuItemSlotClassNames: MenuItemSlotClassNames = {\n  submenu: `${menuItemClassName}__submenu`,\n  wrapper: `${menuItemClassName}__wrapper`,\n  indicator: `${menuItemClassName}__indicator`,\n};\n\nclass MenuItem extends AutoControlledComponent<WithAsProp<MenuItemProps>, MenuItemState> {\n  static displayName = 'MenuItem';\n\n  static deprecated_className = menuItemClassName;\n\n  static create: ShorthandFactory<MenuItemProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: customPropTypes.shorthandAllowingChildren,\n    iconOnly: PropTypes.bool,\n    index: PropTypes.number,\n    itemPosition: PropTypes.number,\n    itemsCount: PropTypes.number,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    pills: PropTypes.bool,\n    pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['start', 'end'])]),\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    underlined: PropTypes.bool,\n    vertical: PropTypes.bool,\n    wrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n    menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n    menuOpen: PropTypes.bool,\n    defaultMenuOpen: PropTypes.bool,\n    onActiveChanged: PropTypes.func,\n    inSubmenu: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren,\n    onMenuOpenChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    as: 'a',\n    accessibility: menuItemBehavior as Accessibility,\n    wrapper: { as: 'li' },\n    indicator: {},\n  };\n\n  static autoControlledProps = ['menuOpen'];\n\n  menuRef = React.createRef<HTMLElement>();\n  itemRef = React.createRef<HTMLElement>();\n\n  renderComponent({ ElementType, classes, accessibility, unhandledProps, styles, rtl }) {\n    const {\n      children,\n      content,\n      icon,\n      wrapper,\n      menu,\n      primary,\n      secondary,\n      active,\n      vertical,\n      indicator,\n      disabled,\n    } = this.props;\n    const { menuOpen } = this.state;\n\n    const menuItemInner = childrenExist(children) ? (\n      children\n    ) : (\n      <Ref innerRef={this.itemRef}>\n        <ElementType\n          className={classes.root}\n          disabled={disabled}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          {...accessibility.attributes.root}\n          {...accessibility.keyHandlers.root}\n          {...unhandledProps}\n          {...(!wrapper && { onClick: this.handleClick })}\n          {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n        >\n          {Box.create(icon, {\n            defaultProps: () => ({\n              styles: styles.icon,\n              as: 'span',\n            }),\n          })}\n          {Box.create(content, {\n            defaultProps: () => ({ as: 'span', styles: styles.content }),\n          })}\n          {menu &&\n            Box.create(indicator, {\n              defaultProps: () => ({\n                as: 'span',\n                className: menuItemSlotClassNames.indicator,\n                styles: styles.indicator,\n                accessibility: indicatorBehavior,\n              }),\n            })}\n        </ElementType>\n      </Ref>\n    );\n    const maybeSubmenu =\n      menu && active && menuOpen ? (\n        <>\n          <Ref innerRef={this.menuRef}>\n            <Popper\n              align={vertical ? 'top' : rtl ? 'end' : 'start'}\n              position={vertical ? (rtl ? 'before' : 'after') : 'below'}\n              targetRef={this.itemRef}\n              {...getPopperPropsFromShorthand(menu)}\n            >\n              {Menu.create(menu, {\n                defaultProps: () => ({\n                  accessibility: submenuBehavior,\n                  className: menuItemSlotClassNames.submenu,\n                  vertical: true,\n                  primary,\n                  secondary,\n                  styles: styles.menu,\n                  submenu: true,\n                  indicator,\n                }),\n              })}\n            </Popper>\n          </Ref>\n          <EventListener listener={this.outsideClickHandler} target={this.context.target} type=\"click\" />\n        </>\n      ) : null;\n\n    if (wrapper) {\n      return Box.create(wrapper, {\n        defaultProps: () => ({\n          className: cx(menuItemSlotClassNames.wrapper, classes.wrapper),\n          ...accessibility.attributes.wrapper,\n          ...applyAccessibilityKeyHandlers(accessibility.keyHandlers.wrapper, wrapper),\n        }),\n        overrideProps: () => ({\n          children: (\n            <>\n              {menuItemInner}\n              {maybeSubmenu}\n            </>\n          ),\n          onClick: this.handleClick,\n          onBlur: this.handleWrapperBlur,\n        }),\n      });\n    }\n    return menuItemInner;\n  }\n\n  handleWrapperBlur = e => {\n    if (!this.props.inSubmenu && !e.currentTarget.contains(e.relatedTarget)) {\n      this.trySetMenuOpen(false, e);\n    }\n  };\n\n  actionHandlers = {\n    performClick: event => !event.defaultPrevented && this.handleClick(event),\n    openMenu: event => this.openMenu(event),\n    closeAllMenusAndFocusNextParentItem: event => this.closeAllMenus(event),\n    closeMenu: event => this.closeMenu(event),\n    closeMenuAndFocusTrigger: event => this.closeMenu(event, true),\n    doNotNavigateNextParentItem: event => {\n      event.stopPropagation();\n    },\n    closeAllMenus: event => this.closeAllMenus(event),\n  };\n\n  outsideClickHandler = e => {\n    if (!this.isSubmenuOpen()) return;\n    if (\n      !doesNodeContainClick(this.itemRef.current, e, this.context.target) &&\n      !doesNodeContainClick(this.menuRef.current, e, this.context.target)\n    ) {\n      this.trySetMenuOpen(false, e);\n    }\n  };\n\n  performClick = e => {\n    const { active, menu } = this.props;\n\n    if (menu) {\n      if (doesNodeContainClick(this.menuRef.current, e, this.context.target)) {\n        // submenu was clicked => close it and propagate\n        this.trySetMenuOpen(false, e, () => focusAsync(this.itemRef.current));\n      } else {\n        // the menuItem element was clicked => toggle the open/close and stop propagation\n        this.trySetMenuOpen(active ? !this.state.menuOpen : true, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n\n  handleClick = (e: Event | React.SyntheticEvent) => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    this.performClick(e);\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  handleBlur = (e: React.SyntheticEvent) => {\n    this.setState({ isFromKeyboard: false });\n\n    _.invoke(this.props, 'onBlur', e, this.props);\n  };\n\n  handleFocus = (e: React.SyntheticEvent) => {\n    this.setState({ isFromKeyboard: isFromKeyboard() });\n\n    _.invoke(this.props, 'onFocus', e, this.props);\n  };\n\n  isSubmenuOpen = (): boolean => {\n    const { menu } = this.props;\n    const { menuOpen } = this.state;\n\n    return !!(menu && menuOpen);\n  };\n\n  closeAllMenus = (e: Event) => {\n    if (!this.isSubmenuOpen()) {\n      return;\n    }\n    const { inSubmenu } = this.props;\n    this.trySetMenuOpen(false, e, () => {\n      if (!inSubmenu) {\n        focusAsync(this.itemRef.current);\n      }\n    });\n\n    // avoid spacebar scrolling the page\n    if (!inSubmenu) {\n      e.preventDefault();\n    }\n  };\n\n  closeMenu = (e: Event, forceTriggerFocus?: boolean) => {\n    if (!this.isSubmenuOpen()) {\n      return;\n    }\n\n    const { inSubmenu } = this.props;\n    const shouldStopPropagation = inSubmenu || this.props.vertical;\n    this.trySetMenuOpen(false, e, () => {\n      if (forceTriggerFocus || shouldStopPropagation) {\n        focusAsync(this.itemRef.current);\n      }\n    });\n\n    if (forceTriggerFocus || shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n\n  openMenu = (e: Event) => {\n    const { menu } = this.props;\n    const { menuOpen } = this.state;\n    if (menu && !menuOpen) {\n      this.trySetMenuOpen(true, e);\n      _.invoke(this.props, 'onActiveChanged', e, { ...this.props, active: true });\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  trySetMenuOpen(newValue: boolean, e: Event | React.SyntheticEvent, onStateChanged?: any) {\n    this.setState({ menuOpen: newValue });\n    // The reason why post-effect is not passed as callback to trySetState method\n    // is that in 'controlled' mode the post-effect is applied before final re-rendering\n    // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n    // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n    onStateChanged && onStateChanged();\n    _.invoke(this.props, 'onMenuOpenChange', e, {\n      ...this.props,\n      menuOpen: newValue,\n    });\n  }\n}\n\nMenuItem.create = createShorthandFactory({ Component: MenuItem, mappedProp: 'content' });\n\n/**\n * A MenuItem is an actionable item within a Menu.\n */\nexport default withSafeTypeForAs<typeof MenuItem, MenuItemProps, 'a'>(MenuItem);\n"],"file":"MenuItem.js"}