import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { menuDividerBehavior } from '@fluentui/accessibility';
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { createShorthandFactory, UIComponent, commonPropTypes, childrenExist, rtlTextContainer } from '../../utils';
import { withSafeTypeForAs } from '../../types';
export var menuDividerClassName = 'ui-menu__divider';

var MenuDivider =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(MenuDivider, _UIComponent);

  function MenuDivider() {
    _classCallCheck(this, MenuDivider);

    return _possibleConstructorReturn(this, _getPrototypeOf(MenuDivider).apply(this, arguments));
  }

  _createClass(MenuDivider, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          accessibility = _ref.accessibility;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content;
      return React.createElement(ElementType, _extends({}, accessibility.attributes.root, rtlTextContainer.getAttributes({
        forElements: [children, content]
      }), unhandledProps, {
        className: classes.root
      }), childrenExist(children) ? children : content);
    }
  }]);

  return MenuDivider;
}(UIComponent);

_defineProperty(MenuDivider, "displayName", 'MenuDivider');

_defineProperty(MenuDivider, "create", void 0);

_defineProperty(MenuDivider, "deprecated_className", menuDividerClassName);

_defineProperty(MenuDivider, "defaultProps", {
  as: 'li',
  accessibility: menuDividerBehavior
});

_defineProperty(MenuDivider, "propTypes", Object.assign({}, commonPropTypes.createCommon(), {
  primary: PropTypes.bool,
  secondary: PropTypes.bool,
  vertical: PropTypes.bool,
  inSubmenu: PropTypes.bool
}));

MenuDivider.create = createShorthandFactory({
  Component: MenuDivider,
  mappedProp: 'content'
});
/**
 * A MenuDivider is non-actionable element that visually segments items of Menu.
 */

export default withSafeTypeForAs(MenuDivider);
//# sourceMappingURL=MenuDivider.js.map
