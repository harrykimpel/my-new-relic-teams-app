import * as React from 'react'; // @ts-ignore

import { ThemeContext } from 'react-fela';
import { createShorthandFactory, commonPropTypes, childrenExist } from '../../utils';
import { withSafeTypeForAs } from '../../types';
import { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';
export var dialogFooterClassName = 'ui-dialog__footer';
export var DialogFooter = function DialogFooter(props) {
  var context = React.useContext(ThemeContext);

  var _useTelemetry = useTelemetry(DialogFooter.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var children = props.children,
      content = props.content,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      accessibility = props.accessibility;
  var ElementType = getElementType(props);
  var unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);
  var getA11yProps = useAccessibility(accessibility, {
    debugName: DialogFooter.displayName,
    rtl: context.rtl
  });

  var _useStyles = useStyles(DialogFooter.displayName, {
    className: dialogFooterClassName,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root
  }, unhandledProps)), childrenExist(children) ? children : content);
  setEnd();
  return element;
};
DialogFooter.displayName = 'DialogFooter';
DialogFooter.propTypes = Object.assign({}, commonPropTypes.createCommon());
DialogFooter.handledProps = Object.keys(DialogFooter.propTypes);
DialogFooter.create = createShorthandFactory({
  Component: DialogFooter,
  mappedProp: 'content'
});
/**
 * A DialogFooter represents footer content in Dialog, usually shows dialog actions.
 */

export default withSafeTypeForAs(DialogFooter);
//# sourceMappingURL=DialogFooter.js.map
