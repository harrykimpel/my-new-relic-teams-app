{"version":3,"sources":["components/Dialog/DialogFooter.tsx"],"names":["React","ThemeContext","createShorthandFactory","commonPropTypes","childrenExist","withSafeTypeForAs","useTelemetry","getElementType","useUnhandledProps","useAccessibility","useStyles","dialogFooterClassName","DialogFooter","props","context","useContext","displayName","telemetry","setStart","setEnd","children","content","className","design","styles","variables","accessibility","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","Object","keys","create","Component","mappedProp"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SACEC,sBADF,EAKEC,eALF,EAMEC,aANF,QAOO,aAPP;AASA,SAAqBC,iBAArB,QAAmG,aAAnG;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,iBAAvC,EAA0DC,gBAA1D,EAA4EC,SAA5E,QAA6F,0BAA7F;AASA,OAAO,IAAMC,qBAAqB,GAAG,mBAA9B;AAIP,OAAO,IAAMC,YACkC,GAAG,SADrCA,YACqC,CAAAC,KAAK,EAAI;AACzD,MAAMC,OAAgC,GAAGd,KAAK,CAACe,UAAN,CAAiBd,YAAjB,CAAzC;;AADyD,sBAE5BK,YAAY,CAACM,YAAY,CAACI,WAAd,EAA2BF,OAAO,CAACG,SAAnC,CAFgB;AAAA,MAEjDC,QAFiD,iBAEjDA,QAFiD;AAAA,MAEvCC,MAFuC,iBAEvCA,MAFuC;;AAGzDD,EAAAA,QAAQ;AAHiD,MAIjDE,QAJiD,GAI0BP,KAJ1B,CAIjDO,QAJiD;AAAA,MAIvCC,OAJuC,GAI0BR,KAJ1B,CAIvCQ,OAJuC;AAAA,MAI9BC,SAJ8B,GAI0BT,KAJ1B,CAI9BS,SAJ8B;AAAA,MAInBC,MAJmB,GAI0BV,KAJ1B,CAInBU,MAJmB;AAAA,MAIXC,MAJW,GAI0BX,KAJ1B,CAIXW,MAJW;AAAA,MAIHC,SAJG,GAI0BZ,KAJ1B,CAIHY,SAJG;AAAA,MAIQC,aAJR,GAI0Bb,KAJ1B,CAIQa,aAJR;AAKzD,MAAMC,WAAW,GAAGpB,cAAc,CAACM,KAAD,CAAlC;AACA,MAAMe,cAAc,GAAGpB,iBAAiB,CAACI,YAAY,CAACiB,YAAd,EAA4BhB,KAA5B,CAAxC;AACA,MAAMiB,YAAY,GAAGrB,gBAAgB,CAAQiB,aAAR,EAAuB;AAC1DK,IAAAA,SAAS,EAAEnB,YAAY,CAACI,WADkC;AAE1DgB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAF6C,GAAvB,CAArC;;AAPyD,mBAWrCtB,SAAS,CAA0BE,YAAY,CAACI,WAAvC,EAAoD;AAC/EM,IAAAA,SAAS,EAAEX,qBADoE;AAE/EsB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BX,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFuD;AAQ/EO,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AARkE,GAApD,CAX4B;AAAA,MAWjDE,OAXiD,cAWjDA,OAXiD;;AAqBzD,MAAMC,OAAO,GACX,oBAAC,WAAD,EAAiBL,YAAY,CAAC,MAAD;AAAWR,IAAAA,SAAS,EAAEY,OAAO,CAACE;AAA9B,KAAuCR,cAAvC,EAA7B,EACGxB,aAAa,CAACgB,QAAD,CAAb,GAA0BA,QAA1B,GAAqCC,OADxC,CADF;AAKAF,EAAAA,MAAM;AACN,SAAOgB,OAAP;AACD,CA7BM;AA+BPvB,YAAY,CAACI,WAAb,GAA2B,cAA3B;AAEAJ,YAAY,CAACyB,SAAb,qBACKlC,eAAe,CAACmC,YAAhB,EADL;AAIA1B,YAAY,CAACiB,YAAb,GAA4BU,MAAM,CAACC,IAAP,CAAY5B,YAAY,CAACyB,SAAzB,CAA5B;AAEAzB,YAAY,CAAC6B,MAAb,GAAsBvC,sBAAsB,CAAC;AAAEwC,EAAAA,SAAS,EAAE9B,YAAb;AAA2B+B,EAAAA,UAAU,EAAE;AAAvC,CAAD,CAA5C;AAEA;;;;AAGA,eAAetC,iBAAiB,CAAyCO,YAAzC,CAAhC","sourcesContent":["import * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\n\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface DialogFooterProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\nexport const dialogFooterClassName = 'ui-dialog__footer';\n\nexport type DialogFooterStylesProps = never;\n\nexport const DialogFooter: React.FC<WithAsProp<DialogFooterProps>> &\n  FluentComponentStaticProps<DialogFooterProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DialogFooter.displayName, context.telemetry);\n  setStart();\n  const { children, content, className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: DialogFooter.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<DialogFooterStylesProps>(DialogFooter.displayName, {\n    className: dialogFooterClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const element = (\n    <ElementType {...getA11yProps('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDialogFooter.displayName = 'DialogFooter';\n\nDialogFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nDialogFooter.handledProps = Object.keys(DialogFooter.propTypes) as any;\n\nDialogFooter.create = createShorthandFactory({ Component: DialogFooter, mappedProp: 'content' });\n\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\nexport default withSafeTypeForAs<typeof DialogFooter, DialogFooterProps>(DialogFooter);\n"],"file":"DialogFooter.js"}