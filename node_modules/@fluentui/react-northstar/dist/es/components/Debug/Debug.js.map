{"version":3,"sources":["components/Debug/Debug.tsx"],"names":["keyboardKey","PropTypes","React","EventListener","isBrowser","isDebugEnabled","DebugPanel","FiberNavigator","DebugRect","INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","p","s","r","console","error","_reactInternalFiber","fluentUIDebug","fromFiber","setState","domNode","fromDOMNode","findOwner","fiber","state","e","code","getCode","Escape","stopSelecting","d","altKey","shiftKey","startSelecting","debugDOMNode","target","preventDefault","stopPropagation","debugPanelPosition","process","env","NODE_ENV","window","openDebugPanel","debugReactComponent","$r","mountDocument","props","handleKeyDown","body","handleMouseMove","handleDOMNodeClick","instance","close","positionLeft","positionRight","changeFiber","selectFiber","Component","document","object","isRequired"],"mappings":"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","sourcesContent":["import keyboardKey from 'keyboard-key';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport DebugPanel from './DebugPanel';\nimport FiberNavigator from './FiberNavigator';\nimport DebugRect from './DebugRect';\n\n/* eslint-disable no-console */\n\ntype DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\ntype DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nclass Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = keyboardKey.getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Debug;\n"],"file":"Debug.js"}