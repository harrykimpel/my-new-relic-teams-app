{"version":3,"sources":["components/Design/Design.tsx"],"names":["customPropTypes","ThemeContext","React","PropTypes","Design","config","children","context","useContext","getConfig","useCallback","styleParam","displayName","disableAnimations","theme","direction","rtl","sanitizeCss","performance","enableSanitizeCssPlugin","className","renderer","renderRule","propTypes","func","isRequired","design"],"mappings":"AACA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;;AAYA;;;AAGA,SAASC,MAAT,OAAmD;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACjD,MAAMC,OAAO,GAAGL,KAAK,CAACM,UAAN,CAA0CP,YAA1C,CAAhB;AACA,MAAMQ,SAAS,GAAGP,KAAK,CAACQ,WAAN,CAAkB;AAAA,WAAML,MAAN;AAAA,GAAlB,EAAgC,CAACA,MAAD,CAAhC,CAAlB,CAFiD,CAIjD;;AACA,MAAMM,UAAyB,GAAG;AAChCC,IAAAA,WAAW,EAAER,MAAM,CAACQ,WADY;AAEhCC,IAAAA,iBAAiB,EAAEN,OAAO,CAACM,iBAFK;AAGhCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAER,OAAO,CAACS,GAAR,GAAc,KAAd,GAAsB;AAAnC,KAHyB;AAIhCC,IAAAA,WAAW,EAAEV,OAAO,CAACW,WAAR,CAAoBC;AAJD,GAAlC;AAOA,MAAMC,SAAS,GAAGb,OAAO,CAACc,QAAR,CAAiBC,UAAjB,CAA4Bb,SAA5B,EAAuCE,UAAvC,CAAlB;AAEA,SAAOL,QAAQ,CAAC;AAAEc,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAf;AACD;;AAEDhB,MAAM,CAACQ,WAAP,GAAqB,QAArB;AAEAR,MAAM,CAACmB,SAAP,GAAmB;AACjBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,IAAV,CAAeC,UADR;AAGjBpB,EAAAA,MAAM,EAAEL,eAAe,CAAC0B,MAAhB,CAAuBD;AAHd,CAAnB;AAMA,eAAerB,MAAf","sourcesContent":["import { ComponentDesignProp, RendererParam } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { ProviderContextPrepared, ReactChildren } from '../../types';\n\nexport type DesignProps = {\n  /** A render function that receives the generated className as its only argument */\n  children: ({ className: string }) => ReactChildren;\n\n  /** Design config takes a limited set of layout and position CSS properties. */\n  config: ComponentDesignProp;\n};\n\n/**\n * The Design component provides a theme safe subset of CSS for designing layouts.\n */\nfunction Design<DesignProps>({ config, children }) {\n  const context = React.useContext<ProviderContextPrepared>(ThemeContext);\n  const getConfig = React.useCallback(() => config, [config]);\n\n  // Heads Up! Keep in sync with renderComponent.tsx\n  const styleParam: RendererParam = {\n    displayName: Design.displayName,\n    disableAnimations: context.disableAnimations,\n    theme: { direction: context.rtl ? 'rtl' : 'ltr' },\n    sanitizeCss: context.performance.enableSanitizeCssPlugin,\n  };\n\n  const className = context.renderer.renderRule(getConfig, styleParam);\n\n  return children({ className });\n}\n\nDesign.displayName = 'Design';\n\nDesign.propTypes = {\n  children: PropTypes.func.isRequired,\n\n  config: customPropTypes.design.isRequired,\n};\n\nexport default Design;\n"],"file":"Design.js"}