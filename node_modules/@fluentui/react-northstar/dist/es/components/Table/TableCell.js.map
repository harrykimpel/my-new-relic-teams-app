{"version":3,"sources":["components/Table/TableCell.tsx"],"names":["customPropTypes","tableCellBehavior","Ref","PropTypes","React","childrenExist","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useAccessibility","ThemeContext","Box","withSafeTypeForAs","tableCellClassName","tableCellSlotClassNames","content","TableCell","props","context","useContext","displayName","telemetry","setStart","setEnd","cellRef","useRef","children","truncateContent","className","design","styles","variables","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","focusCell","e","preventDefault","current","focus","performClick","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","currentTarget","target","element","unstable_wrapWithFocusZone","root","onClick","create","defaultProps","propTypes","createCommon","every","disallow","oneOfType","arrayOf","nodeContent","bool","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { Accessibility, tableCellBehavior, TableCellBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n  childrenExist,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthandFactory,\n  UIComponentProps,\n} from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport Box, { BoxProps } from '../Box/Box';\nimport {\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\n\nexport interface TableCellProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available TableCellBehavior\n   * */\n  accessibility?: Accessibility<TableCellBehaviorProps>;\n\n  /**\n   * Truncate cell's content\n   */\n  truncateContent?: boolean;\n}\n\nexport type TableCellStylesProps = Pick<TableCellProps, 'truncateContent'>;\n\nexport interface TableCellSlotClassNames {\n  content: string;\n}\n\nexport const tableCellClassName = 'ui-table__cell';\nexport const tableCellSlotClassNames: TableCellSlotClassNames = {\n  content: `${tableCellClassName}__content`,\n};\n\nconst TableCell: React.FC<WithAsProp<TableCellProps>> & FluentComponentStaticProps<TableCellProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TableCell.displayName, context.telemetry);\n  setStart();\n  const cellRef = React.useRef<HTMLElement>();\n\n  const { children, content, truncateContent, className, design, styles, variables } = props;\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TableCell.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: TableCell.displayName,\n    actionHandlers: {\n      focusCell: e => {\n        e.preventDefault();\n        cellRef.current.focus();\n      },\n      performClick: e => {\n        handleClick(e);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TableCellStylesProps>(TableCell.displayName, {\n    className: tableCellClassName,\n    mapPropsToStyles: () => ({\n      truncateContent,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (e.currentTarget === e.target) {\n      _.invoke(props, 'onClick', e, props);\n      e.preventDefault();\n    }\n  };\n\n  const element = (\n    <Ref innerRef={cellRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            onClick: handleClick,\n            ...unhandledProps,\n          })}\n        >\n          {hasChildren\n            ? children\n            : Box.create(content, {\n                defaultProps: () => ({ className: tableCellSlotClassNames.content, styles: resolvedStyles.content }),\n              })}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nTableCell.displayName = 'TableCell';\n\nTableCell.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  content: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent]),\n  ]),\n  truncateContent: PropTypes.bool,\n};\n\nTableCell.handledProps = Object.keys(TableCell.propTypes) as any;\n\nTableCell.defaultProps = {\n  accessibility: tableCellBehavior,\n};\n\nTableCell.create = createShorthandFactory({ Component: TableCell, mappedProp: 'content' });\n\n/**\n * Component represents a table cell\n */\nexport default withSafeTypeForAs<typeof TableCell, TableCellProps, 'div'>(TableCell);\n"],"file":"TableCell.js"}