{"version":3,"sources":["components/Button/ButtonContent.tsx"],"names":["compose","customPropTypes","commonPropTypes","Box","buttonContentClassName","ButtonContent","className","displayName","mapPropsToStylesProps","props","size","handledProps","overrideStyles","defaultProps","as","propTypes","createCommon","shorthandConfig","mappedProp"],"mappings":"AAAA,SAASA,OAAT,QAAyC,0BAAzC;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AAEA,SAASC,eAAT,QAA4D,aAA5D;AACA,OAAOC,GAAP,MAA8B,YAA9B;AASA,OAAO,IAAMC,sBAAsB,GAAG,oBAA/B;AAEP;;;;AAGA,IAAMC,aAAa,GAAGL,OAAO,CAAqEG,GAArE,EAA0E;AACrGG,EAAAA,SAAS,EAAEF,sBAD0F;AAErGG,EAAAA,WAAW,EAAE,eAFwF;AAGrGC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAK;AAAEC,MAAAA,IAAI,EAAED,KAAK,CAACC;AAAd,KAAL;AAAA,GAHyE;AAIrGC,EAAAA,YAAY,EAAE,CAAC,MAAD,CAJuF;AAMrGC,EAAAA,cAAc,EAAE;AANqF,CAA1E,CAA7B;AASAP,aAAa,CAACQ,YAAd,GAA6B;AAC3BC,EAAAA,EAAE,EAAE;AADuB,CAA7B;AAGAT,aAAa,CAACU,SAAd,qBACKb,eAAe,CAACc,YAAhB,EADL;AAEEN,EAAAA,IAAI,EAAET,eAAe,CAACS;AAFxB;AAIAL,aAAa,CAACY,eAAd,GAAgC;AAC9BC,EAAAA,UAAU,EAAE;AADkB,CAAhC;AAIA,eAAeb,aAAf","sourcesContent":["import { compose, ComponentWithAs } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { commonPropTypes, ShorthandConfig, SizeValue } from '../../utils';\nimport Box, { BoxProps } from '../Box/Box';\n\ninterface ButtonContentOwnProps {\n  size?: SizeValue;\n}\n\nexport interface ButtonContentProps extends BoxProps, ButtonContentOwnProps {}\nexport type ButtonContentStylesProps = Pick<ButtonContentProps, 'size'>;\n\nexport const buttonContentClassName = 'ui-button__content';\n\n/**\n * A ButtonContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nconst ButtonContent = compose<'span', ButtonContentProps, ButtonContentStylesProps, BoxProps, {}>(Box, {\n  className: buttonContentClassName,\n  displayName: 'ButtonContent',\n  mapPropsToStylesProps: props => ({ size: props.size }),\n  handledProps: ['size'],\n\n  overrideStyles: true,\n}) as ComponentWithAs<'span', ButtonContentProps> & { shorthandConfig: ShorthandConfig<ButtonContentProps> };\n\nButtonContent.defaultProps = {\n  as: 'span',\n};\nButtonContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\nButtonContent.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nexport default ButtonContent;\n"],"file":"ButtonContent.js"}