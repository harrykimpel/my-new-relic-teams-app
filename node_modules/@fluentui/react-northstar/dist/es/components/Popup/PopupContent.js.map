{"version":3,"sources":["components/Popup/PopupContent.tsx"],"names":["AutoFocusZone","FocusTrapZone","getElementType","useAccessibility","useStyles","useTelemetry","useUnhandledProps","customPropTypes","cx","PropTypes","React","ThemeContext","withSafeTypeForAs","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getBasePlacement","popupContentClassName","popupContentSlotClassNames","content","PopupContent","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","autoFocus","children","className","design","placement","pointing","pointerRef","styles","trapFocus","variables","getA11yProps","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","handleMouseEnter","e","handleMouseLeave","popupContentProps","root","getAttributes","forElements","onMouseEnter","onMouseLeave","popupContent","pointer","element","focusTrapZoneProps","length","as","autoFocusZoneProps","propTypes","createCommon","oneOf","bool","func","ref","oneOfType","object","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  AutoFocusZone,\n  AutoFocusZoneProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PopperJs from '@popperjs/core';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  WithAsProp,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\n\nexport interface PopupContentSlotClassNames {\n  content: string;\n}\n\nexport interface PopupContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * Called after user's mouse enter.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<PopupContentProps>;\n\n  /**\n   * Called after user's mouse leave.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<PopupContentProps>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Controls whether or not auto focus should be applied, using boolean or AutoFocusZoneProps type value. */\n  autoFocus?: boolean | AutoFocusZoneProps;\n}\n\nexport type PopupContentStylesProps = Required<Pick<PopupContentProps, 'pointing'>> & {\n  basePlacement: PopperJs.BasePlacement;\n};\n\nexport const popupContentClassName = 'ui-popup__content';\nexport const popupContentSlotClassNames: PopupContentSlotClassNames = {\n  content: `${popupContentClassName}__content`,\n};\n\nconst PopupContent: React.FC<WithAsProp<PopupContentProps>> & FluentComponentStaticProps<PopupContentProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(PopupContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    autoFocus,\n    children,\n    className,\n    content,\n    design,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    trapFocus,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: PopupContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<PopupContentStylesProps>(PopupContent.displayName, {\n    className: popupContentClassName,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      pointing,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PopupContent.handledProps, props);\n\n  const handleMouseEnter = e => {\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = e => {\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const popupContentProps: PopupContentProps = getA11yProps('root', {\n    className: classes.root,\n    ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n    ...unhandledProps,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  });\n  const popupContent = (\n    <>\n      {pointing && <div className={classes.pointer} ref={pointerRef} />}\n      <div className={cx(popupContentSlotClassNames.content, classes.content)}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </>\n  );\n\n  let element: React.ReactElement;\n\n  if (trapFocus) {\n    const focusTrapZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(trapFocus).length && trapFocus) as FocusTrapZoneProps),\n      as: ElementType,\n    };\n    element = <FocusTrapZone {...focusTrapZoneProps}>{popupContent}</FocusTrapZone>;\n  } else if (autoFocus) {\n    const autoFocusZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(autoFocus).length && autoFocus) as AutoFocusZoneProps),\n      as: ElementType,\n    };\n    element = <AutoFocusZone {...autoFocusZoneProps}>{popupContent}</AutoFocusZone>;\n  } else {\n    element = <ElementType {...popupContentProps}>{popupContent}</ElementType>;\n  }\n\n  setEnd();\n\n  return element;\n};\n\nPopupContent.displayName = 'PopupContent';\n\nPopupContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<PopperJs.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pointerRef: customPropTypes.ref,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nPopupContent.handledProps = Object.keys(PopupContent.propTypes) as any;\n\nPopupContent.create = createShorthandFactory({ Component: PopupContent, mappedProp: 'content' });\n\n/**\n * A PopupContent displays the content of a Popup component.\n */\nexport default withSafeTypeForAs<typeof PopupContent, PopupContentProps>(PopupContent);\n"],"file":"PopupContent.js"}