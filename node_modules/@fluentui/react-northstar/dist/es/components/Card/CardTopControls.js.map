{"version":3,"sources":["components/Card/CardTopControls.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","React","ThemeContext","withSafeTypeForAs","commonPropTypes","createShorthandFactory","cardTopControlsClassName","CardTopControls","props","context","useContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","Object","keys","create","Component"],"mappings":"AACA,SAASA,cAAT,EAAyBC,iBAAzB,EAA4CC,gBAA5C,EAA8DC,SAA9D,EAAyEC,YAAzE,QAA6F,0BAA7F;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAA0EC,iBAA1E,QAAmG,aAAnG;AACA,SAAiCC,eAAjC,EAAkDC,sBAAlD,QAAkG,aAAlG;AAUA,OAAO,IAAMC,wBAAwB,GAAG,sBAAjC;;AAEP,IAAMC,eAC4C,GAAG,SAD/CA,eAC+C,CAAAC,KAAK,EAAI;AAC5D,MAAMC,OAAgC,GAAGR,KAAK,CAACS,UAAN,CAAiBR,YAAjB,CAAzC;;AAD4D,sBAE/BF,YAAY,CAACO,eAAe,CAACI,WAAjB,EAA8BF,OAAO,CAACG,SAAtC,CAFmB;AAAA,MAEpDC,QAFoD,iBAEpDA,QAFoD;AAAA,MAE1CC,MAF0C,iBAE1CA,MAF0C;;AAG5DD,EAAAA,QAAQ;AAHoD,MAKpDE,SALoD,GAKDP,KALC,CAKpDO,SALoD;AAAA,MAKzCC,MALyC,GAKDR,KALC,CAKzCQ,MALyC;AAAA,MAKjCC,MALiC,GAKDT,KALC,CAKjCS,MALiC;AAAA,MAKzBC,SALyB,GAKDV,KALC,CAKzBU,SALyB;AAAA,MAKdC,QALc,GAKDX,KALC,CAKdW,QALc;AAM5D,MAAMC,WAAW,GAAGxB,cAAc,CAACY,KAAD,CAAlC;AACA,MAAMa,cAAc,GAAGxB,iBAAiB,CAACU,eAAe,CAACe,YAAjB,EAA+Bd,KAA/B,CAAxC;AACA,MAAMe,YAAY,GAAGzB,gBAAgB,CAACU,KAAK,CAACgB,aAAP,EAAsB;AACzDC,IAAAA,SAAS,EAAElB,eAAe,CAACI,WAD8B;AAEzDe,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtB,CAArC;;AAR4D,mBAaxC3B,SAAS,CAA6BQ,eAAe,CAACI,WAA7C,EAA0D;AACrFI,IAAAA,SAAS,EAAET,wBAD0E;AAErFqB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAF6D;AAQrFQ,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AARwE,GAA1D,CAb+B;AAAA,MAapDE,OAboD,cAapDA,OAboD;;AAwB5D,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMN,YAAY,CAAC,MAAD;AACdR,IAAAA,SAAS,EAAEa,OAAO,CAACE;AADL,KAEXT,cAFW,EADlB,EAMGF,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOe,OAAP;AACD,CArCD;;AAuCAtB,eAAe,CAACI,WAAhB,GAA8B,iBAA9B;AAEAJ,eAAe,CAACwB,SAAhB,qBACK3B,eAAe,CAAC4B,YAAhB,EADL;AAIAzB,eAAe,CAACe,YAAhB,GAA+BW,MAAM,CAACC,IAAP,CAAY3B,eAAe,CAACwB,SAA5B,CAA/B;AAEAxB,eAAe,CAAC4B,MAAhB,GAAyB9B,sBAAsB,CAAC;AAAE+B,EAAAA,SAAS,EAAE7B;AAAb,CAAD,CAA/C;AAEA;;;;AAGA,eAAeJ,iBAAiB,CAAsDI,eAAtD,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardTopControlsProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardTopControlsStylesProps = never;\nexport const cardTopControlsClassName = 'ui-card__topcontrols';\n\nconst CardTopControls: React.FC<WithAsProp<CardTopControlsProps>> &\n  FluentComponentStaticProps<CardTopControlsProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardTopControls.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardTopControls.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardTopControls.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardTopControlsStylesProps>(CardTopControls.displayName, {\n    className: cardTopControlsClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardTopControls.displayName = 'CardTopControls';\n\nCardTopControls.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardTopControls.handledProps = Object.keys(CardTopControls.propTypes) as any;\n\nCardTopControls.create = createShorthandFactory({ Component: CardTopControls });\n\n/**\n * A CardTopControls is used to render control elements in the top of a Card component.\n */\nexport default withSafeTypeForAs<typeof CardTopControls, CardTopControlsProps, 'div'>(CardTopControls);\n"],"file":"CardTopControls.js"}