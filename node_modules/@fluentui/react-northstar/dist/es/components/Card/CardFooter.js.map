{"version":3,"sources":["components/Card/CardFooter.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","PropTypes","React","ThemeContext","withSafeTypeForAs","commonPropTypes","createShorthandFactory","cardFooterClassName","CardFooter","props","context","useContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"AACA,SAASA,cAAT,EAAyBC,iBAAzB,EAA4CC,gBAA5C,EAA8DC,SAA9D,EAAyEC,YAAzE,QAA6F,0BAA7F;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAA0EC,iBAA1E,QAAmG,aAAnG;AACA,SAAiCC,eAAjC,EAAkDC,sBAAlD,QAAkG,aAAlG;AAaA,OAAO,IAAMC,mBAAmB,GAAG,iBAA5B;;AAEP,IAAMC,UAA+F,GAAG,SAAlGA,UAAkG,CAAAC,KAAK,EAAI;AAC/G,MAAMC,OAAgC,GAAGR,KAAK,CAACS,UAAN,CAAiBR,YAAjB,CAAzC;;AAD+G,sBAElFH,YAAY,CAACQ,UAAU,CAACI,WAAZ,EAAyBF,OAAO,CAACG,SAAjC,CAFsE;AAAA,MAEvGC,QAFuG,iBAEvGA,QAFuG;AAAA,MAE7FC,MAF6F,iBAE7FA,MAF6F;;AAG/GD,EAAAA,QAAQ;AAHuG,MAKvGE,SALuG,GAK5CP,KAL4C,CAKvGO,SALuG;AAAA,MAK5FC,MAL4F,GAK5CR,KAL4C,CAK5FQ,MAL4F;AAAA,MAKpFC,MALoF,GAK5CT,KAL4C,CAKpFS,MALoF;AAAA,MAK5EC,SAL4E,GAK5CV,KAL4C,CAK5EU,SAL4E;AAAA,MAKjEC,QALiE,GAK5CX,KAL4C,CAKjEW,QALiE;AAAA,MAKvDC,MALuD,GAK5CZ,KAL4C,CAKvDY,MALuD;AAM/G,MAAMC,WAAW,GAAG1B,cAAc,CAACa,KAAD,CAAlC;AACA,MAAMc,cAAc,GAAG1B,iBAAiB,CAACW,UAAU,CAACgB,YAAZ,EAA0Bf,KAA1B,CAAxC;AACA,MAAMgB,YAAY,GAAG3B,gBAAgB,CAACW,KAAK,CAACiB,aAAP,EAAsB;AACzDC,IAAAA,SAAS,EAAEnB,UAAU,CAACI,WADmC;AAEzDgB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAF4C,GAAtB,CAArC;;AAR+G,mBAa3F7B,SAAS,CAAwBS,UAAU,CAACI,WAAnC,EAAgD;AAC3EI,IAAAA,SAAS,EAAET,mBADgE;AAE3EsB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFyD;AAG3ES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHmD;AAS3ES,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAT8D,GAAhD,CAbkF;AAAA,MAavGG,OAbuG,cAavGA,OAbuG;;AAyB/G,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CArCD;;AAuCAxB,UAAU,CAACI,WAAX,GAAyB,YAAzB;AAEAJ,UAAU,CAAC0B,SAAX,qBACK7B,eAAe,CAAC8B,YAAhB,EADL;AAEEd,EAAAA,MAAM,EAAEpB,SAAS,CAACmC;AAFpB;AAKA5B,UAAU,CAACgB,YAAX,GAA0Ba,MAAM,CAACC,IAAP,CAAY9B,UAAU,CAAC0B,SAAvB,CAA1B;AAEA1B,UAAU,CAAC+B,MAAX,GAAoBjC,sBAAsB,CAAC;AAAEkC,EAAAA,SAAS,EAAEhC;AAAb,CAAD,CAA1C;AAEA;;;;AAGA,eAAeJ,iBAAiB,CAA4CI,UAA5C,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardFooterProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardFooterStylesProps = Pick<CardFooterProps, 'fitted'>;\nexport const cardFooterClassName = 'ui-card__footer';\n\nconst CardFooter: React.FC<WithAsProp<CardFooterProps>> & FluentComponentStaticProps<CardFooterProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardFooter.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardFooter.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardFooter.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardFooterStylesProps>(CardFooter.displayName, {\n    className: cardFooterClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardFooter.displayName = 'CardFooter';\n\nCardFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardFooter.handledProps = Object.keys(CardFooter.propTypes) as any;\n\nCardFooter.create = createShorthandFactory({ Component: CardFooter });\n\n/**\n * A CardFooter is used to display data in Card component footer\n */\nexport default withSafeTypeForAs<typeof CardFooter, CardFooterProps, 'div'>(CardFooter);\n"],"file":"CardFooter.js"}