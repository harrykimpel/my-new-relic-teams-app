{"version":3,"sources":["components/SplitButton/SplitButton.tsx"],"names":["splitButtonBehavior","customPropTypes","PropTypes","React","ALIGNMENTS","POSITIONS","withSafeTypeForAs","isFromKeyboard","checkIsFromKeyboard","commonPropTypes","createShorthand","createShorthandFactory","SplitButtonToggle","Button","MenuButton","Ref","ThemeContext","useTelemetry","useAutoControlled","useAccessibility","getElementType","useUnhandledProps","useStyles","splitButtonClassName","SplitButton","props","context","useContext","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","overflowBoundary","positionFixed","offset","unstable_pinned","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","unhandledProps","handledProps","defaultValue","defaultOpen","value","open","initialValue","setOpen","useState","setIsFromKeyboard","getA11yProps","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","element","root","create","defaultProps","on","trigger","menuButton","overrideProps","target","current","isOpen","Toggle","propTypes","createCommon","content","itemShorthand","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","every","disallow","oneOf","object","number","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS } from '../../utils/positioner';\nimport {\n  WithAsProp,\n  withSafeTypeForAs,\n  ComponentEventHandler,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport SplitButtonToggle, { SplitButtonToggleProps } from './SplitButtonToggle';\nimport Button, { ButtonProps } from '../Button/Button';\nimport MenuButton, { MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps } from '../../utils/positioner/types';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & { isFromKeyboard: boolean };\n\nexport const SplitButton: React.FC<WithAsProp<SplitButtonProps>> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    overflowBoundary,\n    positionFixed,\n    offset,\n    unstable_pinned,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                positionFixed,\n                offset,\n                unstable_pinned,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n};\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_pinned: PropTypes.bool,\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport default withSafeTypeForAs<typeof SplitButton, SplitButtonProps>(SplitButton);\n"],"file":"SplitButton.js"}