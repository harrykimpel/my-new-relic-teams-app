{"version":3,"sources":["components/Alert/Alert.tsx"],"names":["alertBehavior","customPropTypes","PropTypes","React","ThemeContext","commonPropTypes","childrenExist","createShorthandFactory","withSafeTypeForAs","Box","Text","ButtonGroup","AlertDismissAction","useAccessibility","getElementType","useStyles","useTelemetry","useUnhandledProps","useAutoControlled","alertClassName","alertSlotClassNames","content","actions","icon","header","body","Alert","props","context","useContext","displayName","telemetry","setStart","setEnd","warning","danger","info","success","attached","fitted","dismissible","variables","className","design","styles","children","dismissAction","defaultValue","defaultVisible","value","visible","initialValue","setVisible","useState","bodyId","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleDismissOverrides","predefinedProps","onClick","e","buttonProps","handleFocus","renderContent","bodyContent","create","defaultProps","id","overrideProps","element","root","onFocus","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","shorthandAllowingChildren","oneOf","bool","onVisibleChange","func","Object","keys","Component","DismissAction"],"mappings":"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","sourcesContent":["import { Accessibility, alertBehavior, AlertBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  UIComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandValue,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ButtonProps } from '../Button/Button';\nimport Text, { TextProps } from '../Text/Text';\n\nimport ButtonGroup, { ButtonGroupProps } from '../Button/ButtonGroup';\nimport AlertDismissAction, { AlertDismissActionProps } from './AlertDismissAction';\nimport {\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\n\nexport interface AlertSlotClassNames {\n  content: string;\n  actions: string;\n  icon: string;\n  header: string;\n  body: string;\n}\n\nexport interface AlertProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available alertWarningBehavior\n   */\n  accessibility?: Accessibility<AlertBehaviorProps>;\n\n  /** An alert can contain action buttons. */\n  actions?: ShorthandValue<ButtonGroupProps> | ShorthandCollection<ButtonProps>;\n\n  /** An alert may contain an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An alert may contain a header. */\n  header?: ShorthandValue<TextProps>;\n\n  /** An alert's position relative to neighboring items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** An alert can only take up the width of its content. */\n  fitted?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** A default value for the `visible` prop. */\n  defaultVisible?: boolean;\n\n  /** An alert can be dismissible. */\n  dismissible?: boolean;\n\n  /**\n   * A button shorthand for the dismiss action slot. To use this slot the alert should be\n   * dismissible.\n   */\n  dismissAction?: ShorthandValue<AlertDismissActionProps>;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after user will dismiss the alert.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onVisibleChange?: ComponentEventHandler<AlertProps>;\n\n  /**\n   * Called after the alert is focused.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AlertProps>;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert can be set to visible to force itself to be shown. */\n  visible?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can have a body that contains header and content elements. */\n  body?: ShorthandValue<BoxProps>;\n}\n\nexport type AlertStylesProps = Required<\n  Pick<AlertProps, 'danger' | 'warning' | 'info' | 'success' | 'attached' | 'fitted' | 'dismissible' | 'visible'>\n>;\n\nexport const alertClassName = 'ui-alert';\nexport const alertSlotClassNames: AlertSlotClassNames = {\n  content: `${alertClassName}__content`,\n  actions: `${alertClassName}__actions`,\n  icon: `${alertClassName}__icon`,\n  header: `${alertClassName}__header`,\n  body: `${alertClassName}__body`,\n};\n\nexport const Alert: React.FC<WithAsProp<AlertProps>> &\n  FluentComponentStaticProps<AlertProps> & {\n    DismissAction: typeof AlertDismissAction;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Alert.displayName, context.telemetry);\n  setStart();\n  const {\n    warning,\n    danger,\n    info,\n    success,\n    attached,\n    fitted,\n    dismissible,\n    variables,\n    className,\n    design,\n    styles,\n    children,\n    actions,\n    dismissAction,\n    content,\n    icon,\n    header,\n    body,\n  } = props;\n\n  const [visible, setVisible] = useAutoControlled({\n    defaultValue: props.defaultVisible,\n    value: props.visible,\n    initialValue: true,\n  });\n\n  const [bodyId] = React.useState(_.uniqueId('alert-body-'));\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Alert.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Alert.displayName,\n    mapPropsToBehavior: () => ({\n      warning,\n      danger,\n      bodyId,\n      visible,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<AlertStylesProps>(Alert.displayName, {\n    className: alertClassName,\n    mapPropsToStyles: () => ({\n      warning,\n      danger,\n      info,\n      success,\n      attached,\n      fitted,\n      dismissible,\n      visible,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleDismissOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onVisibleChange', e, { ...props, visible: false });\n      setVisible(false);\n    },\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const renderContent = () => {\n    const bodyContent = (\n      <>\n        {Text.create(header, {\n          defaultProps: () =>\n            getA11yProps('header', {\n              className: alertSlotClassNames.header,\n              styles: resolvedStyles.header,\n            }),\n        })}\n        {Box.create(content, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: alertSlotClassNames.content,\n              styles: resolvedStyles.content,\n            }),\n        })}\n      </>\n    );\n\n    return (\n      <>\n        {Box.create(icon, {\n          defaultProps: () =>\n            getA11yProps('icon', {\n              className: alertSlotClassNames.icon,\n              styles: resolvedStyles.icon,\n            }),\n        })}\n        {Box.create(body, {\n          defaultProps: () =>\n            getA11yProps('body', {\n              className: alertSlotClassNames.body,\n              styles: resolvedStyles.body,\n              id: bodyId,\n            }),\n          overrideProps: {\n            children: bodyContent,\n          },\n        })}\n\n        {ButtonGroup.create(actions, {\n          defaultProps: () =>\n            getA11yProps('actions', {\n              className: alertSlotClassNames.actions,\n              styles: resolvedStyles.actions,\n            }),\n        })}\n        {dismissible &&\n          AlertDismissAction.create(dismissAction, {\n            defaultProps: () =>\n              getA11yProps('dismissAction', {\n                danger,\n                warning,\n                info,\n                success,\n                variables,\n              }),\n            overrideProps: handleDismissOverrides,\n          })}\n      </>\n    );\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nAlert.defaultProps = {\n  accessibility: alertBehavior,\n  dismissAction: {},\n  body: {},\n};\n\nAlert.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  icon: customPropTypes.shorthandAllowingChildren,\n  header: customPropTypes.itemShorthand,\n  attached: PropTypes.oneOf([true, false, 'top', 'bottom']),\n  fitted: PropTypes.bool,\n  danger: PropTypes.bool,\n  defaultVisible: PropTypes.bool,\n  dismissible: PropTypes.bool,\n  dismissAction: customPropTypes.shorthandAllowingChildren,\n  info: PropTypes.bool,\n  onVisibleChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  success: PropTypes.bool,\n  visible: PropTypes.bool,\n  warning: PropTypes.bool,\n  body: customPropTypes.shorthandAllowingChildren,\n};\n\nAlert.displayName = 'Alert';\n\nAlert.handledProps = Object.keys(Alert.propTypes) as any;\n\nAlert.create = createShorthandFactory({\n  Component: Alert,\n});\n\nAlert.DismissAction = AlertDismissAction;\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\nexport default withSafeTypeForAs<typeof Alert, AlertProps>(Alert);\n"],"file":"Alert.js"}