{"version":3,"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"names":["toolbarMenuRadioGroupBehavior","toolbarMenuItemRadioBehavior","mergeComponentVariables","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","PropTypes","React","ThemeContext","createShorthandFactory","commonPropTypes","withSafeTypeForAs","ToolbarMenuItem","Box","ToolbarVariablesContext","ToolbarVariablesProvider","toolbarMenuRadioGroupClassName","toolbarMenuRadioGroupSlotClassNames","wrapper","ToolbarMenuRadioGroup","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","parentVariables","mergedVariables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","resolvedStyles","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","unhandledProps","handledProps","content","root","item","index","create","defaultProps","as","active","overrideProps","element","children","propTypes","createCommon","number","collectionShorthand","onItemClick","func","itemShorthand","Object","keys","Component"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n  ShorthandCollection,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n} from '../../types';\nimport ToolbarMenuItem, { ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport Box, { BoxProps } from '../Box/Box';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport interface ToolbarMenuRadioGroupSlotClassNames {\n  wrapper: string;\n}\n\nexport const toolbarMenuRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\nexport const toolbarMenuRadioGroupSlotClassNames: ToolbarMenuRadioGroupSlotClassNames = {\n  wrapper: `${toolbarMenuRadioGroupClassName}__wrapper`,\n};\n\nconst ToolbarMenuRadioGroup: React.FC<WithAsProp<ToolbarMenuRadioGroupProps>> &\n  FluentComponentStaticProps<ToolbarMenuRadioGroupProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ToolbarMenuRadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n  const parentVariables = React.useContext(ToolbarVariablesContext);\n  const mergedVariables = mergeComponentVariables(parentVariables, variables);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: ToolbarMenuRadioGroup.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuRadioGroupStylesProps>(\n    ToolbarMenuRadioGroup.displayName,\n    {\n      className: toolbarMenuRadioGroupClassName,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n\n  const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n      _.invoke(props, 'onItemClick', e, itemProps);\n    },\n    wrapper: null,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ToolbarMenuRadioGroup.handledProps, props);\n\n  const content = (\n    <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root })}>\n      <ToolbarVariablesProvider value={mergedVariables}>\n        {_.map(items, (item, index) =>\n          ToolbarMenuItem.create(item, {\n            defaultProps: () => ({\n              accessibility: toolbarMenuItemRadioBehavior,\n              as: 'li',\n              active: activeIndex === index,\n              index,\n            }),\n            overrideProps: handleItemOverrides,\n          }),\n        )}\n      </ToolbarVariablesProvider>\n    </ElementType>\n  );\n  const element = Box.create(wrapper, {\n    defaultProps: () =>\n      getA11yProps('wrapper', {\n        as: 'li',\n        className: toolbarMenuRadioGroupSlotClassNames.wrapper,\n        styles: resolvedStyles.wrapper,\n      }),\n    overrideProps: {\n      children: content,\n    },\n  });\n  setEnd();\n\n  return element;\n};\n\nToolbarMenuRadioGroup.displayName = 'ToolbarMenuRadioGroup';\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.handledProps = Object.keys(ToolbarMenuRadioGroup.propTypes) as any;\n\nToolbarMenuRadioGroup.create = createShorthandFactory({\n  Component: ToolbarMenuRadioGroup,\n});\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport default withSafeTypeForAs<typeof ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps, 'ul'>(ToolbarMenuRadioGroup);\n"],"file":"ToolbarMenuRadioGroup.js"}