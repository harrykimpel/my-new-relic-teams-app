{"version":3,"sources":["components/Toolbar/ToolbarMenu.tsx"],"names":["toolbarMenuBehavior","toolbarMenuItemCheckboxBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","mergeComponentVariables","PropTypes","React","ThemeContext","createShorthandFactory","commonPropTypes","childrenExist","withSafeTypeForAs","ToolbarMenuRadioGroup","ToolbarMenuDivider","ToolbarMenuItem","ToolbarVariablesContext","ToolbarVariablesProvider","toolbarMenuClassName","ToolbarMenu","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","className","children","design","items","submenu","submenuIndicator","styles","variables","parentVariables","mergedVariables","getA11yProps","debugName","actionHandlers","performClick","e","rtl","mapPropsToInlineStyles","classes","handleItemOverrides","predefinedProps","onClick","itemProps","menuOpen","menu","handleRadioGroupOverrides","onItemClick","renderItems","item","kind","create","overrideProps","defaultProps","inSubmenu","ElementType","unhandledProps","handledProps","element","unstable_wrapWithFocusZone","root","propTypes","createCommon","collectionShorthandWithKindProp","func","bool","shorthandAllowingChildren","Object","keys","as","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuBehavior,\n  toolbarMenuItemCheckboxBehavior,\n  ToolbarMenuBehaviorProps,\n} from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  createShorthandFactory,\n  commonPropTypes,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n} from '../../utils';\n\nimport {\n  ComponentEventHandler,\n  ShorthandCollection,\n  withSafeTypeForAs,\n  ShorthandValue,\n  WithAsProp,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\n\nimport ToolbarMenuRadioGroup, { ToolbarMenuRadioGroupProps } from './ToolbarMenuRadioGroup';\nimport ToolbarMenuDivider from './ToolbarMenuDivider';\nimport ToolbarMenuItem, { ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport { BoxProps } from '../Box/Box';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport type ToolbarMenuItemShorthandKinds = 'divider' | 'item' | 'toggle';\n\nexport interface ToolbarMenuProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuBehaviorProps>;\n\n  /** Shorthand array of props for ToolbarMenu. */\n  items?: ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Indicates whether the menu is submenu. */\n  submenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuStylesProps = never;\nexport const toolbarMenuClassName = 'ui-toolbar__menu';\n\nconst ToolbarMenu: React.FC<WithAsProp<ToolbarMenuProps>> & FluentComponentStaticProps = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ToolbarMenu.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, className, children, design, items, submenu, submenuIndicator, styles, variables } = props;\n\n  const parentVariables = React.useContext(ToolbarVariablesContext);\n  const mergedVariables = mergeComponentVariables(parentVariables, variables);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: ToolbarMenu.displayName,\n    actionHandlers: {\n      performClick: e => {\n        _.invoke(props, 'onClick', e, props);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<ToolbarMenuStylesProps>(ToolbarMenu.displayName, {\n    className: toolbarMenuClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables: mergedVariables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n      _.invoke(props, 'onItemClick', e, {\n        ...itemProps,\n        menuOpen: !!itemProps.menu,\n      });\n    },\n  });\n\n  const handleRadioGroupOverrides = (predefinedProps: ToolbarMenuRadioGroupProps) => ({\n    onItemClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n      _.invoke(props, 'onItemClick', e, itemProps);\n    },\n  });\n\n  const renderItems = () => {\n    return _.map(items, item => {\n      const kind = _.get(item, 'kind', 'item');\n\n      switch (kind) {\n        case 'divider':\n          return ToolbarMenuDivider.create(item);\n\n        case 'group':\n          return ToolbarMenuRadioGroup.create(item, { overrideProps: handleRadioGroupOverrides });\n\n        case 'toggle':\n          return ToolbarMenuItem.create(item, {\n            defaultProps: () => ({ accessibility: toolbarMenuItemCheckboxBehavior }),\n            overrideProps: handleItemOverrides,\n          });\n\n        default:\n          return ToolbarMenuItem.create(item, {\n            defaultProps: () => ({\n              submenuIndicator,\n              inSubmenu: submenu,\n            }),\n            overrideProps: handleItemOverrides,\n          });\n      }\n    });\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ToolbarMenu.handledProps, props);\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        ...unhandledProps,\n        className: classes.root,\n      })}\n    >\n      <ToolbarVariablesProvider value={mergedVariables}>\n        {childrenExist(children) ? children : renderItems()}\n      </ToolbarVariablesProvider>\n    </ElementType>,\n  );\n  setEnd();\n\n  return element;\n};\n\nToolbarMenu.displayName = 'ToolbarMenu';\n\nToolbarMenu.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n  onItemClick: PropTypes.func,\n  submenu: PropTypes.bool,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n};\nToolbarMenu.handledProps = Object.keys(ToolbarMenu.propTypes) as any;\n\nToolbarMenu.defaultProps = {\n  accessibility: toolbarMenuBehavior,\n  as: 'ul',\n};\n\nToolbarMenu.create = createShorthandFactory({ Component: ToolbarMenu, mappedArrayProp: 'items' });\n\n/**\n * A ToolbarMenu creates a pop-up menu attached to a ToolbarItem.\n *\n * @accessibility\n * Implements pop-up menu (submenu) behavior of [ARIA Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu) design pattern.\n */\nexport default withSafeTypeForAs<typeof ToolbarMenu, ToolbarMenuProps, 'ul'>(ToolbarMenu);\n"],"file":"ToolbarMenu.js"}