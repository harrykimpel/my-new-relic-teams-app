{"version":3,"sources":["components/Header/HeaderDescription.tsx"],"names":["React","childrenExist","createShorthandFactory","UIComponent","commonPropTypes","rtlTextContainer","withSafeTypeForAs","headerDescriptionClassName","HeaderDescription","accessibility","ElementType","classes","unhandledProps","props","children","content","getAttributes","forElements","attributes","root","createCommon","color","as","create","Component","mappedProp"],"mappings":";;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,aADF,EAEEC,sBAFF,EAGEC,WAHF,EAOEC,eAPF,EASEC,gBATF,QAWO,aAXP;AAaA,SAAqBC,iBAArB,QAA8C,aAA9C;AAaA,OAAO,IAAMC,0BAA0B,GAAG,wBAAnC;;IAEDC,iB;;;;;;;;;;;;;0CAeqE;AAAA,UAAvDC,aAAuD,QAAvDA,aAAuD;AAAA,UAAxCC,WAAwC,QAAxCA,WAAwC;AAAA,UAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,UAAlBC,cAAkB,QAAlBA,cAAkB;AAAA,wBACzC,KAAKC,KADoC;AAAA,UAC/DC,QAD+D,eAC/DA,QAD+D;AAAA,UACrDC,OADqD,eACrDA,OADqD;AAEvE,aACE,oBAAC,WAAD,eACMV,gBAAgB,CAACW,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACH,QAAD,EAAWC,OAAX;AAAf,OAA/B,CADN,EAEMN,aAAa,CAACS,UAAd,CAAyBC,IAF/B,EAGMP,cAHN;AAIE,QAAA,SAAS,EAAED,OAAO,CAACQ;AAJrB,UAMGlB,aAAa,CAACa,QAAD,CAAb,GAA0BA,QAA1B,GAAqCC,OANxC,CADF;AAUD;;;;EA3B6BZ,W;;gBAA1BK,iB;;gBAAAA,iB,0BAG0BD,0B;;gBAH1BC,iB,iBAKiB,mB;;gBALjBA,iB,iCAQCJ,eAAe,CAACgB,YAAhB,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B,C;;gBARDb,iB,kBAWkB;AACpBc,EAAAA,EAAE,EAAE;AADgB,C;;AAmBxBd,iBAAiB,CAACe,MAAlB,GAA2BrB,sBAAsB,CAAC;AAChDsB,EAAAA,SAAS,EAAEhB,iBADqC;AAEhDiB,EAAAA,UAAU,EAAE;AAFoC,CAAD,CAAjD;AAKA;;;;AAGA,eAAenB,iBAAiB,CAAwDE,iBAAxD,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\n\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface HeaderDescriptionProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n}\n\nexport const headerDescriptionClassName = 'ui-header__description';\n\nclass HeaderDescription extends UIComponent<WithAsProp<HeaderDescriptionProps>, any> {\n  static create: ShorthandFactory<HeaderDescriptionProps>;\n\n  static deprecated_className = headerDescriptionClassName;\n\n  static displayName = 'HeaderDescription';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({ color: true }),\n  };\n\n  static defaultProps = {\n    as: 'p',\n  };\n\n  renderComponent({ accessibility, ElementType, classes, unhandledProps }) {\n    const { children, content } = this.props;\n    return (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nHeaderDescription.create = createShorthandFactory({\n  Component: HeaderDescription,\n  mappedProp: 'content',\n});\n\n/**\n * A HeaderDescription provides more detailed information about the Header.\n */\nexport default withSafeTypeForAs<typeof HeaderDescription, HeaderDescriptionProps, 'p'>(HeaderDescription);\n"],"file":"HeaderDescription.js"}