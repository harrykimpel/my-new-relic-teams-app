{"version":3,"sources":["components/Tooltip/TooltipContent.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","customPropTypes","PropTypes","React","ThemeContext","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getBasePlacement","withSafeTypeForAs","tooltipContentClassName","TooltipContent","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","open","placement","pointing","pointerRef","styles","variables","getA11Props","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","pointer","propTypes","createCommon","oneOf","bool","ref","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PopperJs from '@popperjs/core';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface TooltipContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** Defines whether tooltip is displayed. */\n  open?: boolean;\n\n  /** A tooltip can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n}\n\nexport type TooltipContentStylesProps = Required<Pick<TooltipContentProps, 'pointing' | 'open'>> & {\n  basePlacement: PopperJs.BasePlacement;\n};\n\nexport const tooltipContentClassName = 'ui-tooltip__content';\n\nconst TooltipContent: React.FC<WithAsProp<TooltipContentProps>> &\n  FluentComponentStaticProps<TooltipContentProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TooltipContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    content,\n    design,\n    open,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: TooltipContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TooltipContentStylesProps>(TooltipContent.displayName, {\n    className: tooltipContentClassName,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      open,\n      pointing,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TooltipContent.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {open && pointing && <div className={classes.pointer} ref={pointerRef} />}\n\n      <div {...getA11Props('content', { className: classes.content })}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nTooltipContent.displayName = 'TooltipContent';\n\nTooltipContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<PopperJs.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  pointerRef: customPropTypes.ref,\n};\nTooltipContent.handledProps = Object.keys(TooltipContent.propTypes) as any;\n\nTooltipContent.create = createShorthandFactory({ Component: TooltipContent, mappedProp: 'content' });\n\n/**\n * A TooltipContent contains the content of a Tooltip component.\n */\nexport default withSafeTypeForAs<typeof TooltipContent, TooltipContentProps>(TooltipContent);\n"],"file":"TooltipContent.js"}