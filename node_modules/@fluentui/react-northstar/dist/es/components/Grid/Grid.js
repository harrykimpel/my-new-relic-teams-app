import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as customPropTypes from '@fluentui/react-proptypes';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { UIComponent, childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';
import { withSafeTypeForAs } from '../../types';
export var gridClassName = 'ui-grid';

var Grid =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(Grid, _UIComponent);

  function Grid() {
    _classCallCheck(this, Grid);

    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));
  }

  _createClass(Grid, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content;
      return React.createElement(ElementType, _extends({
        className: classes.root
      }, rtlTextContainer.getAttributes({
        forElements: [children, content]
      }), accessibility.attributes.root, unhandledProps), childrenExist(children) ? children : content);
    }
  }]);

  return Grid;
}(UIComponent);
/**
 * A Grid is a layout component that harmonizes negative space, by controlling both the row and column alignment.
 */


_defineProperty(Grid, "displayName", 'Grid');

_defineProperty(Grid, "deprecated_className", gridClassName);

_defineProperty(Grid, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  content: false
}), {
  columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  content: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent])]),
  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
}));

_defineProperty(Grid, "defaultProps", {
  as: 'div'
});

export default withSafeTypeForAs(Grid);
//# sourceMappingURL=Grid.js.map
