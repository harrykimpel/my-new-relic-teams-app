{"version":3,"sources":["components/Flex/Flex.tsx"],"names":["getElementType","useUnhandledProps","useStyles","useTelemetry","PropTypes","React","ThemeContext","commonPropTypes","withSafeTypeForAs","FlexItem","flexClassName","Flex","props","context","useContext","displayName","telemetry","setStart","setEnd","children","className","column","debug","design","fill","gap","hAlign","inline","padding","space","styles","variables","vAlign","wrap","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","ElementType","unhandledProps","handledProps","content","Children","map","child","isFlexItemElement","cloneElement","flexDirection","element","root","propTypes","createCommon","accessibility","bool","oneOf","Object","keys","Item"],"mappings":"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","sourcesContent":["import { getElementType, useUnhandledProps, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { commonPropTypes, UIComponentProps, ChildrenComponentProps } from '../../utils';\nimport { ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport FlexItem from './FlexItem';\n\nexport interface FlexProps extends UIComponentProps, ChildrenComponentProps {\n  /** Defines if container should be inline element. */\n  inline?: boolean;\n\n  /** Sets vertical flow direction. */\n  column?: boolean;\n\n  /** Allows overflow items to wrap on the next container's line. */\n  wrap?: boolean;\n\n  /** Controls items alignment in horizontal direction. */\n  hAlign?: 'start' | 'center' | 'end' | 'stretch';\n\n  /** Controls items alignment in vertical direction. */\n  vAlign?: 'start' | 'center' | 'end' | 'stretch';\n\n  /** Defines strategy for distributing remaining space between items. */\n  space?: 'around' | 'between' | 'evenly';\n\n  /** Defines gap between each two adjacent child items. */\n  gap?: 'gap.smaller' | 'gap.small' | 'gap.medium' | 'gap.large';\n\n  /** Defines container's padding. */\n  padding?: 'padding.medium';\n\n  /** Enables debug mode. */\n  debug?: boolean;\n\n  /** Orders container to fill all parent's space available. */\n  fill?: boolean;\n}\n\nexport type FlexStylesProps = Pick<\n  FlexProps,\n  'column' | 'debug' | 'fill' | 'gap' | 'hAlign' | 'inline' | 'padding' | 'space' | 'vAlign' | 'wrap'\n>;\nexport const flexClassName = 'ui-flex';\n\nconst Flex: React.FC<WithAsProp<FlexProps>> & {\n  handledProps: (keyof FlexProps)[];\n  Item: typeof FlexItem;\n} = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Flex.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    className,\n    column,\n    debug,\n    design,\n    fill,\n    gap,\n    hAlign,\n    inline,\n    padding,\n    space,\n    styles,\n    variables,\n    vAlign,\n    wrap,\n  } = props;\n\n  const { classes } = useStyles<FlexStylesProps>(Flex.displayName, {\n    className: flexClassName,\n    mapPropsToStyles: () => ({\n      column,\n      debug,\n      fill,\n      gap,\n      hAlign,\n      inline,\n      padding,\n      space,\n      vAlign,\n      wrap,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Flex.handledProps, props);\n\n  const content = React.Children.map(children, child => {\n    const isFlexItemElement: boolean = _.get(child, 'type.__isFlexItem');\n\n    return isFlexItemElement\n      ? React.cloneElement(child as React.ReactElement, {\n          flexDirection: column ? 'column' : 'row',\n        })\n      : child;\n  });\n  const element = (\n    <ElementType className={classes.root} {...unhandledProps}>\n      {content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nFlex.displayName = 'Flex';\n\nFlex.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    content: false,\n  }),\n\n  inline: PropTypes.bool,\n\n  column: PropTypes.bool,\n\n  wrap: PropTypes.bool,\n\n  hAlign: PropTypes.oneOf(['start', 'center', 'end', 'stretch']),\n  vAlign: PropTypes.oneOf(['start', 'center', 'end', 'stretch']),\n\n  space: PropTypes.oneOf(['around', 'between', 'evenly']),\n\n  gap: PropTypes.oneOf(['gap.smaller', 'gap.small', 'gap.medium', 'gap.large']),\n\n  padding: PropTypes.oneOf(['padding.medium']),\n  fill: PropTypes.bool,\n\n  debug: PropTypes.bool,\n};\nFlex.handledProps = Object.keys(Flex.propTypes) as any;\n\nFlex.Item = FlexItem;\n\n/**\n * A Flex is a layout component that arranges group of items aligned towards common direction (either row or column).\n */\nexport default withSafeTypeForAs<typeof Flex, FlexProps>(Flex);\n"],"file":"Flex.js"}