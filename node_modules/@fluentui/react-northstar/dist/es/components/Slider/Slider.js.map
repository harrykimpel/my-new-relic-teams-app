{"version":3,"sources":["components/Slider/Slider.tsx"],"names":["sliderBehavior","getElementType","useUnhandledProps","useAccessibility","useStateManager","useStyles","useTelemetry","handleRef","Ref","customPropTypes","createSliderManager","cx","PropTypes","React","ThemeContext","commonPropTypes","partitionHTMLProps","setWhatInputSource","createShorthandFactory","withSafeTypeForAs","Box","processInputValues","p","min","max","value","isNaN","Number","Slider","defaultProps","Math","valueAsPercentage","sliderClassName","sliderSlotClassNames","input","inputWrapper","rail","thumb","track","props","context","useContext","displayName","telemetry","setStart","setEnd","accessibility","getA11yValueMessageOnChange","defaultValue","userInputRef","inputRef","step","className","styles","variables","design","fluid","vertical","disabled","createRef","mapPropsToInitialState","mapPropsToState","state","actions","numericMin","numericMax","numericValue","getA11Props","debugName","rtl","mapPropsToBehavior","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleInputOverrides","onChange","e","change","onMouseDown","target","ElementType","unhandledProps","handledProps","htmlInputProps","restProps","type","inputElement","create","as","overrideProps","element","root","width","String","propTypes","createCommon","content","oneOfType","string","number","bool","func","itemShorthand","ref","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, sliderBehavior, SliderBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createSliderManager } from '@fluentui/state';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  commonPropTypes,\n  partitionHTMLProps,\n  UIComponentProps,\n  setWhatInputSource,\n  createShorthandFactory,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n  Omit,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport Box, { BoxProps } from '../Box/Box';\n\nconst processInputValues = (\n  p: Pick<SliderProps, 'min' | 'max'> & { value: string },\n): { min: number; max: number; value: number; valueAsPercentage: string } => {\n  let min = _.toNumber(p.min);\n  let max = _.toNumber(p.max);\n  let value = _.toNumber(p.value);\n\n  if (isNaN(min)) min = Number(Slider.defaultProps.min);\n  if (isNaN(max)) max = Number(Slider.defaultProps.max);\n  value = isNaN(value) ? min + (max - min) / 2 : Math.min(max, Math.max(min, value));\n  const valueAsPercentage = `${(100 * (value - min)) / (max - min)}%`;\n\n  return { min, max, value, valueAsPercentage };\n};\n\nexport interface SliderSlotClassNames {\n  input: string;\n  inputWrapper: string;\n  rail: string;\n  thumb: string;\n  track: string;\n}\n\nexport interface SliderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    Omit<SupportedIntrinsicInputProps, 'defaultValue'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<SliderBehaviorProps>;\n\n  /** The default value of the slider. */\n  defaultValue?: string | number;\n\n  /** A slider can be read-only and unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A slider can take the width of its container. */\n  fluid?: boolean;\n\n  /**\n   * Callback that creates custom accessibility message a screen reader narrates when the value changes.\n   * @param props - Slider props.\n   */\n  getA11yValueMessageOnChange?: (props: SliderProps) => string;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The maximum value of the slider. */\n  max?: SupportedIntrinsicInputProps['max'];\n\n  /** The minimum value of the slider. */\n  min?: SupportedIntrinsicInputProps['min'];\n\n  /**\n   * Called after item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<SliderProps & { value: string }>;\n\n  /**\n   * A number that specifies the granularity that the value must adhere to, or the special value 'any'.\n   * A string value of any means that no stepping is implied, and any value is allowed\n   * (barring other constraints, such as min and max).\n   */\n  step?: SupportedIntrinsicInputProps['step'];\n\n  /** The value of the slider. */\n  value?: string | number;\n\n  /** A slider can be displayed vertically. */\n  vertical?: boolean;\n}\n\nexport type SliderStylesProps = Pick<SliderProps, 'fluid' | 'disabled' | 'vertical'>;\nexport const sliderClassName = 'ui-slider';\nexport const sliderSlotClassNames: SliderSlotClassNames = {\n  input: `${sliderClassName}__input`,\n  inputWrapper: `${sliderClassName}__input-wrapper`,\n  rail: `${sliderClassName}__rail`,\n  thumb: `${sliderClassName}__thumb`,\n  track: `${sliderClassName}__track`,\n};\n\nconst Slider: React.FC<WithAsProp<SliderProps>> & FluentComponentStaticProps = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Slider.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    min,\n    max,\n    value,\n    getA11yValueMessageOnChange,\n    defaultValue,\n    input,\n    inputRef: userInputRef,\n    step,\n    className,\n    styles,\n    variables,\n    design,\n    fluid,\n    vertical,\n    disabled,\n  } = props;\n  const inputRef = React.createRef<HTMLElement>();\n\n  const { state, actions } = useStateManager(createSliderManager, {\n    mapPropsToInitialState: () => ({\n      value: defaultValue as string,\n    }),\n    mapPropsToState: () => ({\n      value: value as string,\n    }),\n  });\n  const { min: numericMin, max: numericMax, value: numericValue, valueAsPercentage } = processInputValues({\n    min,\n    max,\n    value: state.value || '',\n  });\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Slider.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      disabled,\n      getA11yValueMessageOnChange,\n      max: numericMax,\n      min: numericMax,\n      value: numericValue,\n      vertical,\n    }),\n  });\n  const { classes, styles: resolvedStyles } = useStyles<SliderStylesProps>(Slider.displayName, {\n    className: sliderClassName,\n    mapPropsToStyles: () => ({\n      fluid,\n      vertical,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleInputOverrides = () => ({\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = _.get(e, 'target.value');\n      _.invoke(props, 'onChange', e, { ...props, value });\n      actions.change(value);\n    },\n    onMouseDown: (e: React.MouseEvent<HTMLInputElement>) => {\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(props, 'onMouseDown', e, props);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Slider.handledProps, props);\n  const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n  const type = 'range';\n\n  // we need 2 wrappers around the slider rail, track, input and thumb slots to achieve correct component sizes\n\n  const inputElement = Box.create(input || type, {\n    defaultProps: () =>\n      getA11Props('input', {\n        ...htmlInputProps,\n        as: 'input',\n        className: sliderSlotClassNames.input,\n        fluid,\n        min: numericMin,\n        max: numericMax,\n        step,\n        styles: resolvedStyles.input,\n        type,\n        value: numericValue,\n        vertical,\n      }),\n    overrideProps: handleInputOverrides,\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...restProps })}>\n      <div\n        {...getA11Props('inputWrapper', {\n          className: cx(sliderSlotClassNames.inputWrapper, classes.inputWrapper),\n        })}\n      >\n        <span {...getA11Props('rail', { className: cx(sliderSlotClassNames.rail, classes.rail) })} />\n        <span\n          {...getA11Props('track', { className: cx(sliderSlotClassNames.track, classes.track) })}\n          style={{ width: valueAsPercentage }}\n        />\n        <Ref\n          innerRef={(inputElement: HTMLElement) => {\n            handleRef(inputRef, inputElement);\n            handleRef(userInputRef, inputElement);\n          }}\n        >\n          {inputElement}\n        </Ref>\n        {/* the thumb slot needs to appear after the input slot */}\n        <span\n          {...getA11Props('thumb', { className: cx(sliderSlotClassNames.thumb, classes.thumb) })}\n          style={{ [context.rtl ? 'right' : 'left']: valueAsPercentage }}\n        />\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nSlider.displayName = 'Slider';\n\nSlider.defaultProps = {\n  accessibility: sliderBehavior,\n  getA11yValueMessageOnChange: ({ value }) => String(value),\n  max: 100,\n  min: 0,\n  step: 1,\n};\nSlider.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fluid: PropTypes.bool,\n  getA11yValueMessageOnChange: PropTypes.func,\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\nSlider.handledProps = Object.keys(Slider.propTypes) as any;\n\nSlider.create = createShorthandFactory({ Component: Slider, mappedProp: 'value' });\n\n/**\n * A Slider represents an input that allows user to choose a value from within a specific range.\n *\n * @accessibility\n * Implements [ARIA Slider](https://www.w3.org/TR/wai-aria-practices-1.1/#slider) design pattern.\n * @accessibilityIssues\n * [Slider - JAWS narrates slider value twice when using PageUp / PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/220)\n * [Slider - JAWS narrates current and new value in vertical slider](https://github.com/FreedomScientific/VFO-standards-support/issues/219)\n */\nexport default withSafeTypeForAs<typeof Slider, SliderProps, 'input'>(Slider);\n"],"file":"Slider.js"}