{"version":3,"sources":["themes/teams/components/Flex/flexStyles.ts"],"names":["toFlexAlignment","flexStyles","root","p","props","v","variables","display","debug","border","background","inline","column","flexDirection","hAlign","alignItems","justifyContent","vAlign","space","wrap","flexWrap","fill","width","height","padding","gap"],"mappings":";AAGA,SAASA,eAAT,QAAgC,SAAhC;AAGA,IAAMC,UAAuE,GAAG;AAC9EC,EAAAA,IAAI,EAAE;AAAA,QAAUC,CAAV,QAAGC,KAAH;AAAA,QAAwBC,CAAxB,QAAaC,SAAb;AAAA;AACJC,MAAAA,OAAO,EAAE;AADL,OAEAJ,CAAC,CAACK,KAAF,IAAW;AAAEC,MAAAA,MAAM,EAAE,iBAAV;AAA6BC,MAAAA,UAAU,EAAE;AAAzC,KAFX,MAIAP,CAAC,CAACQ,MAAF,IAAY;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAJZ,MAMAJ,CAAC,CAACS,MAAF,IAAY;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KANZ,MAQAV,CAAC,CAACW,MAAF,KACDX,CAAC,CAACS,MAAF,GAAW;AAAEG,MAAAA,UAAU,EAAEf,eAAe,CAACG,CAAC,CAACW,MAAH;AAA7B,KAAX,GAAuD;AAAEE,MAAAA,cAAc,EAAEhB,eAAe,CAACG,CAAC,CAACW,MAAH;AAAjC,KADtD,CARA,MAUAX,CAAC,CAACc,MAAF,KACDd,CAAC,CAACS,MAAF,GAAW;AAAEI,MAAAA,cAAc,EAAEhB,eAAe,CAACG,CAAC,CAACc,MAAH;AAAjC,KAAX,GAA2D;AAAEF,MAAAA,UAAU,EAAEf,eAAe,CAACG,CAAC,CAACc,MAAH;AAA7B,KAD1D,CAVA,MAaAd,CAAC,CAACe,KAAF,IAAW;AAAEF,MAAAA,cAAc,kBAAWb,CAAC,CAACe,KAAb;AAAhB,KAbX,MAeAf,CAAC,CAACgB,IAAF,IAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAfV,MAiBAjB,CAAC,CAACkB,IAAF,IAAU;AACZC,MAAAA,KAAK,EAAE,MADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAjBV,MAsBApB,CAAC,CAACqB,OAAF,IAAa;AAAEA,MAAAA,OAAO,EAAEnB,CAAC,CAACF,CAAC,CAACqB,OAAH;AAAZ,KAtBb,MAwBArB,CAAC,CAACsB,GAAF,IAAS;AACX,kDACGtB,CAAC,CAACS,MAAF,GAAW,cAAX,GAA4B,aAD/B,EAC+CP,CAAC,CAACF,CAAC,CAACsB,GAAH,CADhD;AADW,KAxBT;AAAA;AADwE,CAAhF;AAiCA,eAAexB,UAAf","sourcesContent":["import { ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { FlexStylesProps } from '../../../../components/Flex/Flex';\n\nimport { toFlexAlignment } from './utils';\nimport { FlexVariables } from './flexVariables';\n\nconst flexStyles: ComponentSlotStylesPrepared<FlexStylesProps, FlexVariables> = {\n  root: ({ props: p, variables: v }) => ({\n    display: 'flex',\n    ...(p.debug && { border: '1px dotted grey', background: 'lightgrey' }),\n\n    ...(p.inline && { display: 'inline-flex' }),\n\n    ...(p.column && { flexDirection: 'column' }),\n\n    ...(p.hAlign &&\n      (p.column ? { alignItems: toFlexAlignment(p.hAlign) } : { justifyContent: toFlexAlignment(p.hAlign) })),\n    ...(p.vAlign &&\n      (p.column ? { justifyContent: toFlexAlignment(p.vAlign) } : { alignItems: toFlexAlignment(p.vAlign) })),\n\n    ...(p.space && { justifyContent: `space-${p.space}` }),\n\n    ...(p.wrap && { flexWrap: 'wrap' }),\n\n    ...(p.fill && {\n      width: '100%',\n      height: '100%',\n    }),\n\n    ...(p.padding && { padding: v[p.padding] }),\n\n    ...(p.gap && {\n      '> *:not(:last-child)': {\n        [p.column ? 'marginBottom' : 'marginRight']: v[p.gap],\n      },\n    }),\n  }),\n};\n\nexport default flexStyles;\n"],"file":"flexStyles.js"}