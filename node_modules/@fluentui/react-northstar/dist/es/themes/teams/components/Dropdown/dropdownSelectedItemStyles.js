import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { dropdownSelectedItemSlotClassNames } from '../../../../components/Dropdown/DropdownSelectedItem';
import getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';
import getBorderFocusStyles from '../../getBorderFocusStyles';
import { pxToRem } from '../../../../utils';
var dropdownSelectedItemStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables,
        siteVariables = _ref.theme.siteVariables;
    var borderFocusStyles = getBorderFocusStyles({
      variables: siteVariables
    });
    return Object.assign({
      cursor: 'pointer',
      margin: '.25rem 0 0 .4rem',
      color: v.selectedItemColor,
      position: 'relative',
      border: v.selectedItemBorder,
      height: pxToRem(24),
      overflow: 'visible',
      outline: 0,
      fontWeight: siteVariables.fontWeightSemibold
    }, v.selectedItemBackgroundColor && {
      backgroundColor: v.selectedItemBackgroundColor
    }, {
      ':focus': {
        color: v.selectedItemColorFocus
      },
      ':hover': _defineProperty({
        color: v.selectedItemColorHover,
        backgroundColor: v.selectedItemBackgroundColorHover
      }, "& .".concat(dropdownSelectedItemSlotClassNames.icon), {
        color: v.selectedItemIconColorHover
      }),
      ':focus-visible': {
        ':after': borderFocusStyles[':focus-visible'][':after']
      }
    });
  },
  icon: function icon(_ref2) {
    var v = _ref2.variables;
    return Object.assign({
      color: v.selectedItemIconColor
    }, getIconFillOrOutlineStyles({
      outline: true
    }), {
      ':hover': Object.assign({
        color: v.selectedItemIconColorHover
      }, getIconFillOrOutlineStyles({
        outline: false
      }))
    });
  }
};
export default dropdownSelectedItemStyles;
//# sourceMappingURL=dropdownSelectedItemStyles.js.map
