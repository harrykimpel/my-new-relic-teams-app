import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { svgIconClassName } from '@fluentui/react-icons-northstar';
import { attachmentActionClassName } from '../../../../components/Attachment/AttachmentAction';
import { pxToRem } from '../../../../utils';
import getBorderFocusStyles from '../../getBorderFocusStyles';
var attachmentStyles = {
  root: function root(_ref) {
    var _Object$assign, _hover;

    var p = _ref.props,
        v = _ref.variables,
        siteVariables = _ref.theme.siteVariables;
    var borderFocusStyles = getBorderFocusStyles({
      variables: siteVariables,
      borderRadius: v.borderRadius
    });
    return Object.assign({
      position: 'relative',
      display: 'inline-flex',
      alignItems: 'center',
      width: '100%',
      maxWidth: pxToRem(440),
      minHeight: pxToRem(48),
      padding: v.padding,
      marginBottom: pxToRem(2),
      marginRight: pxToRem(2),
      background: v.backgroundColor,
      color: v.textColor,
      boxShadow: v.boxShadow,
      border: "".concat(siteVariables.borderWidth, " solid ").concat(v.borderColor),
      borderRadius: v.borderRadius
    }, borderFocusStyles, {
      '& .ui-attachment__progress': {
        transition: 'width 0.2s',
        position: 'absolute',
        display: 'block',
        bottom: 0,
        left: 0,
        maxWidth: '100%',
        height: pxToRem(v.progressHeight),
        background: v.progressColor
      }
    }, p.actionable && {
      cursor: 'pointer',
      ':focus-visible': Object.assign({}, borderFocusStyles[':focus-visible'], (_Object$assign = {
        backgroundColor: v.focusBackgroundColor,
        color: v.focusColor
      }, _defineProperty(_Object$assign, "& .".concat(attachmentActionClassName), {
        color: v.siblingsFocusColor
      }), _defineProperty(_Object$assign, "& .".concat(svgIconClassName), {
        color: v.siblingsFocusColor
      }), _Object$assign)),
      ':hover': (_hover = {
        background: v.backgroundColorHover,
        color: v.textColorHover
      }, _defineProperty(_hover, "& .".concat(attachmentActionClassName), {
        color: v.siblingsHoverColor
      }), _defineProperty(_hover, "& .".concat(svgIconClassName), {
        color: v.siblingsHoverColor
      }), _hover)
    });
  }
};
export default attachmentStyles;
//# sourceMappingURL=attachmentStyles.js.map
