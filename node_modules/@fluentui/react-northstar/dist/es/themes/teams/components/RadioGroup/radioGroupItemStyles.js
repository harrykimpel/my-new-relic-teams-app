import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { radioGroupItemSlotClassNames } from '../../../../components/RadioGroup/RadioGroupItem';
import { pxToRem } from '../../../../utils';
import getBorderFocusStyles from '../../getBorderFocusStyles';

var restHoverFocusTextColor = function restHoverFocusTextColor(textColor) {
  return {
    color: textColor,
    ':hover': {
      color: textColor
    },
    ':focus': {
      color: textColor
    }
  };
};

var radioStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables,
        siteVariables = _ref.theme.siteVariables;
    return Object.assign({
      position: 'relative',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: "".concat(pxToRem(1)),
      borderColor: 'transparent',
      borderRadius: "".concat(pxToRem(2)),
      color: v.textColorDefault,
      cursor: 'pointer',
      display: p.vertical ? 'flex' : 'inline-flex',
      fontSize: v.textFontSize,
      padding: v.padding,
      ':hover': _defineProperty({
        color: v.textColorDefaultHoverFocus
      }, "& .".concat(radioGroupItemSlotClassNames.indicator), Object.assign({
        borderColor: v.textColorDefaultHoverFocus
      }, !p.disabled && !p.checked && {
        borderColor: v.indicatorBorderColorDefaultHover
      })),
      ':focus': {
        color: v.textColorDefaultHoverFocus
      }
    }, p.checked && Object.assign({}, restHoverFocusTextColor(v.textColorChecked)), {}, p.disabled && Object.assign({}, restHoverFocusTextColor(v.colorDisabled)), {}, getBorderFocusStyles({
      variables: siteVariables
    }));
  },
  indicator: function indicator(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables;
    return Object.assign({
      margin: "0 ".concat(pxToRem(12), " 0 0"),
      borderRadius: '50%',
      borderWidth: '1px',
      borderStyle: 'solid',
      borderColor: v.indicatorBorderColorDefault,
      width: pxToRem(12),
      height: pxToRem(12)
    }, p.checked && {
      background: v.indicatorBackgroundColorChecked,
      borderColor: 'transparent'
    }, {}, p.disabled && Object.assign({
      borderColor: v.colorDisabled
    }, p.checked && {
      background: v.colorDisabled
    }));
  }
};
export default radioStyles;
//# sourceMappingURL=radioGroupItemStyles.js.map
