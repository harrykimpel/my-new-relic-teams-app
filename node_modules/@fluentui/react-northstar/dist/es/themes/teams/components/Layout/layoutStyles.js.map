{"version":3,"sources":["themes/teams/components/Layout/layoutStyles.ts"],"names":["debugRoot","debugArea","debugGap","countTrue","items","filter","Boolean","length","layoutStyles","root","props","alignItems","debug","gap","justifyItems","main","mainSize","end","endSize","rootCSS","start","startSize","vertical","display","join","gridAutoFlow","p","startCSS","mainCSS","endCSS"],"mappings":"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","sourcesContent":["import { debugRoot, debugArea, debugGap } from '../../../../styles/debugStyles';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { LayoutProps } from '../../../../components/Layout/Layout';\n\nconst countTrue = items => items.filter(Boolean).length;\n\nconst layoutStyles: ComponentSlotStylesPrepared<LayoutProps> = {\n  root: ({ props }): ICSSInJSStyle => {\n    const {\n      alignItems,\n      debug,\n      gap,\n      justifyItems,\n      main,\n      mainSize,\n      end,\n      endSize,\n      rootCSS,\n      start,\n      startSize,\n      vertical,\n    } = props;\n\n    return {\n      ...(debug && debugRoot()),\n      justifyItems,\n      alignItems,\n      display: ['grid', '-ms-grid'],\n      [vertical ? 'gridTemplateRows' : 'gridTemplateColumns']: [\n        // Heads up!\n        // IE11 Doesn't support grid-gap, insert virtual columns instead\n        start && startSize,\n        gap && start && main && gap,\n        main && mainSize,\n        gap && (start || main) && end && gap,\n        end && endSize,\n      ]\n        .filter(Boolean)\n        .join(' '),\n      ...(vertical && {\n        gridAutoFlow: 'row',\n        '-ms-grid-columns': '1fr',\n      }),\n      ...rootCSS,\n    };\n  },\n\n  gap: ({ props }): ICSSInJSStyle => ({\n    ...(props.debug && debugGap({ vertical: props.vertical })),\n  }),\n\n  start: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? '-ms-grid-row' : '-ms-grid-column']: '1',\n    ...p.startCSS,\n  }),\n\n  main: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: ['grid', '-ms-grid'],\n    [p.vertical ? '-ms-grid-row' : '-ms-grid-column']: countTrue([p.start, p.start && p.gap, p.main]),\n    ...p.mainCSS,\n  }),\n\n  end: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? '-ms-grid-row' : '-ms-grid-column']: countTrue([\n      p.start,\n      p.start && p.gap,\n      p.main,\n      p.main && p.gap,\n      p.end,\n    ]),\n    ...p.endCSS,\n  }),\n};\n\nexport default layoutStyles;\n"],"file":"layoutStyles.js"}