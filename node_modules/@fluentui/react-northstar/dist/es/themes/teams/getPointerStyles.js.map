{"version":3,"sources":["themes/teams/getPointerStyles.ts"],"names":["getContainerStyles","options","placement","margin","paddingTop","paddingBottom","paddingRight","paddingLeft","getPointerStyles","backgroundColor","borderColor","borderSize","gap","height","rtl","svg","width","display","position","zIndex","top","bottom","right","left","content","transformOrigin","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderStyle","borderWidth","backgroundImage","backgroundRepeat","backgroundPosition","transform","undefined"],"mappings":"AAsBA,OAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAuD;AAAA,MAC/EC,SAD+E,GACzDD,OADyD,CAC/EC,SAD+E;AAAA,MACpEC,MADoE,GACzDF,OADyD,CACpEE,MADoE;AAGvF,2BACMD,SAAS,KAAK,QAAd,IAA0B;AAC5BE,IAAAA,UAAU,EAAED;AADgB,GADhC,MAIMD,SAAS,KAAK,KAAd,IAAuB;AACzBG,IAAAA,aAAa,EAAEF;AADU,GAJ7B,MAOMD,SAAS,KAAK,MAAd,IAAwB;AAC1BI,IAAAA,YAAY,EAAEH;AADY,GAP9B,MAUMD,SAAS,KAAK,OAAd,IAAyB;AAC3BK,IAAAA,WAAW,EAAEJ;AADc,GAV/B;AAcD,CAjBM;AAmBP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,OAAD,EAAqD;AAAA,MAC3EQ,eAD2E,GACWR,OADX,CAC3EQ,eAD2E;AAAA,MAC1DC,WAD0D,GACWT,OADX,CAC1DS,WAD0D;AAAA,MAC7CC,UAD6C,GACWV,OADX,CAC7CU,UAD6C;AAAA,MACjCC,GADiC,GACWX,OADX,CACjCW,GADiC;AAAA,MAC5BC,MAD4B,GACWZ,OADX,CAC5BY,MAD4B;AAAA,MACpBX,SADoB,GACWD,OADX,CACpBC,SADoB;AAAA,MACTY,GADS,GACWb,OADX,CACTa,GADS;AAAA,MACJC,GADI,GACWd,OADX,CACJc,GADI;AAAA,MACCC,KADD,GACWf,OADX,CACCe,KADD;AAGnF;AACEC,IAAAA,OAAO,EAAE,OADX;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,MAAM,EAAE;AAHV,KAKM,CAACjB,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,KAAzC,KAAmD;AACrDK,IAAAA,WAAW,EAAEK,GADwC;AAErDN,IAAAA,YAAY,EAAEM,GAFuC;AAIrDC,IAAAA,MAAM,EAANA,MAJqD;AAKrDG,IAAAA,KAAK,iBAAUA,KAAV,iBAAsBJ,GAAtB;AALgD,GALzD,MAYM,CAACV,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,OAAvC,KAAmD;AACrDG,IAAAA,aAAa,EAAEO,GADsC;AAErDR,IAAAA,UAAU,EAAEQ,GAFyC;AAIrDC,IAAAA,MAAM,iBAAUG,KAAV,iBAAsBJ,GAAtB,WAJ+C;AAKrDI,IAAAA,KAAK,EAAEH;AAL8C,GAZzD,MAoBMX,SAAS,KAAK,QAAd,IAA0B;AAC5BkB,IAAAA,GAAG,iBAAUP,MAAV,iBAAuBF,UAAvB;AADyB,GApBhC,MAuBMT,SAAS,KAAK,KAAd,IAAuB;AACzBmB,IAAAA,MAAM,iBAAUR,MAAV,gBAAsBF,UAAtB;AADmB,GAvB7B,MA2BMT,SAAS,KAAK,MAAd,IAAwB;AAC1BoB,IAAAA,KAAK,iBAAUT,MAAV,gBAAsBF,UAAtB;AADqB,GA3B9B,MA8BMT,SAAS,KAAK,OAAd,IAAyB;AAC3BqB,IAAAA,IAAI,iBAAUV,MAAV,gBAAsBF,UAAtB;AADuB,GA9B/B;AAkCE;AACEa,MAAAA,OAAO,EAAE,KADX;AAEEP,MAAAA,OAAO,EAAE,OAFX;AAGEJ,MAAAA,MAAM,EAANA,MAHF;AAIEK,MAAAA,QAAQ,EAAE,UAJZ;AAKEO,MAAAA,eAAe,EAAE,YALnB;AAOEC,MAAAA,iBAAiB,EAAE,aAPrB;AAQEC,MAAAA,eAAe,EAAE,aARnB;AASEC,MAAAA,gBAAgB,EAAE,aATpB;AAUEC,MAAAA,cAAc,EAAE,aAVlB;AAWEC,MAAAA,WAAW,EAAE,OAXf;AAaEP,MAAAA,IAAI,EAAE,CAbR;AAcEH,MAAAA,GAAG,EAAE;AAdP,OAgBMlB,SAAS,KAAK,QAAd,IAA0B;AAC5BwB,MAAAA,iBAAiB,EAAEjB,eADS;AAE5BsB,MAAAA,WAAW,cAAOlB,MAAP,cAAiBA,MAAjB;AAFiB,KAhBhC,MAoBMX,SAAS,KAAK,KAAd,IAAuB;AACzB2B,MAAAA,cAAc,EAAEpB,eADS;AAEzBsB,MAAAA,WAAW,YAAKlB,MAAL,cAAeA,MAAf,OAFc;AAIzBO,MAAAA,GAAG,iBAAUT,UAAV;AAJsB,KApB7B,MA0BMT,SAAS,KAAK,MAAd,IAAwB;AAC1ByB,MAAAA,eAAe,EAAElB,eADS;AAE1BsB,MAAAA,WAAW,YAAKlB,MAAL,gBAAiBA,MAAjB,cAA2BA,MAA3B;AAFe,KA1B9B,MA8BMX,SAAS,KAAK,OAAd,IAAyB;AAC3B0B,MAAAA,gBAAgB,EAAEnB,eADS;AAE3BsB,MAAAA,WAAW,YAAKlB,MAAL,cAAeA,MAAf,cAAyBA,MAAzB;AAFgB,KA9B/B,CAlCF;AAsEE;AACEW,MAAAA,OAAO,EAAE,KADX;AAEEP,MAAAA,OAAO,EAAE,OAFX;AAGEJ,MAAAA,MAAM,EAANA,MAHF;AAIEK,MAAAA,QAAQ,EAAE,UAJZ;AAKEO,MAAAA,eAAe,EAAE,YALnB;AAMEN,MAAAA,MAAM,EAAE,CAAC,CANX;AAQEO,MAAAA,iBAAiB,EAAE,aARrB;AASEC,MAAAA,eAAe,EAAE,aATnB;AAUEC,MAAAA,gBAAgB,EAAE,aAVpB;AAWEC,MAAAA,cAAc,EAAE,aAXlB;AAYEC,MAAAA,WAAW,EAAE;AAZf,OAcM5B,SAAS,KAAK,QAAd,IAA0B;AAC5BwB,MAAAA,iBAAiB,EAAEhB,WADS;AAE5BqB,MAAAA,WAAW,cAAOlB,MAAP,cAAiBA,MAAjB,CAFiB;AAI5BU,MAAAA,IAAI,EAAE,CAJsB;AAK5BF,MAAAA,MAAM,iBAAUR,MAAV;AALsB,KAdhC,MAqBMX,SAAS,KAAK,KAAd,IAAuB;AACzB2B,MAAAA,cAAc,EAAEnB,WADS;AAEzBqB,MAAAA,WAAW,YAAKlB,MAAL,cAAeA,MAAf,OAFc;AAIzBU,MAAAA,IAAI,EAAE,CAJmB;AAKzBF,MAAAA,MAAM,EAAER;AALiB,KArB7B,MA4BMX,SAAS,KAAK,MAAd,IAAwB;AAC1ByB,MAAAA,eAAe,EAAEjB,WADS;AAE1BqB,MAAAA,WAAW,YAAKlB,MAAL,gBAAiBA,MAAjB,cAA2BA,MAA3B,CAFe;AAI1BU,MAAAA,IAAI,EAAEZ,UAJoB;AAK1BU,MAAAA,MAAM,EAAEL;AALkB,KA5B9B,MAmCMd,SAAS,KAAK,OAAd,IAAyB;AAC3B0B,MAAAA,gBAAgB,EAAElB,WADS;AAE3BqB,MAAAA,WAAW,YAAKlB,MAAL,cAAeA,MAAf,cAAyBA,MAAzB,OAFgB;AAI3BS,MAAAA,KAAK,EAAEX,UAJoB;AAK3BU,MAAAA,MAAM,EAAEL;AALmB,KAnC/B;AAtEF,KAmHMD,GAAG,IAAI;AACT;AACES,MAAAA,OAAO,EAAE,KADX;AAEEQ,MAAAA,eAAe,EAAEjB,GAFnB;AAGEkB,MAAAA,gBAAgB,EAAE,WAHpB;AAIEC,MAAAA,kBAAkB,EAAE,QAJtB;AAKEjB,MAAAA,OAAO,EAAE,OALX;AAMEC,MAAAA,QAAQ,EAAE;AANZ,OAQMhB,SAAS,KAAK,QAAd,IAA0B;AAC5BW,MAAAA,MAAM,iBAAUG,KAAV,iBAAsBJ,GAAtB,WADsB;AAE5BI,MAAAA,KAAK,EAAEH,MAFqB;AAI5BU,MAAAA,IAAI,EAAEX,GAJsB;AAK5BS,MAAAA,MAAM,iBAAUL,KAAV,gBAAqBL,UAArB,MALsB;AAM5BwB,MAAAA,SAAS,mBAAYrB,GAAG,GAAG,CAAC,EAAJ,GAAS,EAAxB;AANmB,KARhC,MAgBMZ,SAAS,KAAK,KAAd,IAAuB;AACzBW,MAAAA,MAAM,iBAAUG,KAAV,iBAAsBJ,GAAtB,WADmB;AAEzBI,MAAAA,KAAK,EAAEH,MAFkB;AAIzBU,MAAAA,IAAI,EAAEX,GAJmB;AAKzBS,MAAAA,MAAM,iBAAUT,GAAV,gBAAmBD,UAAnB,MALmB;AAMzBwB,MAAAA,SAAS,mBAAYrB,GAAG,GAAG,EAAH,GAAQ,CAAC,EAAxB;AANgB,KAhB7B,MAwBMZ,SAAS,KAAK,MAAd,IAAwB;AAC1BW,MAAAA,MAAM,EAAEG,KADkB;AAE1BA,MAAAA,KAAK,EAAEH,MAFmB;AAI1BU,MAAAA,IAAI,EAAEV,MAJoB;AAK1BsB,MAAAA,SAAS,mBAAYrB,GAAG,GAAG,CAAH,GAAO,GAAtB;AALiB,KAxB9B,MA+BMZ,SAAS,KAAK,OAAd,IAAyB;AAC3BW,MAAAA,MAAM,EAAEG,KADmB;AAE3BA,MAAAA,KAAK,EAAEH,MAFoB;AAI3BS,MAAAA,KAAK,EAAET,MAJoB;AAK3BsB,MAAAA,SAAS,mBAAYrB,GAAG,GAAG,GAAH,GAAS,CAAxB;AALkB,KA/B/B,CADS;AAwCT,eAAWsB;AAxCF,GAnHb;AA8JD,CAjKM","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport * as PopperJs from '@popperjs/core';\n\ntype GetContainerStylesOptions = {\n  placement: PopperJs.BasePlacement;\n  margin: string;\n};\n\ntype GetPointerStylesOptions = {\n  backgroundColor: string;\n  borderColor: string;\n  borderSize: string;\n\n  gap: string;\n  height: string;\n  width: string;\n\n  placement: PopperJs.BasePlacement;\n  rtl: boolean;\n  svg?: string;\n};\n\nexport const getContainerStyles = (options: GetContainerStylesOptions): ICSSInJSStyle => {\n  const { placement, margin } = options;\n\n  return {\n    ...(placement === 'bottom' && {\n      paddingTop: margin,\n    }),\n    ...(placement === 'top' && {\n      paddingBottom: margin,\n    }),\n    ...(placement === 'left' && {\n      paddingRight: margin,\n    }),\n    ...(placement === 'right' && {\n      paddingLeft: margin,\n    }),\n  };\n};\n\nexport const getPointerStyles = (options: GetPointerStylesOptions): ICSSInJSStyle => {\n  const { backgroundColor, borderColor, borderSize, gap, height, placement, rtl, svg, width } = options;\n\n  return {\n    display: 'block',\n    position: 'absolute',\n    zIndex: 1,\n\n    ...((placement === 'bottom' || placement === 'top') && {\n      paddingLeft: gap,\n      paddingRight: gap,\n\n      height,\n      width: `calc(${width} + (${gap} * 2))`,\n    }),\n    ...((placement === 'left' || placement === 'right') && {\n      paddingBottom: gap,\n      paddingTop: gap,\n\n      height: `calc(${width} + (${gap} * 2))`,\n      width: height,\n    }),\n\n    ...(placement === 'bottom' && {\n      top: `calc(${height} + (${borderSize} * 2))`,\n    }),\n    ...(placement === 'top' && {\n      bottom: `calc(${height} + ${borderSize})`,\n    }),\n\n    ...(placement === 'left' && {\n      right: `calc(${height} + ${borderSize})`,\n    }),\n    ...(placement === 'right' && {\n      left: `calc(${height} + ${borderSize})`,\n    }),\n\n    '::before': {\n      content: '\" \"',\n      display: 'block',\n      height,\n      position: 'relative',\n      transformOrigin: 'center top',\n\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid',\n\n      left: 0,\n      top: 0,\n\n      ...(placement === 'bottom' && {\n        borderBottomColor: backgroundColor,\n        borderWidth: `0 ${height} ${height}`,\n      }),\n      ...(placement === 'top' && {\n        borderTopColor: backgroundColor,\n        borderWidth: `${height} ${height} 0`,\n\n        top: `calc(${borderSize} * -1)`,\n      }),\n      ...(placement === 'left' && {\n        borderLeftColor: backgroundColor,\n        borderWidth: `${height} 0 ${height} ${height}`,\n      }),\n      ...(placement === 'right' && {\n        borderRightColor: backgroundColor,\n        borderWidth: `${height} ${height} ${height} 0`,\n      }),\n    },\n\n    '::after': {\n      content: '\" \"',\n      display: 'block',\n      height,\n      position: 'relative',\n      transformOrigin: 'center top',\n      zIndex: -1,\n\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      borderStyle: 'solid',\n\n      ...(placement === 'bottom' && {\n        borderBottomColor: borderColor,\n        borderWidth: `0 ${height} ${height}`,\n\n        left: 0,\n        bottom: `calc(${height} + 1px)`,\n      }),\n      ...(placement === 'top' && {\n        borderTopColor: borderColor,\n        borderWidth: `${height} ${height} 0`,\n\n        left: 0,\n        bottom: height,\n      }),\n      ...(placement === 'left' && {\n        borderLeftColor: borderColor,\n        borderWidth: `${height} 0 ${height} ${height}`,\n\n        left: borderSize,\n        bottom: width,\n      }),\n      ...(placement === 'right' && {\n        borderRightColor: borderColor,\n        borderWidth: `${height} ${height} ${height} 0`,\n\n        right: borderSize,\n        bottom: width,\n      }),\n    },\n\n    // :before & :after are used to draw CSS triangles, not valid for SVG\n    ...(svg && {\n      '::before': {\n        content: '\" \"',\n        backgroundImage: svg,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        display: 'block',\n        position: 'relative',\n\n        ...(placement === 'bottom' && {\n          height: `calc(${width} + (${gap} * 2))`,\n          width: height,\n\n          left: gap,\n          bottom: `calc(${width} + ${borderSize})`,\n          transform: `rotate(${rtl ? -90 : 90}deg)`,\n        }),\n        ...(placement === 'top' && {\n          height: `calc(${width} + (${gap} * 2))`,\n          width: height,\n\n          left: gap,\n          bottom: `calc(${gap} - ${borderSize})`,\n          transform: `rotate(${rtl ? 90 : -90}deg)`,\n        }),\n        ...(placement === 'left' && {\n          height: width,\n          width: height,\n\n          left: height,\n          transform: `rotate(${rtl ? 0 : 180}deg)`,\n        }),\n        ...(placement === 'right' && {\n          height: width,\n          width: height,\n\n          right: height,\n          transform: `rotate(${rtl ? 180 : 0}deg)`,\n        }),\n      },\n      '::after': undefined,\n    }),\n  };\n};\n"],"file":"getPointerStyles.js"}