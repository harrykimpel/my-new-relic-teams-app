"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var clearIndicatorUrl_1 = require("./clearIndicatorUrl");
var utils_1 = require("../../../../utils");
var inputStyles = {
    root: function (_a) {
        var p = _a.props;
        return (tslib_1.__assign({ alignItems: 'center', display: 'inline-flex', position: 'relative', outline: 0 }, (p.fluid && { width: '100%' })));
    },
    input: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ backgroundColor: v.backgroundColor }, (p.inverted && {
            backgroundColor: v.backgroundColorInverted,
        })), { lineHeight: 'unset', color: v.fontColor, borderColor: v.borderColor, borderRadius: v.borderRadius, borderStyle: 'solid', borderWidth: v.borderWidth, outline: 'none', padding: v.inputPadding, position: 'relative' }), (p.fluid && { width: '100%' })), (p.inline && { float: 'left' })), (p.disabled && {
            color: v.colorDisabled,
            boxShadow: 'none',
        })), { '::placeholder': tslib_1.__assign({ color: v.placeholderColor, opacity: 1 }, (p.disabled && {
                color: v.colorDisabled,
            })), ':focus': {
                borderColor: v.inputFocusBorderColor,
            } }), (p.clearable && { padding: v.inputPaddingWithIconAtEnd })), (p.icon && {
            padding: p.iconPosition === 'start' ? v.inputPaddingWithIconAtStart : v.inputPaddingWithIconAtEnd,
        })));
    },
    icon: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ color: v.iconColor, outline: 0, display: 'flex', alignItems: 'center', justifyContent: 'center', position: v.iconPosition }, (p.disabled && {
            color: v.colorDisabled,
        })), (p.iconPosition === 'start' && {
            left: v.iconLeft,
        })), (p.iconPosition === 'end' && {
            right: v.iconRight,
        })), (p.clearable &&
            p.hasValue && {
            backgroundImage: clearIndicatorUrl_1.default(p.disabled ? v.colorDisabled : v.iconColor),
            backgroundPosition: 'center',
            backgroundRepeat: 'no-repeat',
            height: '100%',
            width: utils_1.pxToRem(16),
        })));
    },
};
exports.default = inputStyles;
