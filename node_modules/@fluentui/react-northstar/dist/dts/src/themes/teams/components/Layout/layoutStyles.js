"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var debugStyles_1 = require("../../../../styles/debugStyles");
var countTrue = function (items) { return items.filter(Boolean).length; };
var layoutStyles = {
    root: function (_a) {
        var _b;
        var props = _a.props;
        var alignItems = props.alignItems, debug = props.debug, gap = props.gap, justifyItems = props.justifyItems, main = props.main, mainSize = props.mainSize, end = props.end, endSize = props.endSize, rootCSS = props.rootCSS, start = props.start, startSize = props.startSize, vertical = props.vertical;
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (debug && debugStyles_1.debugRoot())), (_b = { justifyItems: justifyItems,
                alignItems: alignItems, display: ['grid', '-ms-grid'] }, _b[vertical ? 'gridTemplateRows' : 'gridTemplateColumns'] = [
            // Heads up!
            // IE11 Doesn't support grid-gap, insert virtual columns instead
            start && startSize,
            gap && start && main && gap,
            main && mainSize,
            gap && (start || main) && end && gap,
            end && endSize,
        ]
            .filter(Boolean)
            .join(' '), _b)), (vertical && {
            gridAutoFlow: 'row',
            '-ms-grid-columns': '1fr',
        })), rootCSS);
    },
    gap: function (_a) {
        var props = _a.props;
        return (tslib_1.__assign({}, (props.debug && debugStyles_1.debugGap({ vertical: props.vertical }))));
    },
    start: function (_a) {
        var _b;
        var p = _a.props;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (p.debug && debugStyles_1.debugArea())), (_b = { alignItems: 'center', display: 'inline-flex' }, _b[p.vertical ? '-ms-grid-row' : '-ms-grid-column'] = '1', _b)), p.startCSS));
    },
    main: function (_a) {
        var _b;
        var p = _a.props;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (p.debug && debugStyles_1.debugArea())), (_b = { alignItems: 'center', display: ['grid', '-ms-grid'] }, _b[p.vertical ? '-ms-grid-row' : '-ms-grid-column'] = countTrue([p.start, p.start && p.gap, p.main]), _b)), p.mainCSS));
    },
    end: function (_a) {
        var _b;
        var p = _a.props;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, (p.debug && debugStyles_1.debugArea())), (_b = { alignItems: 'center', display: 'inline-flex' }, _b[p.vertical ? '-ms-grid-row' : '-ms-grid-column'] = countTrue([
            p.start,
            p.start && p.gap,
            p.main,
            p.main && p.gap,
            p.end,
        ]), _b)), p.endCSS));
    },
};
exports.default = layoutStyles;
