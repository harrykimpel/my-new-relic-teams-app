"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var DropdownSelectedItem_1 = require("../../../../components/Dropdown/DropdownSelectedItem");
var getIconFillOrOutlineStyles_1 = require("../../getIconFillOrOutlineStyles");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var utils_1 = require("../../../../utils");
var dropdownSelectedItemStyles = {
    root: function (_a) {
        var _b;
        var p = _a.props, v = _a.variables, siteVariables = _a.theme.siteVariables;
        var borderFocusStyles = getBorderFocusStyles_1.default({ variables: siteVariables });
        return tslib_1.__assign(tslib_1.__assign({ cursor: 'pointer', margin: '.25rem 0 0 .4rem', color: v.selectedItemColor, position: 'relative', border: v.selectedItemBorder, height: utils_1.pxToRem(24), overflow: 'visible', outline: 0, fontWeight: siteVariables.fontWeightSemibold }, (v.selectedItemBackgroundColor && {
            backgroundColor: v.selectedItemBackgroundColor,
        })), { ':focus': {
                color: v.selectedItemColorFocus,
            }, ':hover': (_b = {
                    color: v.selectedItemColorHover,
                    backgroundColor: v.selectedItemBackgroundColorHover
                },
                _b["& ." + DropdownSelectedItem_1.dropdownSelectedItemSlotClassNames.icon] = {
                    color: v.selectedItemIconColorHover,
                },
                _b), ':focus-visible': {
                ':after': borderFocusStyles[':focus-visible'][':after'],
            } });
    },
    icon: function (_a) {
        var v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign({ color: v.selectedItemIconColor }, getIconFillOrOutlineStyles_1.default({ outline: true })), { ':hover': tslib_1.__assign({ color: v.selectedItemIconColorHover }, getIconFillOrOutlineStyles_1.default({ outline: false })) }));
    },
};
exports.default = dropdownSelectedItemStyles;
