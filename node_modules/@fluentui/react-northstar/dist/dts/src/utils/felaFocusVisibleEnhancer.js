"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fela_utils_1 = require("fela-utils");
var _ = require("lodash");
/**
 * A Fela enhancer that allows to use `:focus-visible`. Uses `what-input` library and its global
 * selector. Modifies generated selectors:
 * `.a:focus-visible {}` => `html[data-whatinput="keyboard"] a:focus`.
 */
var felaFocusVisibleEnhancer = function (renderer) { return (tslib_1.__assign(tslib_1.__assign({}, renderer), { _emitChange: function (change) {
        if (change.type === fela_utils_1.RULE_TYPE && change.selector.indexOf(':focus-visible') !== -1) {
            var pseudo = change.pseudo ? change.pseudo.replace(':focus-visible', ':focus') : undefined;
            var selector = "html[data-whatinput=\"keyboard\"] " + change.selector.replace(':focus-visible', ':focus');
            var declarationReference = _.findKey(renderer.cache, change);
            var enhancedChange = tslib_1.__assign(tslib_1.__assign({}, change), { pseudo: pseudo,
                selector: selector });
            // Fela has two types for rendering:
            // - DOM via subscriptions that's why `_emitChange()` is replaced, it will notify all
            //   subscriptions
            // - static rendering, it directly accesses `.cache` via `clusterCache()` and generates
            //   stylesheets from changes
            renderer.cache[declarationReference] = enhancedChange;
            renderer._emitChange(enhancedChange);
            return;
        }
        renderer._emitChange(change);
    } })); };
exports.default = felaFocusVisibleEnhancer;
