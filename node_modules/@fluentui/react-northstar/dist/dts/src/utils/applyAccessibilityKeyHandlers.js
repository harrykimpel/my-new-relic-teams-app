"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _ = require("lodash");
var React = require("react");
// Makes sure that 'onKeyDown' is correctly overriden on the slots.
// It should be applied after 'unhandledProps' because they can contain 'onKeyDown' from user and is handled by UTs in isConformant()
var applyAccessibilityKeyHandlers = function (keyHandlers, value) {
    var valIsPropsObject = _.isPlainObject(value);
    var valIsReactElement = React.isValidElement(value);
    var slotProps = (valIsReactElement && value.props) || (valIsPropsObject && value) || {};
    return _.mapValues(keyHandlers, function (accessibilityHandler, handleName) { return function (e) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        accessibilityHandler(e);
        _.invoke.apply(_, tslib_1.__spreadArrays([slotProps, handleName, e], args));
    }; });
};
exports.default = applyAccessibilityKeyHandlers;
