import * as React from 'react';
import UIComponent from './UIComponent';
/**
 * Return the auto controlled state value for a give prop. The initial value is chosen in this order:
 *  - regular props
 *  - then, default props
 *  - then, initial state
 *  - then, `checked` defaults to false
 *  - then, `value` defaults to '' or [] if props.multiple
 *  - else, undefined
 *
 *  @param propName - A prop name
 *  @param props - A props object
 *  @param state - A state object
 *  @param includeDefaults - Whether or not to heed the default props or initial state
 */
export declare const getAutoControlledStateValue: (propName: string, props: any, state?: any, includeDefaults?: boolean) => any;
export default class AutoControlledComponent<P = {}, S = {}> extends UIComponent<P, S> {
    constructor(props: P, ctx: any);
    static getDerivedStateFromProps: React.GetDerivedStateFromProps<any, any>;
    /**
     * Override this method to use getDerivedStateFromProps() in child components.
     */
    static getAutoControlledStateFromProps: React.GetDerivedStateFromProps<any, any>;
}
