"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fela_1 = require("fela");
var fela_plugin_embedded_1 = require("fela-plugin-embedded");
var fela_plugin_fallback_value_1 = require("fela-plugin-fallback-value");
var fela_plugin_placeholder_prefixer_1 = require("fela-plugin-placeholder-prefixer");
var fela_plugin_rtl_1 = require("fela-plugin-rtl");
var felaDisableAnimationsPlugin_1 = require("./felaDisableAnimationsPlugin");
var felaExpandCssShorthandsPlugin_1 = require("./felaExpandCssShorthandsPlugin");
var felaFocusVisibleEnhancer_1 = require("./felaFocusVisibleEnhancer");
var felaInvokeKeyframesPlugin_1 = require("./felaInvokeKeyframesPlugin");
var felaSanitizeCssPlugin_1 = require("./felaSanitizeCssPlugin");
var felaStylisEnhancer_1 = require("./felaStylisEnhancer");
var felaDevMode = false;
try {
    // eslint-disable-next-line no-undef
    felaDevMode = !!window.localStorage.felaDevMode;
}
catch (_a) { }
if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
    if (felaDevMode) {
        /* eslint-disable-next-line no-console */
        console.warn([
            '@fluentui/react-northstar:',
            'You are running Fela in development mode and this can cause performance degrades.',
            'To disable it please paste `delete window.localStorage.felaDevMode` to your browsers console and reload current page.',
        ].join(' '));
    }
    else {
        /* eslint-disable-next-line no-console */
        console.warn([
            '@fluentui/react-northstar:',
            'You are running Fela in production mode.',
            'This limits your ability to edit styles in browsers development tools.',
            'To enable development mode please paste `window.localStorage.felaDevMode = true` to your browsers console and reload the page.',
        ].join(' '));
    }
}
// Blacklist contains a list of classNames that are used by FontAwesome
// https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use
var blacklistedClassNames = ['fa', 'fas', 'far', 'fal', 'fab'];
var filterClassName = function (className) {
    return className.indexOf('ad') === -1 && blacklistedClassNames.indexOf(className) === -1;
};
var rendererConfig = {
    devMode: felaDevMode,
    filterClassName: filterClassName,
    enhancers: [felaFocusVisibleEnhancer_1.default, felaStylisEnhancer_1.default],
    plugins: [
        felaDisableAnimationsPlugin_1.default(),
        // is necessary to prevent accidental style typos
        // from breaking ALL the styles on the page
        felaSanitizeCssPlugin_1.default({
            skip: ['content', 'keyframe'],
        }),
        fela_plugin_placeholder_prefixer_1.default(),
        felaInvokeKeyframesPlugin_1.default(),
        fela_plugin_embedded_1.default(),
        felaExpandCssShorthandsPlugin_1.default(),
        // Heads up!
        // This is required after fela-plugin-prefixer to resolve the array of fallback values prefixer produces.
        fela_plugin_fallback_value_1.default(),
        fela_plugin_rtl_1.default(),
    ],
};
exports.createRenderer = function () { return fela_1.createRenderer(rendererConfig); };
exports.felaRenderer = exports.createRenderer();
