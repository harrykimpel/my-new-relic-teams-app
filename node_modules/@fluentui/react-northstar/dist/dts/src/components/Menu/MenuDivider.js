"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var React = require("react");
var PropTypes = require("prop-types");
var utils_1 = require("../../utils");
var types_1 = require("../../types");
exports.menuDividerClassName = 'ui-menu__divider';
var MenuDivider = /** @class */ (function (_super) {
    tslib_1.__extends(MenuDivider, _super);
    function MenuDivider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuDivider.prototype.renderComponent = function (_a) {
        var ElementType = _a.ElementType, classes = _a.classes, unhandledProps = _a.unhandledProps, accessibility = _a.accessibility;
        var _b = this.props, children = _b.children, content = _b.content;
        return (React.createElement(ElementType, tslib_1.__assign({}, accessibility.attributes.root, utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] }), unhandledProps, { className: classes.root }), utils_1.childrenExist(children) ? children : content));
    };
    MenuDivider.displayName = 'MenuDivider';
    MenuDivider.deprecated_className = exports.menuDividerClassName;
    MenuDivider.defaultProps = {
        as: 'li',
        accessibility: accessibility_1.menuDividerBehavior,
    };
    MenuDivider.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { primary: PropTypes.bool, secondary: PropTypes.bool, vertical: PropTypes.bool, inSubmenu: PropTypes.bool });
    return MenuDivider;
}(utils_1.UIComponent));
MenuDivider.create = utils_1.createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });
/**
 * A MenuDivider is non-actionable element that visually segments items of Menu.
 */
exports.default = types_1.withSafeTypeForAs(MenuDivider);
