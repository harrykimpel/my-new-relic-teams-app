"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_component_ref_1 = require("@fluentui/react-component-ref");
var customPropTypes = require("@fluentui/react-proptypes");
var React = require("react");
var PropTypes = require("prop-types");
var _ = require("lodash");
var react_icons_northstar_1 = require("@fluentui/react-icons-northstar");
var keyboard_key_1 = require("keyboard-key");
var types_1 = require("../../types");
var utils_1 = require("../../utils");
var Image_1 = require("../Image/Image");
var Label_1 = require("../Label/Label");
var Box_1 = require("../Box/Box");
exports.dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';
exports.dropdownSelectedItemSlotClassNames = {
    header: exports.dropdownSelectedItemClassName + "__header",
    icon: exports.dropdownSelectedItemClassName + "__icon",
    image: exports.dropdownSelectedItemClassName + "__image",
};
var DropdownSelectedItem = /** @class */ (function (_super) {
    tslib_1.__extends(DropdownSelectedItem, _super);
    function DropdownSelectedItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.itemRef = React.createRef();
        _this.handleClick = function (e) {
            _.invoke(_this.props, 'onClick', e, _this.props);
        };
        _this.handleKeyDown = function (e) {
            _.invoke(_this.props, 'onKeyDown', e, _this.props);
        };
        _this.handleIconOverrides = function (props) { return function (predefinedProps) { return (tslib_1.__assign(tslib_1.__assign({}, props), { onClick: function (e, iconProps) {
                e.stopPropagation();
                _.invoke(_this.props, 'onRemove', e, _this.props);
                _.invoke(predefinedProps, 'onClick', e, iconProps);
            }, onKeyDown: function (e, iconProps) {
                e.stopPropagation();
                if (keyboard_key_1.default.getCode(e) === keyboard_key_1.default.Enter) {
                    _.invoke(_this.props, 'onRemove', e, _this.props);
                }
                _.invoke(predefinedProps, 'onKeyDown', e, iconProps);
            } })); }; };
        return _this;
    }
    DropdownSelectedItem.prototype.componentDidUpdate = function (prevProps) {
        if (!prevProps.active && this.props.active) {
            this.itemRef.current.focus();
        }
    };
    DropdownSelectedItem.prototype.renderComponent = function (_a) {
        var _this = this;
        var unhandledProps = _a.unhandledProps, classes = _a.classes, styles = _a.styles;
        var _b = this.props, active = _b.active, header = _b.header, icon = _b.icon, image = _b.image;
        var contentElement = Box_1.default.create(header, {
            defaultProps: function () { return ({
                as: 'span',
                className: exports.dropdownSelectedItemSlotClassNames.header,
                styles: styles.header,
            }); },
        });
        var iconProps = _.isNil(icon)
            ? icon
            : {
                name: null,
                children: function (ComponentType, props) {
                    return Box_1.default.create(icon, {
                        defaultProps: function () { return ({
                            'aria-label': "Remove " + header + " from selection.",
                            className: exports.dropdownSelectedItemSlotClassNames.icon,
                            styles: styles.icon,
                        }); },
                        overrideProps: _this.handleIconOverrides(props),
                    });
                },
            };
        var imageProps = _.isNil(image)
            ? image
            : {
                children: function (ComponentType, props) {
                    return Image_1.default.create(image, {
                        defaultProps: function () { return ({
                            avatar: true,
                            className: exports.dropdownSelectedItemSlotClassNames.image,
                            styles: styles.image,
                        }); },
                        overrideProps: props,
                    });
                },
            };
        return (React.createElement(react_component_ref_1.Ref, { innerRef: this.itemRef },
            React.createElement(Label_1.default, tslib_1.__assign({ className: classes.root, tabIndex: active ? 0 : -1, styles: styles.root, circular: true, onClick: this.handleClick, onKeyDown: this.handleKeyDown, content: contentElement, icon: iconProps, image: imageProps }, unhandledProps))));
    };
    DropdownSelectedItem.displayName = 'DropdownSelectedItem';
    DropdownSelectedItem.deprecated_className = exports.dropdownSelectedItemClassName;
    DropdownSelectedItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
        accessibility: false,
        children: false,
    })), { active: PropTypes.bool, header: customPropTypes.itemShorthand, icon: customPropTypes.shorthandAllowingChildren, image: customPropTypes.itemShorthandWithoutJSX, onClick: PropTypes.func, onKeyDown: PropTypes.func, onRemove: PropTypes.func });
    DropdownSelectedItem.defaultProps = {
        // TODO: fix me
        icon: React.createElement(react_icons_northstar_1.CloseIcon, null),
    };
    return DropdownSelectedItem;
}(utils_1.UIComponent));
DropdownSelectedItem.create = utils_1.createShorthandFactory({
    Component: DropdownSelectedItem,
    mappedProp: 'header',
});
/**
 * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.
 */
exports.default = types_1.withSafeTypeForAs(DropdownSelectedItem);
