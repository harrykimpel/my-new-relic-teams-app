"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var customPropTypes = require("@fluentui/react-proptypes");
var React = require("react");
var _ = require("lodash");
var types_1 = require("../../types");
var utils_1 = require("../../utils");
var Reaction_1 = require("./Reaction");
exports.reactionGroupClassName = 'ui-reactions';
var ReactionGroup = /** @class */ (function (_super) {
    tslib_1.__extends(ReactionGroup, _super);
    function ReactionGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReactionGroup.prototype.renderComponent = function (_a) {
        var ElementType = _a.ElementType, classes = _a.classes, accessibility = _a.accessibility, styles = _a.styles, unhandledProps = _a.unhandledProps;
        var _b = this.props, children = _b.children, items = _b.items, content = _b.content;
        if (_.isNil(items)) {
            return (React.createElement(ElementType, tslib_1.__assign({}, accessibility.attributes.root, utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] }), unhandledProps, { className: classes.root }), utils_1.childrenExist(children) ? children : content));
        }
        return (React.createElement(ElementType, tslib_1.__assign({}, unhandledProps, { className: classes.root }), _.map(items, function (reaction) {
            return Reaction_1.default.create(reaction, {
                defaultProps: function () { return ({
                    styles: styles.reaction,
                }); },
            });
        })));
    };
    ReactionGroup.displayName = 'ReactionGroup';
    ReactionGroup.deprecated_className = exports.reactionGroupClassName;
    ReactionGroup.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { items: customPropTypes.collectionShorthand });
    return ReactionGroup;
}(utils_1.UIComponent));
ReactionGroup.create = utils_1.createShorthandFactory({
    Component: ReactionGroup,
    mappedProp: 'content',
    mappedArrayProp: 'items',
});
/**
 * A ReactionGroup groups multiple Reaction elements.
 */
exports.default = types_1.withSafeTypeForAs(ReactionGroup);
