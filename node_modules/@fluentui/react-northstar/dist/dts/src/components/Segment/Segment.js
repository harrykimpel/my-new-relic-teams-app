"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var PropTypes = require("prop-types");
var utils_1 = require("../../utils");
var types_1 = require("../../types");
var Box_1 = require("../Box/Box");
exports.segmentClassName = 'ui-segment';
var Segment = /** @class */ (function (_super) {
    tslib_1.__extends(Segment, _super);
    function Segment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Segment.prototype.renderComponent = function (_a) {
        var accessibility = _a.accessibility, ElementType = _a.ElementType, classes = _a.classes, unhandledProps = _a.unhandledProps;
        var _b = this.props, children = _b.children, content = _b.content;
        return (React.createElement(ElementType, tslib_1.__assign({}, utils_1.rtlTextContainer.getAttributes({ forElements: [children] }), accessibility.attributes.root, unhandledProps, { className: classes.root }), utils_1.childrenExist(children) ? children : Box_1.default.create(content)));
    };
    Segment.deprecated_className = exports.segmentClassName;
    Segment.displayName = 'Segment';
    Segment.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
        content: 'shorthand',
        color: true,
    })), { disabled: PropTypes.bool, inverted: PropTypes.bool, rtlAttributes: PropTypes.func });
    Segment.defaultProps = {
        as: 'div',
    };
    return Segment;
}(utils_1.UIComponent));
/**
 * A Segment visually groups related content.
 */
exports.default = types_1.withSafeTypeForAs(Segment);
