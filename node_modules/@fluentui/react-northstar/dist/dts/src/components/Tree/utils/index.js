"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _ = require("lodash");
var React = require("react");
exports.hasSubtree = function (item) {
    return !_.isNil(item['items']) && item['items'].length > 0;
};
exports.removeItemAtIndex = function (items, itemIndex) {
    return tslib_1.__spreadArrays(items.slice(0, itemIndex), items.slice(itemIndex + 1));
};
/**
 * Looks for the item inside the nested items array and returns its siblings.
 * @param {any[]} items The nested items array.
 * @param {string} itemId The id of the item to return the children of.
 * @returns {any[]} The item siblings
 */
exports.getSiblings = function (items, itemId) {
    function getSiblingsFn(items) {
        var itemIndex = items.findIndex(function (item) { return item.id === itemId; });
        if (itemIndex > -1) {
            return exports.removeItemAtIndex(items, itemIndex);
        }
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            if (item.items) {
                var result = getSiblingsFn(item.items);
                if (result) {
                    return result;
                }
            }
        }
        return null;
    }
    return getSiblingsFn(items);
};
exports.TreeContext = React.createContext({
    onFocusFirstChild: _.noop,
    onFocusParent: _.noop,
    onSiblingsExpand: _.noop,
    onTitleClick: _.noop,
});
