"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_bindings_1 = require("@fluentui/react-bindings");
var react_icons_northstar_1 = require("@fluentui/react-icons-northstar");
var styles_1 = require("@fluentui/styles");
var React = require("react");
// @ts-ignore
var react_fela_1 = require("react-fela");
var types_1 = require("../../types");
var SvgIcon = function (props) {
    var context = React.useContext(react_fela_1.ThemeContext);
    var _a = react_bindings_1.useTelemetry(SvgIcon.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var alt = props.alt, ariaLabel = props["aria-label"], bordered = props.bordered, circular = props.circular, className = props.className, design = props.design, disabled = props.disabled, children = props.children, outline = props.outline, rotate = props.rotate, size = props.size, styles = props.styles, variables = props.variables, xSpacing = props.xSpacing;
    var classes = react_bindings_1.useStyles(SvgIcon.displayName, {
        className: react_icons_northstar_1.svgIconClassName,
        mapPropsToStyles: function () { return ({
            bordered: bordered,
            circular: circular,
            disabled: disabled,
            outline: outline,
            rotate: rotate,
            size: size,
            xSpacing: xSpacing,
        }); },
        mapPropsToInlineStyles: function () { return ({ className: className, design: design, styles: styles, variables: variables }); },
        rtl: context.rtl,
    }).classes;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.getUnhandledProps(SvgIcon.handledProps, props);
    var element = (React.createElement(ElementType, tslib_1.__assign({ role: "img", "aria-hidden": alt || ariaLabel ? undefined : 'true', "aria-label": ariaLabel, className: classes.root }, unhandledProps), styles_1.callable(children)({ classes: classes, rtl: context.rtl, props: props })));
    setEnd();
    return element;
};
SvgIcon.displayName = react_icons_northstar_1.svgIconDisplayName;
SvgIcon.handledProps = tslib_1.__spreadArrays(react_icons_northstar_1.svgIconHandledProps, ['children']);
SvgIcon.defaultProps = {
    as: 'span',
    size: 'medium',
    rotate: 0,
};
/**
 * An SvgIcon displays a pictogram with semantic meaning.
 */
exports.default = types_1.withSafeTypeForAs(SvgIcon);
