{"version":3,"sources":["themes/teams/components/Toolbar/toolbarMenuItemStyles.ts"],"names":["toolbarMenuItemStyles","root","p","props","v","variables","siteVariables","theme","colors","colorScheme","borderFocusStyles","borderRadius","position","color","menuItemForeground","foreground1","borderWidth","menuBorderWidth","backgroundColor","borderColor","display","alignItems","textAlign","width","maxWidth","padding","menuItemPadding","cursor","outline","menuItemForegroundHover","menuItemBackgroundHover","toolbarMenuItemSlotClassNames","submenuIndicator","backgroundImage","activeIndicator","disabled","menuItemForegroundDisabled","foregroundDisabled1","menuItemBackgroundDisabled","backgroundPosition","backgroundRepeat","height","right","rtl","transform","wrapper","icon","hasContent","marginRight"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle, ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { getColorScheme } from '../../colors';\nimport { pxToRem } from '../../../../utils';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport {\n  ToolbarMenuItemStylesProps,\n  toolbarMenuItemSlotClassNames,\n} from '../../../../components/Toolbar/ToolbarMenuItem';\nimport { ToolbarVariables } from './toolbarVariables';\nimport submenuIndicatorUrl from './submenuIndicatorUrl';\nimport activeIndicatorUrl from './activeIndicatorUrl';\n\nconst toolbarMenuItemStyles: ComponentSlotStylesPrepared<ToolbarMenuItemStylesProps, ToolbarVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme);\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: 0,\n    });\n\n    return {\n      position: 'relative',\n      color: v.menuItemForeground || colors.foreground1,\n      borderWidth: v.menuBorderWidth,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'left',\n      width: '100%',\n      maxWidth: '100%',\n      padding: v.menuItemPadding,\n      cursor: 'pointer',\n\n      ':focus': {\n        outline: 0,\n      },\n\n      ':hover': {\n        color: v.menuItemForegroundHover || colors.menuItemForegroundHover,\n        backgroundColor: v.menuItemBackgroundHover || colors.menuItemBackgroundHover,\n        [`& .${toolbarMenuItemSlotClassNames.submenuIndicator}`]: {\n          backgroundImage: submenuIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover),\n        },\n        [`& .${toolbarMenuItemSlotClassNames.activeIndicator}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover),\n        },\n      },\n\n      ':focus-visible': borderFocusStyles[':focus-visible'],\n\n      ...(p.disabled && {\n        cursor: 'default',\n        color: v.menuItemForegroundDisabled || colors.foregroundDisabled1,\n        backgroundColor: v.menuItemBackgroundDisabled,\n        [`& .${toolbarMenuItemSlotClassNames.submenuIndicator}`]: {\n          backgroundImage: submenuIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1),\n        },\n        [`& .${toolbarMenuItemSlotClassNames.activeIndicator}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1),\n        },\n        ':hover': {\n          // empty to overwrite all existing hover styles\n        },\n      }),\n    };\n  },\n\n  activeIndicator: ({ variables: v }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme);\n    return {\n      backgroundImage: activeIndicatorUrl(v.menuItemForeground || colors.foreground1),\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      width: pxToRem(24),\n      height: '100%',\n      position: 'absolute',\n      right: pxToRem(7),\n    };\n  },\n\n  submenuIndicator: ({ variables: v, rtl }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme);\n    return {\n      backgroundImage: submenuIndicatorUrl(v.menuItemForeground || colors.foreground1),\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      ...(rtl && {\n        transform: `scaleX(-1)`,\n      }),\n      width: pxToRem(16),\n      height: '100%',\n      position: 'absolute',\n      right: pxToRem(7),\n    };\n  },\n\n  wrapper: () => ({\n    display: 'block',\n  }),\n\n  icon: ({ props: p }) => ({\n    ...(p.hasContent && {\n      marginRight: pxToRem(10),\n    }),\n  }),\n};\n\nexport default toolbarMenuItemStyles;\n"],"file":"toolbarMenuItemStyles.js"}