"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _clearIndicatorUrl = _interopRequireDefault(require("./clearIndicatorUrl"));

var _utils = require("../../../../utils");

var inputStyles = {
  root: function root(_ref) {
    var p = _ref.props;
    return Object.assign({
      alignItems: 'center',
      display: 'inline-flex',
      position: 'relative',
      outline: 0
    }, p.fluid && {
      width: '100%'
    });
  },
  input: function input(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables;
    return Object.assign({
      backgroundColor: v.backgroundColor
    }, p.inverted && {
      backgroundColor: v.backgroundColorInverted
    }, {
      lineHeight: 'unset',
      color: v.fontColor,
      borderColor: v.borderColor,
      borderRadius: v.borderRadius,
      borderStyle: 'solid',
      borderWidth: v.borderWidth,
      outline: 'none',
      padding: v.inputPadding,
      position: 'relative'
    }, p.fluid && {
      width: '100%'
    }, {}, p.inline && {
      float: 'left'
    }, {}, p.disabled && {
      color: v.colorDisabled,
      boxShadow: 'none'
    }, {
      '::placeholder': Object.assign({
        color: v.placeholderColor,
        opacity: 1
      }, p.disabled && {
        color: v.colorDisabled
      }),
      ':focus': {
        borderColor: v.inputFocusBorderColor
      }
    }, p.clearable && {
      padding: v.inputPaddingWithIconAtEnd
    }, {}, p.icon && {
      padding: p.iconPosition === 'start' ? v.inputPaddingWithIconAtStart : v.inputPaddingWithIconAtEnd
    });
  },
  icon: function icon(_ref3) {
    var p = _ref3.props,
        v = _ref3.variables;
    return Object.assign({
      color: v.iconColor,
      outline: 0,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      position: v.iconPosition
    }, p.disabled && {
      color: v.colorDisabled
    }, {}, p.iconPosition === 'start' && {
      left: v.iconLeft
    }, {}, p.iconPosition === 'end' && {
      right: v.iconRight
    }, {}, p.clearable && p.hasValue && {
      backgroundImage: (0, _clearIndicatorUrl.default)(p.disabled ? v.colorDisabled : v.iconColor),
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat',
      height: '100%',
      width: (0, _utils.pxToRem)(16)
    });
  }
};
var _default = inputStyles;
exports.default = _default;
//# sourceMappingURL=inputStyles.js.map
