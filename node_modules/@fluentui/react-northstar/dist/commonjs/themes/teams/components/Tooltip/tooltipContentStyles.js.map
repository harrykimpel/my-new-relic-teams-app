{"version":3,"sources":["themes/teams/components/Tooltip/tooltipContentStyles.ts"],"names":["tooltipContentStyles","root","p","props","v","variables","display","position","maxWidth","zIndex","pointing","pointerEvents","placement","basePlacement","margin","pointerMargin","open","opacity","pointer","rtl","width","pointerWidth","height","pointerHeight","backgroundColor","borderSize","borderColor","gap","pointerGap","svg","content","padding","textAlign","color","background","borderRadius","boxShadow"],"mappings":";;;;;;;;;AAGA;;AACA;;AAEA,IAAMA,oBAAqG,GAAG;AAC5GC,EAAAA,IAAI,EAAE;AAAA,QAAUC,CAAV,QAAGC,KAAH;AAAA,QAAwBC,CAAxB,QAAaC,SAAb;AAAA;AACJC,MAAAA,OAAO,EAAE,OADL;AAEJC,MAAAA,QAAQ,EAAE,UAFN;AAIJC,MAAAA,QAAQ,EAAEJ,CAAC,CAACI,QAJR;AAKJC,MAAAA,MAAM,EAAEL,CAAC,CAACK;AALN,OAOAP,CAAC,CAACQ,QAAF;AACFC,MAAAA,aAAa,EAAE;AADb,OAGC,0CAAmB;AACpBC,MAAAA,SAAS,EAAEV,CAAC,CAACW,aADO;AAEpBC,MAAAA,MAAM,EAAEV,CAAC,CAACW;AAFU,KAAnB,CAHD,CAPA,MAgBA,CAACb,CAAC,CAACc,IAAH,IAAW;AACbC,MAAAA,OAAO,EAAE;AADI,KAhBX;AAAA,GADsG;AAqB5GC,EAAAA,OAAO,EAAE;AAAA,QAAUhB,CAAV,SAAGC,KAAH;AAAA,QAAwBC,CAAxB,SAAaC,SAAb;AAAA,QAA2Bc,GAA3B,SAA2BA,GAA3B;AAAA;AACPb,MAAAA,OAAO,EAAE,OADF;AAEPC,MAAAA,QAAQ,EAAE,UAFH;AAGPa,MAAAA,KAAK,EAAEhB,CAAC,CAACiB,YAHF;AAIPC,MAAAA,MAAM,EAAElB,CAAC,CAACmB;AAJH,OAMJ,wCAAiB;AAClBC,MAAAA,eAAe,EAAEpB,CAAC,CAACoB,eADD;AAElBC,MAAAA,UAAU,EAAErB,CAAC,CAACqB,UAFI;AAGlBC,MAAAA,WAAW,EAAE,aAHK;AAIlBC,MAAAA,GAAG,EAAEvB,CAAC,CAACwB,UAJW;AAKlBN,MAAAA,MAAM,EAAElB,CAAC,CAACmB,aALQ;AAMlBH,MAAAA,KAAK,EAAEhB,CAAC,CAACiB,YANS;AAQlBT,MAAAA,SAAS,EAAEV,CAAC,CAACW,aARK;AASlBM,MAAAA,GAAG,EAAHA,GATkB;AAUlBU,MAAAA,GAAG,EAAE,4BAAWzB,CAAC,CAACoB,eAAb;AAVa,KAAjB,CANI;AAAA,GArBmG;AAwC5GM,EAAAA,OAAO,EAAE;AAAA,QAAU5B,CAAV,SAAGC,KAAH;AAAA,QAAwBC,CAAxB,SAAaC,SAAb;AAAA;AACPC,MAAAA,OAAO,EAAE,OADF;AAEPyB,MAAAA,OAAO,EAAE3B,CAAC,CAAC2B,OAFJ;AAGPC,MAAAA,SAAS,EAAE,MAHJ;AAKPC,MAAAA,KAAK,EAAE7B,CAAC,CAAC6B,KALF;AAMPC,MAAAA,UAAU,EAAE9B,CAAC,CAACoB,eANP;AAOPW,MAAAA,YAAY,EAAE/B,CAAC,CAAC+B,YAPT;AAQPC,MAAAA,SAAS,EAAEhC,CAAC,CAACgC;AARN,OAUHlC,CAAC,CAACQ,QAAF,IAAc;AAChBC,MAAAA,aAAa,EAAE;AADC,KAVX;AAAA;AAxCmG,CAA9G;eAwDeX,oB","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { TooltipContentStylesProps } from '../../../../components/Tooltip/TooltipContent';\nimport { TooltipContentVariables } from './tooltipContentVariables';\nimport { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\nimport pointerSvg from '../../pointerSvgUrl';\n\nconst tooltipContentStyles: ComponentSlotStylesPrepared<TooltipContentStylesProps, TooltipContentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n\n    maxWidth: v.maxWidth,\n    zIndex: v.zIndex,\n\n    ...(p.pointing && {\n      pointerEvents: 'all',\n\n      ...getContainerStyles({\n        placement: p.basePlacement,\n        margin: v.pointerMargin,\n      }),\n    }),\n\n    ...(!p.open && {\n      opacity: 0,\n    }),\n  }),\n  pointer: ({ props: p, variables: v, rtl }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n    width: v.pointerWidth,\n    height: v.pointerHeight,\n\n    ...getPointerStyles({\n      backgroundColor: v.backgroundColor,\n      borderSize: v.borderSize,\n      borderColor: 'transparent',\n      gap: v.pointerGap,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n\n      placement: p.basePlacement,\n      rtl,\n      svg: pointerSvg(v.backgroundColor),\n    }),\n  }),\n  content: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    padding: v.padding,\n    textAlign: 'left',\n\n    color: v.color,\n    background: v.backgroundColor,\n    borderRadius: v.borderRadius,\n    boxShadow: v.boxShadow,\n\n    ...(p.pointing && {\n      pointerEvents: 'all',\n    }),\n  }),\n};\n\nexport default tooltipContentStyles;\n"],"file":"tooltipContentStyles.js"}