{"version":3,"sources":["themes/teams/components/Checkbox/checkboxVariables.ts"],"names":["toggleMovementDistance","padding","defaultValue","siteVars","checkboxColor","toggleBackground","toggleBorderColor","colors","grey","toggleBorderStyle","toggleBorderWidth","toggleIndicatorColor","checkboxCheckedColor","checkboxToggleCheckedBackground","checkboxToggleCheckedBorderColor","checkboxToggleCheckedColor","disabledColor","disabledCheckboxColor","disabledToggleBackground","disabledToggleBorderColor","textColor","background","borderColor","borderStyle","borderRadius","borderWidth","indicatorColor","gap","margin","rootPadding","textColorHover","borderColorHover","checkedBackgroundHover","toggleBorderRadius","toggleIndicatorSize","toggleMargin","togglePadding","toggleWidth","toggleHeight","checkedTextColor","checkedBackground","checkedBorderColor","checkedIndicatorColor","toggleCheckedPadding","disabledBackground","disabledBackgroundChecked","disabledBorderColor","disabledCheckedIndicatorColor","disabledToggleIndicatorColor"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport * as _ from 'lodash';\n\nexport type CheckboxVariables = {\n  rootPadding: string;\n\n  textColor: string;\n  indicatorColor: string;\n\n  textColorHover: string;\n  borderColorHover: string;\n  background: string;\n  borderColor: string;\n  borderStyle: string;\n  borderRadius: string;\n  borderWidth: string;\n  checkboxColor: string;\n  gap: string;\n  margin: string;\n  padding: string;\n\n  toggleBackground: string;\n  toggleBorderColor: string;\n  toggleBorderStyle: string;\n  toggleBorderRadius: string;\n  toggleBorderWidth: string;\n  toggleIndicatorColor: string;\n  toggleMargin: string;\n  togglePadding: string;\n\n  checkedBackground: string;\n  checkedBorderColor: string;\n  checkboxCheckedColor: string;\n  checkedBackgroundHover: string;\n  checkedTextColor: string;\n  checkedIndicatorColor: string;\n  checkboxToggleCheckedColor: string;\n  checkboxToggleCheckedBackground: string;\n  checkboxToggleCheckedBorderColor: string;\n  toggleCheckedPadding: string;\n  toggleIndicatorSize: string;\n  toggleWidth: string;\n  toggleHeight: string;\n\n  disabledColor: string;\n  disabledBackground: string;\n  disabledBorderColor: string;\n  disabledCheckboxColor: string;\n  disabledToggleIndicatorColor: string;\n  disabledToggleBackground: string;\n  disabledToggleBorderColor: string;\n  disabledBackgroundChecked: string;\n  disabledCheckedIndicatorColor: string;\n};\n\nconst toggleMovementDistance = pxToRem(20);\nconst padding = pxToRem(2);\nconst defaultValue = 'red';\n\nexport default (siteVars: any): CheckboxVariables => ({\n  checkboxColor: 'transparent',\n\n  toggleBackground: 'transparent',\n  toggleBorderColor: siteVars.colors.grey[300],\n  toggleBorderStyle: `solid`,\n  toggleBorderWidth: pxToRem(1),\n  toggleIndicatorColor: 'inherit',\n\n  checkboxCheckedColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedBackground: 'transparent',\n  checkboxToggleCheckedBorderColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedColor: 'inherit',\n\n  disabledColor: siteVars.colors.grey[300],\n\n  disabledCheckboxColor: siteVars.colors.grey[300],\n  disabledToggleBackground: 'transparent',\n  disabledToggleBorderColor: siteVars.colors.grey[200],\n  textColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  background: 'transparent',\n  borderColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  borderStyle: 'solid',\n  borderRadius: pxToRem(3),\n  borderWidth: pxToRem(1),\n  indicatorColor: 'transparent',\n  gap: pxToRem(12),\n  margin: `${pxToRem(2.8)} 0 0 0`,\n  padding,\n  rootPadding: '3px 5px',\n\n  textColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  borderColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackgroundHover: _.get(siteVars, 'colorScheme.brand.backgroundHover', defaultValue),\n\n  toggleBorderRadius: pxToRem(999),\n  toggleIndicatorSize: pxToRem(14),\n  toggleMargin: '0',\n  togglePadding: `${padding} ${toggleMovementDistance} ${padding} ${padding}`,\n  toggleWidth: pxToRem(38),\n  toggleHeight: pxToRem(20),\n\n  checkedTextColor: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackground: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedBorderColor: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedIndicatorColor: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  toggleCheckedPadding: `${padding} ${padding} ${padding} ${toggleMovementDistance}`,\n\n  disabledBackground: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  disabledBackgroundChecked: _.get(siteVars, 'colorScheme.default.backgroundDisabled', defaultValue),\n  disabledBorderColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled1', defaultValue),\n  disabledCheckedIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n  disabledToggleIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n});\n"],"file":"checkboxVariables.js"}