{"version":3,"sources":["utils/commonPropTypes.ts"],"names":["createCommon","config","accessibility","as","children","className","color","content","styled","customPropTypes","PropTypes","elementType","element","node","string","itemShorthand","nodeContent","styles","oneOfType","object","func","variables","design"],"mappings":";;;;;;;;;AAAA;;AACA;;AAYO,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAqC;AAAA,MAApCC,MAAoC,uEAAP,EAAO;AAAA,8BAS3DA,MAT2D,CAE7DC,aAF6D;AAAA,MAE7DA,aAF6D,sCAE7C,IAF6C;AAAA,mBAS3DD,MAT2D,CAG7DE,EAH6D;AAAA,MAG7DA,EAH6D,2BAGxD,IAHwD;AAAA,yBAS3DF,MAT2D,CAI7DG,QAJ6D;AAAA,MAI7DA,QAJ6D,iCAIlD,MAJkD;AAAA,0BAS3DH,MAT2D,CAK7DI,SAL6D;AAAA,MAK7DA,SAL6D,kCAKjD,IALiD;AAAA,sBAS3DJ,MAT2D,CAM7DK,KAN6D;AAAA,MAM7DA,KAN6D,8BAMrD,KANqD;AAAA,wBAS3DL,MAT2D,CAO7DM,OAP6D;AAAA,MAO7DA,OAP6D,gCAOnD,MAPmD;AAAA,uBAS3DN,MAT2D,CAQ7DO,MAR6D;AAAA,MAQ7DA,MAR6D,+BAQpD,IARoD;AAU/D,2BACMN,aAAa,IAAI;AACnBA,IAAAA,aAAa,EAAEO,eAAe,CAACP;AADZ,GADvB,MAIMC,EAAE,IAAI;AACRA,IAAAA,EAAE,EAAEO,SAAS,CAACC;AADN,GAJZ,MAOMP,QAAQ,IAAI;AACdA,IAAAA,QAAQ,EAAEA,QAAQ,KAAK,SAAb,GAAyBM,SAAS,CAACE,OAAnC,GAA6CF,SAAS,CAACG;AADnD,GAPlB,MAUMR,SAAS,IAAI;AACfA,IAAAA,SAAS,EAAEK,SAAS,CAACI;AADN,GAVnB,MAaMR,KAAK,IAAI;AACXA,IAAAA,KAAK,EAAEI,SAAS,CAACI;AADN,GAbf,MAgBMP,OAAO,IAAI;AACbA,IAAAA,OAAO,EAAEA,OAAO,KAAK,WAAZ,GAA0BE,eAAe,CAACM,aAA1C,GAA0DN,eAAe,CAACO;AADtE,GAhBjB,MAmBMR,MAAM,IAAI;AACZS,IAAAA,MAAM,EAAEP,SAAS,CAACQ,SAAV,CAAoB,CAACR,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACU,IAA7B,CAApB,CADI;AAEZC,IAAAA,SAAS,EAAEX,SAAS,CAACQ,SAAV,CAAoB,CAACR,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACU,IAA7B,CAApB,CAFC;AAGZE,IAAAA,MAAM,EAAEb,eAAe,CAACa;AAHZ,GAnBhB;AAyBD,CAnCM","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\n\nexport interface CreateCommonConfig {\n  accessibility?: boolean;\n  children?: boolean | 'node' | 'element';\n  as?: boolean;\n  className?: boolean;\n  color?: boolean;\n  content?: boolean | 'node' | 'shorthand';\n  styled?: boolean;\n}\n\nexport const createCommon = (config: CreateCommonConfig = {}) => {\n  const {\n    accessibility = true,\n    as = true,\n    children = 'node',\n    className = true,\n    color = false,\n    content = 'node',\n    styled = true,\n  } = config;\n  return {\n    ...(accessibility && {\n      accessibility: customPropTypes.accessibility,\n    }),\n    ...(as && {\n      as: PropTypes.elementType,\n    }),\n    ...(children && {\n      children: children === 'element' ? PropTypes.element : PropTypes.node,\n    }),\n    ...(className && {\n      className: PropTypes.string,\n    }),\n    ...(color && {\n      color: PropTypes.string,\n    }),\n    ...(content && {\n      content: content === 'shorthand' ? customPropTypes.itemShorthand : customPropTypes.nodeContent,\n    }),\n    ...(styled && {\n      styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      design: customPropTypes.design,\n    }),\n  };\n};\n"],"file":"commonPropTypes.js"}