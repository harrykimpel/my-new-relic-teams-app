"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var animationProps = ['animation', 'animationName', 'animationDuration', 'animationTimingFunction', 'animationDelay', 'animationIterationCount', 'animationDirection', 'animationFillMode', 'animationPlayState'];
/**
 * Fela plugin for disabling animations. The animations are disabled or not based on the
 * props' disableAnimations param. If the value of the prop is true, all animation related
 * styles are removed.
 *
 * Caution! Infinite recursion is possible in case if style object has links to self in the props
 * tree.
 */

var _default = function _default() {
  var disableAnimations = function disableAnimations(styles, type, renderer, props) {
    if (props && props.disableAnimations && type === 'RULE') {
      return Object.keys(styles).reduce(function (acc, cssPropertyName) {
        var cssPropertyValue = styles[cssPropertyName];

        if (animationProps.indexOf(cssPropertyName) !== -1) {
          return acc;
        }

        if ((0, _typeof2.default)(cssPropertyValue) === 'object') {
          return Object.assign({}, acc, (0, _defineProperty2.default)({}, cssPropertyName, disableAnimations(cssPropertyValue, type, renderer, props)));
        }

        return Object.assign({}, acc, (0, _defineProperty2.default)({}, cssPropertyName, styles[cssPropertyName]));
      }, {});
    }

    return styles;
  };

  return disableAnimations;
};

exports.default = _default;
//# sourceMappingURL=felaDisableAnimationsPlugin.js.map
