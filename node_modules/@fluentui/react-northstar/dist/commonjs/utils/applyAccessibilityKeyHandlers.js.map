{"version":3,"sources":["utils/applyAccessibilityKeyHandlers.ts"],"names":["applyAccessibilityKeyHandlers","keyHandlers","value","valIsPropsObject","valIsReactElement","React","isValidElement","slotProps","props","accessibilityHandler","handleName","e","args"],"mappings":";;;;;;;;;;;;;;;;;AAEA;;AAIA;AACA;AACA,IAAMA,6BAA6B,GAAG,SAAhCA,6BAAgC,CACpCC,WADoC,EAEpCC,KAFoC,EAGmE;AACvG,MAAMC,gBAAgB,GAAG,6BAAgBD,KAAhB,CAAzB;AACA,MAAME,iBAAiB,GAAGC,KAAK,CAACC,cAAN,CAAqBJ,KAArB,CAA1B;AAEA,MAAMK,SAAS,GACZH,iBAAiB,IAAKF,KAAD,CAAqCM,KAA3D,IAAsEL,gBAAgB,IAAKD,KAA3F,IAA+G,EADjH;AAGA,SAAO,yBACLD,WADK,EAEL,UAACQ,oBAAD,EAA6CC,UAA7C;AAAA,WAAoE,UAACC,CAAD,EAA4C;AAC9GF,MAAAA,oBAAoB,CAACE,CAAD,CAApB;;AAD8G,wCAAhBC,IAAgB;AAAhBA,QAAAA,IAAgB;AAAA;;AAE9G,sCAASL,SAAT,EAAoBG,UAApB,EAAgCC,CAAhC,SAAsCC,IAAtC;AACD,KAHD;AAAA,GAFK,CAAP;AAOD,CAjBD;;eAmBeZ,6B","sourcesContent":["import { AccessibilityHandlerProps, KeyboardEventHandler } from '@fluentui/react-bindings';\nimport * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { Props, ShorthandValue } from '../types';\n\n// Makes sure that 'onKeyDown' is correctly overriden on the slots.\n// It should be applied after 'unhandledProps' because they can contain 'onKeyDown' from user and is handled by UTs in isConformant()\nconst applyAccessibilityKeyHandlers = (\n  keyHandlers: AccessibilityHandlerProps,\n  value: Props | ShorthandValue<Props>,\n): Partial<Record<keyof AccessibilityHandlerProps, (e: React.KeyboardEvent, ...args: any[]) => void>> => {\n  const valIsPropsObject = _.isPlainObject(value);\n  const valIsReactElement = React.isValidElement(value);\n\n  const slotProps =\n    (valIsReactElement && (value as React.ReactElement<Props>).props) || (valIsPropsObject && (value as Props)) || {};\n\n  return _.mapValues(\n    keyHandlers,\n    (accessibilityHandler: KeyboardEventHandler, handleName: string) => (e: React.KeyboardEvent, ...args: any[]) => {\n      accessibilityHandler(e);\n      _.invoke(slotProps, handleName, e, ...args);\n    },\n  );\n};\n\nexport default applyAccessibilityKeyHandlers;\n"],"file":"applyAccessibilityKeyHandlers.js"}