"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.felaRenderer = exports.createRenderer = void 0;

var _fela = require("fela");

var _felaPluginEmbedded = _interopRequireDefault(require("fela-plugin-embedded"));

var _felaPluginFallbackValue = _interopRequireDefault(require("fela-plugin-fallback-value"));

var _felaPluginPlaceholderPrefixer = _interopRequireDefault(require("fela-plugin-placeholder-prefixer"));

var _felaPluginRtl = _interopRequireDefault(require("fela-plugin-rtl"));

var _felaDisableAnimationsPlugin = _interopRequireDefault(require("./felaDisableAnimationsPlugin"));

var _felaExpandCssShorthandsPlugin = _interopRequireDefault(require("./felaExpandCssShorthandsPlugin"));

var _felaFocusVisibleEnhancer = _interopRequireDefault(require("./felaFocusVisibleEnhancer"));

var _felaInvokeKeyframesPlugin = _interopRequireDefault(require("./felaInvokeKeyframesPlugin"));

var _felaSanitizeCssPlugin = _interopRequireDefault(require("./felaSanitizeCssPlugin"));

var _felaStylisEnhancer = _interopRequireDefault(require("./felaStylisEnhancer"));

var felaDevMode = false;

try {
  // eslint-disable-next-line no-undef
  felaDevMode = !!window.localStorage.felaDevMode;
} catch (_unused) {}

if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
  if (felaDevMode) {
    /* eslint-disable-next-line no-console */
    console.warn(['@fluentui/react-northstar:', 'You are running Fela in development mode and this can cause performance degrades.', 'To disable it please paste `delete window.localStorage.felaDevMode` to your browsers console and reload current page.'].join(' '));
  } else {
    /* eslint-disable-next-line no-console */
    console.warn(['@fluentui/react-northstar:', 'You are running Fela in production mode.', 'This limits your ability to edit styles in browsers development tools.', 'To enable development mode please paste `window.localStorage.felaDevMode = true` to your browsers console and reload the page.'].join(' '));
  }
} // Blacklist contains a list of classNames that are used by FontAwesome
// https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use


var blacklistedClassNames = ['fa', 'fas', 'far', 'fal', 'fab'];

var filterClassName = function filterClassName(className) {
  return className.indexOf('ad') === -1 && blacklistedClassNames.indexOf(className) === -1;
};

var rendererConfig = {
  devMode: felaDevMode,
  filterClassName: filterClassName,
  enhancers: [_felaFocusVisibleEnhancer.default, _felaStylisEnhancer.default],
  plugins: [(0, _felaDisableAnimationsPlugin.default)(), // is necessary to prevent accidental style typos
  // from breaking ALL the styles on the page
  (0, _felaSanitizeCssPlugin.default)({
    skip: ['content', 'keyframe']
  }), (0, _felaPluginPlaceholderPrefixer.default)(), (0, _felaInvokeKeyframesPlugin.default)(), (0, _felaPluginEmbedded.default)(), (0, _felaExpandCssShorthandsPlugin.default)(), // Heads up!
  // This is required after fela-plugin-prefixer to resolve the array of fallback values prefixer produces.
  (0, _felaPluginFallbackValue.default)(), (0, _felaPluginRtl.default)()]
};

var createRenderer = function createRenderer() {
  return (0, _fela.createRenderer)(rendererConfig);
};

exports.createRenderer = createRenderer;
var felaRenderer = createRenderer();
exports.felaRenderer = felaRenderer;
//# sourceMappingURL=felaRenderer.js.map
