{"version":3,"sources":["components/Slider/Slider.tsx"],"names":["processInputValues","p","min","max","value","isNaN","Number","Slider","defaultProps","Math","valueAsPercentage","sliderClassName","sliderSlotClassNames","input","inputWrapper","rail","thumb","track","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","getA11yValueMessageOnChange","defaultValue","userInputRef","inputRef","step","className","styles","variables","design","fluid","vertical","disabled","createRef","createSliderManager","mapPropsToInitialState","mapPropsToState","state","actions","numericMin","numericMax","numericValue","getA11Props","debugName","rtl","mapPropsToBehavior","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleInputOverrides","onChange","e","change","onMouseDown","target","ElementType","unhandledProps","handledProps","htmlInputProps","restProps","type","inputElement","Box","create","as","overrideProps","element","root","width","sliderBehavior","String","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","string","number","bool","func","customPropTypes","itemShorthand","ref","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, sliderBehavior, SliderBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createSliderManager } from '@fluentui/state';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  ChildrenComponentProps,\n  commonPropTypes,\n  partitionHTMLProps,\n  UIComponentProps,\n  setWhatInputSource,\n  createShorthandFactory,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  withSafeTypeForAs,\n  Omit,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport Box, { BoxProps } from '../Box/Box';\n\nconst processInputValues = (\n  p: Pick<SliderProps, 'min' | 'max'> & { value: string },\n): { min: number; max: number; value: number; valueAsPercentage: string } => {\n  let min = _.toNumber(p.min);\n  let max = _.toNumber(p.max);\n  let value = _.toNumber(p.value);\n\n  if (isNaN(min)) min = Number(Slider.defaultProps.min);\n  if (isNaN(max)) max = Number(Slider.defaultProps.max);\n  value = isNaN(value) ? min + (max - min) / 2 : Math.min(max, Math.max(min, value));\n  const valueAsPercentage = `${(100 * (value - min)) / (max - min)}%`;\n\n  return { min, max, value, valueAsPercentage };\n};\n\nexport interface SliderSlotClassNames {\n  input: string;\n  inputWrapper: string;\n  rail: string;\n  thumb: string;\n  track: string;\n}\n\nexport interface SliderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    Omit<SupportedIntrinsicInputProps, 'defaultValue'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<SliderBehaviorProps>;\n\n  /** The default value of the slider. */\n  defaultValue?: string | number;\n\n  /** A slider can be read-only and unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A slider can take the width of its container. */\n  fluid?: boolean;\n\n  /**\n   * Callback that creates custom accessibility message a screen reader narrates when the value changes.\n   * @param props - Slider props.\n   */\n  getA11yValueMessageOnChange?: (props: SliderProps) => string;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The maximum value of the slider. */\n  max?: SupportedIntrinsicInputProps['max'];\n\n  /** The minimum value of the slider. */\n  min?: SupportedIntrinsicInputProps['min'];\n\n  /**\n   * Called after item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<SliderProps & { value: string }>;\n\n  /**\n   * A number that specifies the granularity that the value must adhere to, or the special value 'any'.\n   * A string value of any means that no stepping is implied, and any value is allowed\n   * (barring other constraints, such as min and max).\n   */\n  step?: SupportedIntrinsicInputProps['step'];\n\n  /** The value of the slider. */\n  value?: string | number;\n\n  /** A slider can be displayed vertically. */\n  vertical?: boolean;\n}\n\nexport type SliderStylesProps = Pick<SliderProps, 'fluid' | 'disabled' | 'vertical'>;\nexport const sliderClassName = 'ui-slider';\nexport const sliderSlotClassNames: SliderSlotClassNames = {\n  input: `${sliderClassName}__input`,\n  inputWrapper: `${sliderClassName}__input-wrapper`,\n  rail: `${sliderClassName}__rail`,\n  thumb: `${sliderClassName}__thumb`,\n  track: `${sliderClassName}__track`,\n};\n\nconst Slider: React.FC<WithAsProp<SliderProps>> & FluentComponentStaticProps = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Slider.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    min,\n    max,\n    value,\n    getA11yValueMessageOnChange,\n    defaultValue,\n    input,\n    inputRef: userInputRef,\n    step,\n    className,\n    styles,\n    variables,\n    design,\n    fluid,\n    vertical,\n    disabled,\n  } = props;\n  const inputRef = React.createRef<HTMLElement>();\n\n  const { state, actions } = useStateManager(createSliderManager, {\n    mapPropsToInitialState: () => ({\n      value: defaultValue as string,\n    }),\n    mapPropsToState: () => ({\n      value: value as string,\n    }),\n  });\n  const { min: numericMin, max: numericMax, value: numericValue, valueAsPercentage } = processInputValues({\n    min,\n    max,\n    value: state.value || '',\n  });\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Slider.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      disabled,\n      getA11yValueMessageOnChange,\n      max: numericMax,\n      min: numericMax,\n      value: numericValue,\n      vertical,\n    }),\n  });\n  const { classes, styles: resolvedStyles } = useStyles<SliderStylesProps>(Slider.displayName, {\n    className: sliderClassName,\n    mapPropsToStyles: () => ({\n      fluid,\n      vertical,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleInputOverrides = () => ({\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = _.get(e, 'target.value');\n      _.invoke(props, 'onChange', e, { ...props, value });\n      actions.change(value);\n    },\n    onMouseDown: (e: React.MouseEvent<HTMLInputElement>) => {\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(props, 'onMouseDown', e, props);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Slider.handledProps, props);\n  const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n  const type = 'range';\n\n  // we need 2 wrappers around the slider rail, track, input and thumb slots to achieve correct component sizes\n\n  const inputElement = Box.create(input || type, {\n    defaultProps: () =>\n      getA11Props('input', {\n        ...htmlInputProps,\n        as: 'input',\n        className: sliderSlotClassNames.input,\n        fluid,\n        min: numericMin,\n        max: numericMax,\n        step,\n        styles: resolvedStyles.input,\n        type,\n        value: numericValue,\n        vertical,\n      }),\n    overrideProps: handleInputOverrides,\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...restProps })}>\n      <div\n        {...getA11Props('inputWrapper', {\n          className: cx(sliderSlotClassNames.inputWrapper, classes.inputWrapper),\n        })}\n      >\n        <span {...getA11Props('rail', { className: cx(sliderSlotClassNames.rail, classes.rail) })} />\n        <span\n          {...getA11Props('track', { className: cx(sliderSlotClassNames.track, classes.track) })}\n          style={{ width: valueAsPercentage }}\n        />\n        <Ref\n          innerRef={(inputElement: HTMLElement) => {\n            handleRef(inputRef, inputElement);\n            handleRef(userInputRef, inputElement);\n          }}\n        >\n          {inputElement}\n        </Ref>\n        {/* the thumb slot needs to appear after the input slot */}\n        <span\n          {...getA11Props('thumb', { className: cx(sliderSlotClassNames.thumb, classes.thumb) })}\n          style={{ [context.rtl ? 'right' : 'left']: valueAsPercentage }}\n        />\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nSlider.displayName = 'Slider';\n\nSlider.defaultProps = {\n  accessibility: sliderBehavior,\n  getA11yValueMessageOnChange: ({ value }) => String(value),\n  max: 100,\n  min: 0,\n  step: 1,\n};\nSlider.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fluid: PropTypes.bool,\n  getA11yValueMessageOnChange: PropTypes.func,\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\nSlider.handledProps = Object.keys(Slider.propTypes) as any;\n\nSlider.create = createShorthandFactory({ Component: Slider, mappedProp: 'value' });\n\n/**\n * A Slider represents an input that allows user to choose a value from within a specific range.\n *\n * @accessibility\n * Implements [ARIA Slider](https://www.w3.org/TR/wai-aria-practices-1.1/#slider) design pattern.\n * @accessibilityIssues\n * [Slider - JAWS narrates slider value twice when using PageUp / PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/220)\n * [Slider - JAWS narrates current and new value in vertical slider](https://github.com/FreedomScientific/VFO-standards-support/issues/219)\n */\nexport default withSafeTypeForAs<typeof Slider, SliderProps, 'input'>(Slider);\n"],"file":"Slider.js"}