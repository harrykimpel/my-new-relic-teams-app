{"version":3,"sources":["components/Attachment/Attachment.tsx"],"names":["attachmentClassName","mergeShorthandVariables","variables","shorthandVariables","Attachment","props","ref","composeOptions","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","action","actionable","body","className","description","design","disabled","header","icon","onClick","progress","styles","getA11Props","debugName","actionHandlers","performClick","e","currentTarget","target","stopPropagation","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","slotProps","resolveSlotProps","ElementType","unhandledProps","handledProps","preventDefault","element","root","slots","defaultProps","overrideProps","predefinedProps","content","width","AttachmentAction","AttachmentBody","AttachmentDescription","AttachmentHeader","AttachmentIcon","create","Component","mappedProp","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","PropTypes","bool","shorthandAllowingChildren","func","oneOfType","string","number","attachmentBehavior","Action","Body","Description","Header","Icon"],"mappings":"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","sourcesContent":["import { Accessibility, attachmentBehavior, AttachmentBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  compose,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { ComponentEventHandler, ProviderContextPrepared, ShorthandValue } from '../../types';\nimport {\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  createShorthand,\n  ShorthandFactory,\n} from '../../utils';\nimport AttachmentAction, { AttachmentActionProps } from './AttachmentAction';\nimport AttachmentBody, { AttachmentBodyProps } from './AttachmentBody';\nimport AttachmentDescription, { AttachmentDescriptionProps } from './AttachmentDescription';\nimport AttachmentHeader, { AttachmentHeaderProps } from './AttachmentHeader';\nimport AttachmentIcon, { AttachmentIconProps } from './AttachmentIcon';\n\nexport interface AttachmentProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<AttachmentBehaviorProps>;\n\n  /** Button shorthand for the action slot. */\n  action?: ShorthandValue<AttachmentActionProps>;\n\n  /** An Attachment can be styled to indicate possible user interaction. */\n  actionable?: boolean;\n\n  /** Contains a header and a description for an Attachment. */\n  body?: ShorthandValue<AttachmentBodyProps>;\n\n  /** A string describing the attachment. */\n  description?: ShorthandValue<AttachmentDescriptionProps>;\n\n  /** An attachment can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** The name of the attachment. */\n  header?: ShorthandValue<AttachmentHeaderProps>;\n\n  /** Shorthand for the icon. */\n  icon?: ShorthandValue<AttachmentIconProps>;\n\n  /** Value indicating percent complete. */\n  progress?: string | number;\n\n  /**\n   * Called after user's click.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AttachmentProps>;\n}\n\nexport type AttachmentStylesProps = Required<Pick<AttachmentProps, 'actionable' | 'disabled'>>;\nexport const attachmentClassName = 'ui-attachment';\n\n// mergeComponentVariables is always creating a function even if the arguments are undefined\n// we have this temporary fix in place to avoid creating empty function because it is breaking caching\n// we should either fix mergeComponentVariables, or handle this in a more generic way\nconst mergeShorthandVariables = (variables, shorthandVariables) => {\n  return (variables || shorthandVariables) && mergeComponentVariables(variables, shorthandVariables);\n};\n\n/**\n * An Attachment represents a file or media attachment, which may contain some metadata or actions.\n */\nconst Attachment = compose<'div', AttachmentProps, AttachmentStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context: ProviderContextPrepared = React.useContext(ThemeContext);\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      action,\n      actionable,\n      body,\n      className,\n      description,\n      design,\n      disabled,\n      header,\n      icon,\n      onClick,\n      progress,\n      styles,\n      variables,\n    } = props;\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: e => {\n          if (e.currentTarget === e.target) {\n            e.stopPropagation();\n            handleClick(e);\n          }\n        },\n      },\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<AttachmentStylesProps>(composeOptions.displayName, {\n      className: attachmentClassName,\n      mapPropsToStyles: () => ({\n        actionable: actionable || !!onClick,\n        disabled,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const slotProps = composeOptions.resolveSlotProps<AttachmentProps>(props);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const handleClick = (e: React.KeyboardEvent | React.MouseEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = (\n      <ElementType {...getA11Props('root', { className: classes.root, onClick: handleClick, ref, ...unhandledProps })}>\n        {createShorthand(composeOptions.slots.icon, icon, {\n          defaultProps: () => slotProps.icon,\n          overrideProps: predefinedProps => ({\n            variables: mergeShorthandVariables(variables, predefinedProps.variables),\n          }),\n        })}\n\n        {(header || description) &&\n          createShorthand(composeOptions.slots.body, body, {\n            defaultProps: () => slotProps.body,\n            overrideProps: predefinedProps => ({\n              content: (\n                <>\n                  {createShorthand(composeOptions.slots.header, header, {\n                    defaultProps: () => slotProps.header,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeShorthandVariables(variables, predefinedProps.variables),\n                    }),\n                  })}\n                  {createShorthand(composeOptions.slots.description, description, {\n                    defaultProps: () => slotProps.description,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeShorthandVariables(variables, predefinedProps.variables),\n                    }),\n                  })}\n                </>\n              ),\n              variables: mergeShorthandVariables(variables, predefinedProps.variables),\n            }),\n          })}\n\n        {createShorthand(composeOptions.slots.action, action, {\n          defaultProps: () => slotProps.action,\n          overrideProps: predefinedProps => ({\n            variables: mergeShorthandVariables(variables, predefinedProps.variables),\n          }),\n        })}\n        {!_.isNil(progress) && <div className=\"ui-attachment__progress\" style={{ width: `${progress}%` }} />}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: attachmentClassName,\n    displayName: 'Attachment',\n    slots: {\n      action: AttachmentAction,\n      body: AttachmentBody,\n      description: AttachmentDescription,\n      header: AttachmentHeader,\n      icon: AttachmentIcon,\n    },\n    handledProps: [\n      'accessibility',\n      'action',\n      'actionable',\n      'as',\n      'body',\n      'children',\n      'className',\n      'description',\n      'design',\n      'header',\n      'icon',\n      'onClick',\n      'progress',\n      'styles',\n      'variables',\n    ],\n  },\n) as ComponentWithAs<'div', AttachmentProps> & {\n  create: ShorthandFactory<AttachmentProps>;\n  Action: typeof AttachmentAction;\n  Body: typeof AttachmentBody;\n  Description: typeof AttachmentDescription;\n  Header: typeof AttachmentHeader;\n  Icon: typeof AttachmentIcon;\n};\n\nAttachment.create = createShorthandFactory({ Component: Attachment, mappedProp: 'header' });\n\nAttachment.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  action: customPropTypes.itemShorthand,\n  actionable: PropTypes.bool,\n  body: customPropTypes.itemShorthand,\n  description: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  onClick: PropTypes.func,\n  progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nAttachment.defaultProps = {\n  accessibility: attachmentBehavior,\n  body: {},\n};\n\nAttachment.Action = AttachmentAction;\nAttachment.Body = AttachmentBody;\nAttachment.Description = AttachmentDescription;\nAttachment.Header = AttachmentHeader;\nAttachment.Icon = AttachmentIcon;\n\n/**\n * An Attachment represents a file or media attachment, which may contain some metadata or actions.\n */\nexport default Attachment;\n"],"file":"Attachment.js"}