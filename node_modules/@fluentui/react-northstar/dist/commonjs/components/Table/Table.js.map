{"version":3,"sources":["components/Table/Table.tsx"],"names":["handleVariablesOverrides","variables","predefinedProps","tableClassName","tableSlotClassNames","header","Table","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","children","rows","compact","accessibility","className","design","styles","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","renderRows","row","index","onClick","e","overrideProps","TableRow","create","defaultProps","renderHeader","headerRowProps","element","unstable_wrapWithFocusZone","root","Cell","TableCell","Row","Component","propTypes","commonPropTypes","createCommon","content","customPropTypes","itemShorthand","collectionShorthand","PropTypes","bool","Object","keys","as","tableBehavior"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAOA;;AACA;;AACA;;AAEA;;AACA;;AAFA;AAmCA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,SAAS;AAAA,SAAI,UAAAC,eAAe;AAAA,WAAK;AAChED,MAAAA,SAAS,EAAE,qCAAwBA,SAAxB,EAAmCC,eAAe,CAACD,SAAnD;AADqD,KAAL;AAAA,GAAnB;AAAA,CAA1C;;AAIO,IAAME,cAAc,GAAG,UAAvB;;AACA,IAAMC,mBAAwC,GAAG;AACtDC,EAAAA,MAAM,YAAKF,cAAL;AADgD,CAAjD;;;AAMA,IAAMG,KAIV,GAAG,SAJOA,KAIP,CAAAC,KAAK,EAAI;AACb,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AADa,sBAEgB,iCAAaL,KAAK,CAACM,WAAnB,EAAgCJ,OAAO,CAACK,SAAxC,CAFhB;AAAA,MAELC,QAFK,iBAELA,QAFK;AAAA,MAEKC,MAFL,iBAEKA,MAFL;;AAGbD,EAAAA,QAAQ;AAHK,MAILE,QAJK,GAIoFT,KAJpF,CAILS,QAJK;AAAA,MAIKC,IAJL,GAIoFV,KAJpF,CAIKU,IAJL;AAAA,MAIWZ,MAJX,GAIoFE,KAJpF,CAIWF,MAJX;AAAA,MAImBa,OAJnB,GAIoFX,KAJpF,CAImBW,OAJnB;AAAA,MAI4BC,aAJ5B,GAIoFZ,KAJpF,CAI4BY,aAJ5B;AAAA,MAI2CC,SAJ3C,GAIoFb,KAJpF,CAI2Ca,SAJ3C;AAAA,MAIsDC,MAJtD,GAIoFd,KAJpF,CAIsDc,MAJtD;AAAA,MAI8DC,MAJ9D,GAIoFf,KAJpF,CAI8De,MAJ9D;AAAA,MAIsErB,SAJtE,GAIoFM,KAJpF,CAIsEN,SAJtE;AAKb,MAAMsB,WAAW,GAAG,0BAAcP,QAAd,CAApB;AACA,MAAMQ,WAAW,GAAG,mCAAejB,KAAf,CAApB;AACA,MAAMkB,cAAc,GAAG,sCAAkBnB,KAAK,CAACoB,YAAxB,EAAsCnB,KAAtC,CAAvB;AAEA,MAAMoB,YAAY,GAAG,qCAAqCR,aAArC,EAAoD;AACvES,IAAAA,SAAS,EAAEtB,KAAK,CAACM,WADsD;AAEvEiB,IAAAA,GAAG,EAAErB,OAAO,CAACqB;AAF0D,GAApD,CAArB;;AATa,mBAcO,8BAA4BvB,KAAK,CAACM,WAAlC,EAA+C;AACjEQ,IAAAA,SAAS,EAAEjB,cADsD;AAEjE2B,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BV,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BrB,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFyC;AAQjE4B,IAAAA,GAAG,EAAErB,OAAO,CAACqB;AARoD,GAA/C,CAdP;AAAA,MAcLE,OAdK,cAcLA,OAdK;;AAyBb,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAO,mBAAMf,IAAN,EAAY,UAACgB,GAAD,EAAqBC,KAArB,EAAuC;AACxD,UAAM3B,KAAK,GAAG;AACZW,QAAAA,OAAO,EAAPA,OADY;AAEZiB,QAAAA,OAAO,EAAE,iBAACC,CAAD,EAAI7B,KAAJ,EAAc;AACrB,gCAAS0B,GAAT,EAAc,SAAd,EAAyBG,CAAzB,EAA4B7B,KAA5B;AACD;AAJW,OAAd;AAMA,UAAM8B,aAAa,GAAGrC,wBAAwB,CAACC,SAAD,CAA9C;AACA,aAAOqC,kBAASC,MAAT,CAAgBN,GAAhB,EAAqB;AAC1BO,QAAAA,YAAY,EAAE;AAAA,iBACZb,YAAY,CAAC,KAAD,oBACPpB,KADO,EADA;AAAA,SADY;AAK1B8B,QAAAA,aAAa,EAAbA;AAL0B,OAArB,CAAP;AAOD,KAfM,CAAP;AAgBD,GAjBD;;AAmBA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAI,CAACpC,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAMqC,cAAc,GAAG;AACrBrC,MAAAA,MAAM,EAAE,IADa;AAErBa,MAAAA,OAAO,EAAPA,OAFqB;AAGrBE,MAAAA,SAAS,EAAEhB,mBAAmB,CAACC;AAHV,KAAvB;AAMA,QAAMgC,aAAa,GAAGrC,wBAAwB,CAACC,SAAD,CAA9C;AAEA,WAAOqC,kBAASC,MAAT,CAAgBlC,MAAhB,EAAwB;AAC7BmC,MAAAA,YAAY,EAAE;AAAA,eACZb,YAAY,CAAC,KAAD,oBACPe,cADO,EADA;AAAA,OADe;AAK7BL,MAAAA,aAAa,EAAbA;AAL6B,KAAxB,CAAP;AAOD,GApBD;;AAsBA,MAAMM,OAAO,GAAGhB,YAAY,CAACiB,0BAAb,CACd,oBAAC,WAAD,EACMjB,YAAY,CAAC,MAAD;AACdP,IAAAA,SAAS,EAAEW,OAAO,CAACc;AADL,KAEXpB,cAFW,EADlB,EAMGF,WAAW,IAAIP,QANlB,EAQG,CAACO,WAAD,IAAgBkB,YAAY,EAR/B,EAWG,CAAClB,WAAD,IAAgBS,UAAU,EAX7B,CADc,CAAhB;AAgBAjB,EAAAA,MAAM;AACN,SAAO4B,OAAP;AACD,CAxFM;;;AA0FPrC,KAAK,CAACM,WAAN,GAAoB,OAApB;AAEAN,KAAK,CAACwC,IAAN,GAAaC,kBAAb;AAEAzC,KAAK,CAAC0C,GAAN,GAAYV,iBAAZ;AAEAhC,KAAK,CAACiC,MAAN,GAAe,mCAAuB;AACpCU,EAAAA,SAAS,EAAE3C;AADyB,CAAvB,CAAf;AAIAA,KAAK,CAAC4C,SAAN,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADL;AAIEhD,EAAAA,MAAM,EAAEiD,eAAe,CAACC,aAJ1B;AAKEtC,EAAAA,IAAI,EAAEqC,eAAe,CAACE,mBALxB;AAMEtC,EAAAA,OAAO,EAAEuC,SAAS,CAACC;AANrB;AASApD,KAAK,CAACoB,YAAN,GAAqBiC,MAAM,CAACC,IAAP,CAAYtD,KAAK,CAAC4C,SAAlB,CAArB;AAEA5C,KAAK,CAACkC,YAAN,GAAqB;AACnBqB,EAAAA,EAAE,EAAE,KADe;AAEnB1C,EAAAA,aAAa,EAAE2C;AAFI,CAArB;AAKA;;;;;;;;;;;;;;;;;;;;eAmBe,8BAAmDxD,KAAnD,C","sourcesContent":["import { Accessibility, tableBehavior, TableBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useTelemetry, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport TableRow, { TableRowProps } from './TableRow';\nimport TableCell from './TableCell';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  WithAsProp,\n  ShorthandCollection,\n  ShorthandValue,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\n\nexport interface TableSlotClassNames {\n  header: string;\n}\n\nexport interface TableProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility<TableBehaviorProps>;\n\n  /** The columns of the Table with a space-separated list of values.\n   */\n  header?: ShorthandValue<TableRowProps>;\n\n  /** The rows of the Table with a space-separated list of values.\n   */\n  rows?: ShorthandCollection<TableRowProps>;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n}\n\nconst handleVariablesOverrides = variables => predefinedProps => ({\n  variables: mergeComponentVariables(variables, predefinedProps.variables),\n});\n\nexport const tableClassName = 'ui-table';\nexport const tableSlotClassNames: TableSlotClassNames = {\n  header: `${tableClassName}__header`,\n};\n\nexport type TableStylesProps = never;\n\nexport const Table: React.FC<WithAsProp<TableProps>> &\n  FluentComponentStaticProps<TableProps> & {\n    Cell: typeof TableCell;\n    Row: typeof TableRow;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Table.displayName, context.telemetry);\n  setStart();\n  const { children, rows, header, compact, accessibility, className, design, styles, variables } = props;\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Table.handledProps, props);\n\n  const getA11yProps = useAccessibility<TableBehaviorProps>(accessibility, {\n    debugName: Table.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TableStylesProps>(Table.displayName, {\n    className: tableClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderRows = () => {\n    return _.map(rows, (row: TableRowProps, index: number) => {\n      const props = {\n        compact,\n        onClick: (e, props) => {\n          _.invoke(row, 'onClick', e, props);\n        },\n      } as TableRowProps;\n      const overrideProps = handleVariablesOverrides(variables);\n      return TableRow.create(row, {\n        defaultProps: () =>\n          getA11yProps('row', {\n            ...props,\n          }),\n        overrideProps,\n      });\n    });\n  };\n\n  const renderHeader = () => {\n    if (!header) {\n      return null;\n    }\n\n    const headerRowProps = {\n      header: true,\n      compact,\n      className: tableSlotClassNames.header,\n    } as TableRowProps;\n\n    const overrideProps = handleVariablesOverrides(variables);\n\n    return TableRow.create(header, {\n      defaultProps: () =>\n        getA11yProps('row', {\n          ...headerRowProps,\n        }),\n      overrideProps,\n    });\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren && children}\n      {/* <thead> */}\n      {!hasChildren && renderHeader()}\n      {/* </thead> */}\n      {/* <tbody> */}\n      {!hasChildren && renderRows()}\n      {/* </tbody> */}\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n};\n\nTable.displayName = 'Table';\n\nTable.Cell = TableCell;\n\nTable.Row = TableRow;\n\nTable.create = createShorthandFactory({\n  Component: Table,\n});\n\nTable.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  header: customPropTypes.itemShorthand,\n  rows: customPropTypes.collectionShorthand,\n  compact: PropTypes.bool,\n};\n\nTable.handledProps = Object.keys(Table.propTypes) as any;\n\nTable.defaultProps = {\n  as: 'div',\n  accessibility: tableBehavior as Accessibility,\n};\n\n/**\n * A Table is used to display data in tabular layout\n * * @accessibility\n * Implements ARIA [Data Grid](https://www.w3.org/TR/wai-aria-practices/#dataGrid) design pattern for presenting tabular information.\n * When gridcell contains actionable element, use [gridCellWithFocusableElementBehavior](/components/table/accessibility#grid-cell-with-focusable-element-behavior-ts). [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_focus)\n * Use [gridCellMultipleFocusableBehavior](/components/table/accessibility#gridCellMultipleFocusableBehavior), when gridcell contains:\n * \\- editable content\n * \\- multiple actionable elements\n * \\- component that utilizes arrow keys in its navigation, like menu button, dropdown, radio group, slider, etc.\n * [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_inside)\n * @accessibilityIssues\n * [NVDA narrate table title(aria-label) twice](https://github.com/nvaccess/nvda/issues/10548)\n * [Accessibility DOM > Table > gridcell > when gridcell is focused, then selected state is send to reader](https://bugs.chromium.org/p/chromium/issues/detail?id=1030378)\n * [JAWS narrate grid name twice, once as table and second time as grid](https://github.com/FreedomScientific/VFO-standards-support/issues/346)\n * [JAWS doesn't narrate grid column name, when focus is on actionable element in the cell] (https://github.com/FreedomScientific/VFO-standards-support/issues/348)\n * [aria-sort is not output at child elements](https://github.com/FreedomScientific/VFO-standards-support/issues/319)\n * [VoiceOver not announcing rows correctly for a grid with presentation elements inside](https://bugs.chromium.org/p/chromium/issues/detail?id=1054424)\n * VoiceOver doesn't narrate aria-rowcount value in table or grid\n */\nexport default withSafeTypeForAs<typeof Table, TableProps, 'div'>(Table);\n"],"file":"Table.js"}