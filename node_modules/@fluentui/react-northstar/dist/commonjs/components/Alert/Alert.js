"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Alert = exports.alertSlotClassNames = exports.alertClassName = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _accessibility = require("@fluentui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _reactFela = require("react-fela");

var _utils = require("../../utils");

var _types = require("../../types");

var _Box = _interopRequireDefault(require("../Box/Box"));

var _Text = _interopRequireDefault(require("../Text/Text"));

var _ButtonGroup = _interopRequireDefault(require("../Button/ButtonGroup"));

var _AlertDismissAction = _interopRequireDefault(require("./AlertDismissAction"));

var _reactBindings = require("@fluentui/react-bindings");

// @ts-ignore
var alertClassName = 'ui-alert';
exports.alertClassName = alertClassName;
var alertSlotClassNames = {
  content: "".concat(alertClassName, "__content"),
  actions: "".concat(alertClassName, "__actions"),
  icon: "".concat(alertClassName, "__icon"),
  header: "".concat(alertClassName, "__header"),
  body: "".concat(alertClassName, "__body")
};
exports.alertSlotClassNames = alertSlotClassNames;

var Alert = function Alert(props) {
  var context = React.useContext(_reactFela.ThemeContext);

  var _useTelemetry = (0, _reactBindings.useTelemetry)(Alert.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var warning = props.warning,
      danger = props.danger,
      info = props.info,
      success = props.success,
      attached = props.attached,
      fitted = props.fitted,
      dismissible = props.dismissible,
      variables = props.variables,
      className = props.className,
      design = props.design,
      styles = props.styles,
      children = props.children,
      actions = props.actions,
      dismissAction = props.dismissAction,
      content = props.content,
      icon = props.icon,
      header = props.header,
      body = props.body;

  var _useAutoControlled = (0, _reactBindings.useAutoControlled)({
    defaultValue: props.defaultVisible,
    value: props.visible,
    initialValue: true
  }),
      _useAutoControlled2 = (0, _slicedToArray2.default)(_useAutoControlled, 2),
      visible = _useAutoControlled2[0],
      setVisible = _useAutoControlled2[1];

  var _React$useState = React.useState((0, _uniqueId2.default)('alert-body-')),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),
      bodyId = _React$useState2[0];

  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(Alert.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: Alert.displayName,
    mapPropsToBehavior: function mapPropsToBehavior() {
      return {
        warning: warning,
        danger: danger,
        bodyId: bodyId,
        visible: visible
      };
    },
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(Alert.displayName, {
    className: alertClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        warning: warning,
        danger: danger,
        info: info,
        success: success,
        attached: attached,
        fitted: fitted,
        dismissible: dismissible,
        visible: visible
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes,
      resolvedStyles = _useStyles.styles;

  var handleDismissOverrides = function handleDismissOverrides(predefinedProps) {
    return {
      onClick: function onClick(e, buttonProps) {
        (0, _invoke2.default)(predefinedProps, 'onClick', e, buttonProps);
        (0, _invoke2.default)(props, 'onVisibleChange', e, Object.assign({}, props, {
          visible: false
        }));
        setVisible(false);
      }
    };
  };

  var handleFocus = function handleFocus(e) {
    (0, _invoke2.default)(props, 'onFocus', e, props);
  };

  var renderContent = function renderContent() {
    var bodyContent = React.createElement(React.Fragment, null, _Text.default.create(header, {
      defaultProps: function defaultProps() {
        return getA11yProps('header', {
          className: alertSlotClassNames.header,
          styles: resolvedStyles.header
        });
      }
    }), _Box.default.create(content, {
      defaultProps: function defaultProps() {
        return getA11yProps('content', {
          className: alertSlotClassNames.content,
          styles: resolvedStyles.content
        });
      }
    }));
    return React.createElement(React.Fragment, null, _Box.default.create(icon, {
      defaultProps: function defaultProps() {
        return getA11yProps('icon', {
          className: alertSlotClassNames.icon,
          styles: resolvedStyles.icon
        });
      }
    }), _Box.default.create(body, {
      defaultProps: function defaultProps() {
        return getA11yProps('body', {
          className: alertSlotClassNames.body,
          styles: resolvedStyles.body,
          id: bodyId
        });
      },
      overrideProps: {
        children: bodyContent
      }
    }), _ButtonGroup.default.create(actions, {
      defaultProps: function defaultProps() {
        return getA11yProps('actions', {
          className: alertSlotClassNames.actions,
          styles: resolvedStyles.actions
        });
      }
    }), dismissible && _AlertDismissAction.default.create(dismissAction, {
      defaultProps: function defaultProps() {
        return getA11yProps('dismissAction', {
          danger: danger,
          warning: warning,
          info: info,
          success: success,
          variables: variables
        });
      },
      overrideProps: handleDismissOverrides
    }));
  };

  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root,
    onFocus: handleFocus
  }, unhandledProps)), (0, _utils.childrenExist)(children) ? children : renderContent());
  setEnd();
  return element;
};

exports.Alert = Alert;
Alert.defaultProps = {
  accessibility: _accessibility.alertBehavior,
  dismissAction: {},
  body: {}
};
Alert.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon({
  content: 'shorthand'
}), {
  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),
  icon: customPropTypes.shorthandAllowingChildren,
  header: customPropTypes.itemShorthand,
  attached: PropTypes.oneOf([true, false, 'top', 'bottom']),
  fitted: PropTypes.bool,
  danger: PropTypes.bool,
  defaultVisible: PropTypes.bool,
  dismissible: PropTypes.bool,
  dismissAction: customPropTypes.shorthandAllowingChildren,
  info: PropTypes.bool,
  onVisibleChange: PropTypes.func,
  onFocus: PropTypes.func,
  success: PropTypes.bool,
  visible: PropTypes.bool,
  warning: PropTypes.bool,
  body: customPropTypes.shorthandAllowingChildren
});
Alert.displayName = 'Alert';
Alert.handledProps = Object.keys(Alert.propTypes);
Alert.create = (0, _utils.createShorthandFactory)({
  Component: Alert
});
Alert.DismissAction = _AlertDismissAction.default;
/**
 * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.
 *
 * @accessibility
 * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.
 */

var _default = (0, _types.withSafeTypeForAs)(Alert);

exports.default = _default;
//# sourceMappingURL=Alert.js.map
