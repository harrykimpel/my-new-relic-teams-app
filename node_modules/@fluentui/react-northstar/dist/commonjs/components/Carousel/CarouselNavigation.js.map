{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["carouselNavigationClassName","CarouselNavigation","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","variables","children","className","design","activeIndex","iconOnly","items","primary","secondary","vertical","thumbnails","styles","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","renderItems","item","index","CarouselNavigationItem","create","defaultProps","active","overrideProps","element","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","number","string","bool","customPropTypes","collectionShorthand","onItemClick","func","every","disallow","tabListBehavior","as","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { tabListBehavior, Accessibility } from '@fluentui/accessibility';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  withSafeTypeForAs,\n  WithAsProp,\n  ShorthandCollection,\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport CarouselNavigationItem, { CarouselNavigationItemProps } from './CarouselNavigationItem';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** A navigation may have thumbnails. */\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport type CarouselNavigationStylesProps = Required<\n  Pick<CarouselNavigationProps, 'activeIndex' | 'iconOnly' | 'primary' | 'vertical' | 'thumbnails'>\n>;\n\nexport const carouselNavigationClassName = 'ui-carousel__navigation';\n\nexport const CarouselNavigation: React.FC<WithAsProp<CarouselNavigationProps>> &\n  FluentComponentStaticProps<CarouselNavigationProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CarouselNavigation.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    variables,\n    children,\n    className,\n    design,\n    activeIndex,\n    iconOnly,\n    items,\n    primary,\n    secondary,\n    vertical,\n    thumbnails,\n    styles,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CarouselNavigationStylesProps>(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: () => ({\n      activeIndex,\n      iconOnly,\n      primary,\n      vertical,\n      thumbnails,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  const renderItems = () => {\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly,\n            index,\n            primary,\n            secondary,\n            vertical,\n            thumbnails,\n          }),\n        overrideProps: handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderItems()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nCarouselNavigation.displayName = 'CarouselNavigation';\n\nCarouselNavigation.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n};\n\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul',\n};\n\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes) as any;\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport default withSafeTypeForAs<typeof CarouselNavigation, CarouselNavigationProps, 'ul'>(CarouselNavigation);\n"],"file":"CarouselNavigation.js"}