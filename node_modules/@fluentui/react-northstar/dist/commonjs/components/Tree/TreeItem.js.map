{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemClassName","TreeItem","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectableParent","selected","selectable","indeterminate","id","hasSubtreeItem","TreeContext","onFocusParent","onSiblingsExpand","onFocusFirstChild","onTitleClick","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","handleTitleClick","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","expandSiblings","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","hasSubtree","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","parent","handleTitleOverrides","predefinedProps","onClick","titleProps","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","TreeTitle","create","defaultProps","as","render","overrideProps","elementWithRef","propTypes","commonPropTypes","createCommon","content","customPropTypes","ref","PropTypes","string","isRequired","number","items","collectionShorthand","func","bool","itemShorthand","shorthandAllowingChildren","treeItemBehavior","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { Ref } from '@fluentui/react-component-ref';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport TreeTitle, { TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { hasSubtree, TreeContext } from './utils';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** Whether or not tree item is part of the selectable parent. */\n  selectableParent?: boolean;\n\n  indeterminate?: boolean;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>>;\nexport const treeItemClassName = 'ui-tree__item';\n\nconst TreeItem: React.FC<WithAsProp<TreeItemProps>> & FluentComponentStaticProps<TreeItemProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectableParent,\n    selected,\n    selectable,\n    indeterminate,\n    id,\n  } = props;\n\n  const hasSubtreeItem = hasSubtree(props);\n\n  const { onFocusParent, onSiblingsExpand, onFocusFirstChild, onTitleClick } = React.useContext(TreeContext);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree: hasSubtreeItem,\n      treeSize,\n      selected,\n      selectable,\n      selectableParent,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleSelection = e => {\n    onTitleClick(e, props, true);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleTitleClick = e => {\n    onTitleClick(e, props);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    onFocusFirstChild(props.id);\n  };\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    onFocusParent(props.parent);\n  };\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    onSiblingsExpand(e, props);\n  };\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    onClick: (e, titleProps) => {\n      handleTitleClick(e);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        selected,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree: hasSubtreeItem,\n                as: hasSubtreeItem ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected,\n                selectable,\n                ...(hasSubtreeItem && !selectableParent && { selectable: false }),\n                ...(selectableParent && { indeterminate }),\n                selectableParent,\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = contentRef ? <Ref innerRef={contentRef}>{element}</Ref> : element;\n  setEnd();\n\n  return elementWithRef;\n};\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  selectableParent: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n};\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n};\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport default withSafeTypeForAs<typeof TreeItem, TreeItemProps, 'li'>(TreeItem);\n"],"file":"TreeItem.js"}