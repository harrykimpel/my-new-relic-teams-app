{"version":3,"sources":["components/Text/Text.tsx"],"names":["textClassName","Text","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","align","atMention","children","className","color","content","design","disabled","error","important","size","styles","success","timestamp","truncated","temporary","variables","weight","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","element","root","rtlTextContainer","getAttributes","forElements","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","bool","oneOf","customPropTypes","Object","keys","create","Component","mappedProp"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAcA;;AACA;;AAEA;;AADA;AA+DO,IAAMA,aAAa,GAAG,SAAtB;;;AAEP,IAAMC,IAA6E,GAAG,SAAhFA,IAAgF,CAAAC,KAAK,EAAI;AAC7F,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD6F,sBAEhE,iCAAaL,IAAI,CAACM,WAAlB,EAA+BJ,OAAO,CAACK,SAAvC,CAFgE;AAAA,MAErFC,QAFqF,iBAErFA,QAFqF;AAAA,MAE3EC,MAF2E,iBAE3EA,MAF2E;;AAG7FD,EAAAA,QAAQ;AAHqF,MAM3FE,aAN2F,GAyBzFT,KAzByF,CAM3FS,aAN2F;AAAA,MAO3FC,KAP2F,GAyBzFV,KAzByF,CAO3FU,KAP2F;AAAA,MAQ3FC,SAR2F,GAyBzFX,KAzByF,CAQ3FW,SAR2F;AAAA,MAS3FC,QAT2F,GAyBzFZ,KAzByF,CAS3FY,QAT2F;AAAA,MAU3FC,SAV2F,GAyBzFb,KAzByF,CAU3Fa,SAV2F;AAAA,MAW3FC,KAX2F,GAyBzFd,KAzByF,CAW3Fc,KAX2F;AAAA,MAY3FC,OAZ2F,GAyBzFf,KAzByF,CAY3Fe,OAZ2F;AAAA,MAa3FC,MAb2F,GAyBzFhB,KAzByF,CAa3FgB,MAb2F;AAAA,MAc3FC,QAd2F,GAyBzFjB,KAzByF,CAc3FiB,QAd2F;AAAA,MAe3FC,KAf2F,GAyBzFlB,KAzByF,CAe3FkB,KAf2F;AAAA,MAgB3FC,SAhB2F,GAyBzFnB,KAzByF,CAgB3FmB,SAhB2F;AAAA,MAiB3FC,IAjB2F,GAyBzFpB,KAzByF,CAiB3FoB,IAjB2F;AAAA,MAkB3FC,MAlB2F,GAyBzFrB,KAzByF,CAkB3FqB,MAlB2F;AAAA,MAmB3FC,OAnB2F,GAyBzFtB,KAzByF,CAmB3FsB,OAnB2F;AAAA,MAoB3FC,SApB2F,GAyBzFvB,KAzByF,CAoB3FuB,SApB2F;AAAA,MAqB3FC,SArB2F,GAyBzFxB,KAzByF,CAqB3FwB,SArB2F;AAAA,MAsB3FC,SAtB2F,GAyBzFzB,KAzByF,CAsB3FyB,SAtB2F;AAAA,MAuB3FC,SAvB2F,GAyBzF1B,KAzByF,CAuB3F0B,SAvB2F;AAAA,MAwB3FC,MAxB2F,GAyBzF3B,KAzByF,CAwB3F2B,MAxB2F;AA2B7F,MAAMC,WAAW,GAAG,qCAAiBnB,aAAjB,EAAgC;AAClDoB,IAAAA,SAAS,EAAE9B,IAAI,CAACM,WADkC;AAElDyB,IAAAA,GAAG,EAAE7B,OAAO,CAAC6B;AAFqC,GAAhC,CAApB;;AA3B6F,mBA+BzE,8BAA2B/B,IAAI,CAACM,WAAhC,EAA6C;AAC/DQ,IAAAA,SAAS,EAAEf,aADoD;AAE/DiC,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBpB,QAAAA,SAAS,EAATA,SADuB;AAEvBG,QAAAA,KAAK,EAALA,KAFuB;AAGvBK,QAAAA,SAAS,EAATA,SAHuB;AAIvBI,QAAAA,SAAS,EAATA,SAJuB;AAKvBC,QAAAA,SAAS,EAATA,SALuB;AAMvBP,QAAAA,QAAQ,EAARA,QANuB;AAOvBC,QAAAA,KAAK,EAALA,KAPuB;AAQvBI,QAAAA,OAAO,EAAPA,OARuB;AASvBG,QAAAA,SAAS,EAATA,SATuB;AAUvBf,QAAAA,KAAK,EAALA,KAVuB;AAWvBiB,QAAAA,MAAM,EAANA,MAXuB;AAYvBP,QAAAA,IAAI,EAAJA;AAZuB,OAAP;AAAA,KAF6C;AAgB/DY,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BnB,QAAAA,SAAS,EAATA,SAD6B;AAE7BG,QAAAA,MAAM,EAANA,MAF6B;AAG7BK,QAAAA,MAAM,EAANA,MAH6B;AAI7BK,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAhBuC;AAsB/DI,IAAAA,GAAG,EAAE7B,OAAO,CAAC6B;AAtBkD,GAA7C,CA/ByE;AAAA,MA+BrFG,OA/BqF,cA+BrFA,OA/BqF;;AAwD7F,MAAMC,cAAc,GAAG,sCAAkBnC,IAAI,CAACoC,YAAvB,EAAqCnC,KAArC,CAAvB;AACA,MAAMoC,WAAW,GAAG,mCAAepC,KAAf,CAApB;AAEA,MAAMqC,OAAO,GACX,oBAAC,WAAD,EACMT,WAAW,CAAC,MAAD;AACbf,IAAAA,SAAS,EAAEoB,OAAO,CAACK;AADN,KAEVC,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAAC7B,QAAD,EAAWG,OAAX;AAAf,GAA/B,CAFU,MAGVmB,cAHU,EADjB,EAOG,0BAActB,QAAd,IAA0BA,QAA1B,GAAqCG,OAPxC,CADF;AAYAP,EAAAA,MAAM;AAEN,SAAO6B,OAAP;AACD,CA1ED;;AA4EAtC,IAAI,CAACM,WAAL,GAAmB,MAAnB;AAEAN,IAAI,CAAC2C,YAAL,GAAoB;AAClBC,EAAAA,EAAE,EAAE;AADc,CAApB;AAGA5C,IAAI,CAAC6C,SAAL,qBACKC,uBAAgBC,YAAhB,CAA6B;AAAEhC,EAAAA,KAAK,EAAE;AAAT,CAA7B,CADL;AAEEH,EAAAA,SAAS,EAAEoC,SAAS,CAACC,SAAV,CAAyB,CAACD,SAAS,CAACE,IAAX,EAAiBF,SAAS,CAACG,KAAV,CAAgB,CAAC,IAAD,CAAhB,CAAjB,CAAzB,CAFb;AAGEjC,EAAAA,QAAQ,EAAE8B,SAAS,CAACE,IAHtB;AAIE/B,EAAAA,KAAK,EAAE6B,SAAS,CAACE,IAJnB;AAKE9B,EAAAA,SAAS,EAAE4B,SAAS,CAACE,IALvB;AAME7B,EAAAA,IAAI,EAAE+B,eAAe,CAAC/B,IANxB;AAOEO,EAAAA,MAAM,EAAEoB,SAAS,CAACG,KAAV,CAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,MAA9C,CAAhB,CAPV;AAQE5B,EAAAA,OAAO,EAAEyB,SAAS,CAACE,IARrB;AASExB,EAAAA,SAAS,EAAEsB,SAAS,CAACE,IATvB;AAUEvC,EAAAA,KAAK,EAAEyC,eAAe,CAACzC,KAVzB;AAWEa,EAAAA,SAAS,EAAEwB,SAAS,CAACE,IAXvB;AAYEzB,EAAAA,SAAS,EAAEuB,SAAS,CAACE;AAZvB;AAcAlD,IAAI,CAACoC,YAAL,GAAoBiB,MAAM,CAACC,IAAP,CAAYtD,IAAI,CAAC6C,SAAjB,CAApB;AAEA7C,IAAI,CAACuD,MAAL,GAAc,mCAAuB;AAAEC,EAAAA,SAAS,EAAExD,IAAb;AAAmByD,EAAAA,UAAU,EAAE;AAA/B,CAAvB,CAAd;AAEA;;;;eAGe,8BAAkDzD,IAAlD,C","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  SizeValue,\n  AlignValue,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface TextProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** At mentions can be formatted to draw users' attention. Mentions for \"me\" can be formatted to appear differently. */\n  atMention?: boolean | 'me';\n\n  /** Set as disabled Text component */\n  disabled?: boolean;\n\n  /** Set as error Text component */\n  error?: boolean;\n\n  /** The text can appear more important and draw user's attention */\n  important?: boolean;\n\n  /** The size for the Text component */\n  size?: SizeValue;\n\n  /** The weight for the Text component */\n  weight?: 'light' | 'semilight' | 'regular' | 'semibold' | 'bold';\n\n  /** Set as success Text component */\n  success?: boolean;\n\n  /** The text can signify a temporary state */\n  temporary?: boolean;\n\n  /** Align text content. */\n  align?: AlignValue;\n\n  /** Set as timestamp Text component */\n  timestamp?: boolean;\n\n  /** Truncates text as needed */\n  truncated?: boolean;\n}\n\nexport type TextStylesProps = Pick<\n  TextProps,\n  | 'atMention'\n  | 'color'\n  | 'important'\n  | 'timestamp'\n  | 'truncated'\n  | 'disabled'\n  | 'error'\n  | 'success'\n  | 'temporary'\n  | 'align'\n  | 'weight'\n  | 'size'\n>;\n\nexport const textClassName = 'ui-text';\n\nconst Text: React.FC<WithAsProp<TextProps>> & FluentComponentStaticProps<TextProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Text.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    atMention,\n    children,\n    className,\n    color,\n    content,\n    design,\n    disabled,\n    error,\n    important,\n    size,\n    styles,\n    success,\n    timestamp,\n    truncated,\n    temporary,\n    variables,\n    weight,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Text.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TextStylesProps>(Text.displayName, {\n    className: textClassName,\n    mapPropsToStyles: () => ({\n      atMention,\n      color,\n      important,\n      timestamp,\n      truncated,\n      disabled,\n      error,\n      success,\n      temporary,\n      align,\n      weight,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Text.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nText.displayName = 'Text';\n\nText.defaultProps = {\n  as: 'span',\n};\nText.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n  atMention: PropTypes.oneOfType<any>([PropTypes.bool, PropTypes.oneOf(['me'])]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  important: PropTypes.bool,\n  size: customPropTypes.size,\n  weight: PropTypes.oneOf(['light', 'semilight', 'regular', 'semibold', 'bold']),\n  success: PropTypes.bool,\n  temporary: PropTypes.bool,\n  align: customPropTypes.align,\n  timestamp: PropTypes.bool,\n  truncated: PropTypes.bool,\n};\nText.handledProps = Object.keys(Text.propTypes) as any;\n\nText.create = createShorthandFactory({ Component: Text, mappedProp: 'content' });\n\n/**\n * A Text consistently styles and formats occurrences of text.\n */\nexport default withSafeTypeForAs<typeof Text, TextProps, 'span'>(Text);\n"],"file":"Text.js"}