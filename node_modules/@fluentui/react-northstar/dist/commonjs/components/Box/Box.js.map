{"version":3,"sources":["components/Box/Box.tsx"],"names":["boxClassName","Box","props","ref","composeOptions","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","children","content","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","handledProps","ElementType","result","rtlTextContainer","getAttributes","forElements","root","propTypes","commonPropTypes","createCommon","create","Component"],"mappings":";;;;;;;;;AAAA;;AAUA;;AAEA;;AAEA;;AAHA;AAqBO,IAAMA,YAAY,GAAG,QAArB;AAEP;;;;;;AAIA,IAAMC,GAAG,GAAG,4BACV,UAACC,KAAD,EAAQC,GAAR,EAAaC,cAAb,EAAgC;AAC9B,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD8B,sBAED,iCAAaJ,cAAc,CAACK,WAA5B,EAAyCJ,OAAO,CAACK,SAAjD,CAFC;AAAA,MAEtBC,QAFsB,iBAEtBA,QAFsB;AAAA,MAEZC,MAFY,iBAEZA,MAFY;;AAG9BD,EAAAA,QAAQ;AAHsB,MAKtBE,aALsB,GAKqDX,KALrD,CAKtBW,aALsB;AAAA,MAKPC,SALO,GAKqDZ,KALrD,CAKPY,SALO;AAAA,MAKIC,MALJ,GAKqDb,KALrD,CAKIa,MALJ;AAAA,MAKYC,MALZ,GAKqDd,KALrD,CAKYc,MALZ;AAAA,MAKoBC,SALpB,GAKqDf,KALrD,CAKoBe,SALpB;AAAA,MAK+BC,QAL/B,GAKqDhB,KALrD,CAK+BgB,QAL/B;AAAA,MAKyCC,OALzC,GAKqDjB,KALrD,CAKyCiB,OALzC;AAO9B,MAAMC,YAAY,GAAG,qCAAiBP,aAAjB,EAAgC;AACnDQ,IAAAA,SAAS,EAAEjB,cAAc,CAACK,WADyB;AAEnDa,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAFsC,GAAhC,CAArB;;AAP8B,mBAWV,8BAA0BlB,cAAc,CAACK,WAAzC,EAAsD;AACxEK,IAAAA,SAAS,EAAEV,cAAc,CAACU,SAD8C;AAExEV,IAAAA,cAAc,EAAdA,cAFwE;AAGxEmB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BT,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHgD;AASxEK,IAAAA,GAAG,EAAEjB,OAAO,CAACiB,GAT2D;AAUxEE,IAAAA,cAAc,EAAEtB;AAVwD,GAAtD,CAXU;AAAA,MAWtBuB,OAXsB,cAWtBA,OAXsB;;AAwB9B,MAAMC,cAAc,GAAG,sCAAkBtB,cAAc,CAACuB,YAAjC,EAA+CzB,KAA/C,CAAvB;AACA,MAAM0B,WAAW,GAAG,mCAAe1B,KAAf,CAApB;AAEA,MAAM2B,MAAM,GACV,oBAAC,WAAD,EACMT,YAAY,CAAC,MAAD,oBACXU,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACd,QAAD,EAAWC,OAAX;AAAf,GAA/B,CADW;AAEdL,IAAAA,SAAS,EAAEW,OAAO,CAACQ,IAFL;AAGd9B,IAAAA,GAAG,EAAHA;AAHc,KAIXuB,cAJW,EADlB,EAQG,0BAAcR,QAAd,IAA0BA,QAA1B,GAAqCC,OARxC,CADF;AAaAP,EAAAA,MAAM;AAEN,SAAOiB,MAAP;AACD,CA5CS,EA6CV;AACEf,EAAAA,SAAS,EAAEd,YADb;AAEES,EAAAA,WAAW,EAAE,KAFf;AAGEkB,EAAAA,YAAY,EAAE,CAAC,eAAD,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,UAArC,EAAiD,SAAjD,EAA4D,QAA5D,EAAsE,QAAtE,EAAgF,WAAhF;AAHhB,CA7CU,CAAZ;AAoDA1B,GAAG,CAACiC,SAAJ,GAAgBC,uBAAgBC,YAAhB,EAAhB;AACAnC,GAAG,CAACoC,MAAJ,GAAa,mCAAuB;AAAEC,EAAAA,SAAS,EAAErC;AAAb,CAAvB,CAAb;eAEeA,G","sourcesContent":["import {\n  compose,\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  UIComponentProps,\n  ShorthandFactory,\n} from '../../utils';\nimport { ProviderContextPrepared } from '../../types';\n\nexport interface BoxProps extends UIComponentProps<BoxProps>, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\nexport type BoxStylesProps = never;\n\nexport const boxClassName = 'ui-box';\n\n/**\n * A Box is a basic component, commonly used for slots in other Fluent UI components.\n * By default it just renders a `div`.\n */\nconst Box = compose<'div', BoxProps, BoxStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context: ProviderContextPrepared = React.useContext(ThemeContext);\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, className, design, styles, variables, children, content } = props;\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<BoxStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = (\n      <ElementType\n        {...getA11yProps('root', {\n          ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n  {\n    className: boxClassName,\n    displayName: 'Box',\n    handledProps: ['accessibility', 'as', 'className', 'children', 'content', 'design', 'styles', 'variables'],\n  },\n) as ComponentWithAs<'div', BoxProps> & { create: ShorthandFactory<BoxProps> };\n\nBox.propTypes = commonPropTypes.createCommon();\nBox.create = createShorthandFactory({ Component: Box });\n\nexport default Box;\n"],"file":"Box.js"}