{"version":3,"sources":["components/Card/CardColumn.tsx"],"names":["cardColumnClassName","CardColumn","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","Object","keys","create","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AADA;AAWO,IAAMA,mBAAmB,GAAG,iBAA5B;;;AAEP,IAAMC,UAA+F,GAAG,SAAlGA,UAAkG,CAAAC,KAAK,EAAI;AAC/G,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD+G,sBAElF,iCAAaL,UAAU,CAACM,WAAxB,EAAqCJ,OAAO,CAACK,SAA7C,CAFkF;AAAA,MAEvGC,QAFuG,iBAEvGA,QAFuG;AAAA,MAE7FC,MAF6F,iBAE7FA,MAF6F;;AAG/GD,EAAAA,QAAQ;AAHuG,MAKvGE,SALuG,GAKpDT,KALoD,CAKvGS,SALuG;AAAA,MAK5FC,MAL4F,GAKpDV,KALoD,CAK5FU,MAL4F;AAAA,MAKpFC,MALoF,GAKpDX,KALoD,CAKpFW,MALoF;AAAA,MAK5EC,SAL4E,GAKpDZ,KALoD,CAK5EY,SAL4E;AAAA,MAKjEC,QALiE,GAKpDb,KALoD,CAKjEa,QALiE;AAM/G,MAAMC,WAAW,GAAG,mCAAed,KAAf,CAApB;AACA,MAAMe,cAAc,GAAG,sCAAkBhB,UAAU,CAACiB,YAA7B,EAA2ChB,KAA3C,CAAvB;AACA,MAAMiB,YAAY,GAAG,qCAAiBjB,KAAK,CAACkB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAEpB,UAAU,CAACM,WADmC;AAEzDe,IAAAA,GAAG,EAAEnB,OAAO,CAACmB;AAF4C,GAAtC,CAArB;;AAR+G,mBAa3F,8BAAiCrB,UAAU,CAACM,WAA5C,EAAyD;AAC3EI,IAAAA,SAAS,EAAEX,mBADgE;AAE3EuB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFmD;AAQ3EQ,IAAAA,GAAG,EAAEnB,OAAO,CAACmB;AAR8D,GAAzD,CAb2F;AAAA,MAavGE,OAbuG,cAavGA,OAbuG;;AAwB/G,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMN,YAAY,CAAC,MAAD;AACdR,IAAAA,SAAS,EAAEa,OAAO,CAACE;AADL,KAEXT,cAFW,EADlB,EAMGF,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOe,OAAP;AACD,CApCD;;AAsCAxB,UAAU,CAACM,WAAX,GAAyB,YAAzB;AAEAN,UAAU,CAAC0B,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAIA5B,UAAU,CAACiB,YAAX,GAA0BY,MAAM,CAACC,IAAP,CAAY9B,UAAU,CAAC0B,SAAvB,CAA1B;AAEA1B,UAAU,CAAC+B,MAAX,GAAoB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEhC;AAAb,CAAvB,CAApB;AAEA;;;;eAGe,8BAA6DA,UAA7D,C","sourcesContent":["import * as React from 'react';\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CardColumnProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardColumnStylesProps = never;\nexport const cardColumnClassName = 'ui-card__column';\n\nconst CardColumn: React.FC<WithAsProp<CardColumnProps>> & FluentComponentStaticProps<CardColumnProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardColumn.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardColumn.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardColumn.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardColumnStylesProps>(CardColumn.displayName, {\n    className: cardColumnClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardColumn.displayName = 'CardColumn';\n\nCardColumn.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardColumn.handledProps = Object.keys(CardColumn.propTypes) as any;\n\nCardColumn.create = createShorthandFactory({ Component: CardColumn });\n\n/**\n * A CardColumn is used to display content in card as column\n */\nexport default withSafeTypeForAs<typeof CardColumn, CardColumnProps, 'div'>(CardColumn);\n"],"file":"CardColumn.js"}