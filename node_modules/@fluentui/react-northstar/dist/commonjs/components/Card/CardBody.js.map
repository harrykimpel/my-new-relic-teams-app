{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["cardBodyClassName","CardBody","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AADA;AAcO,IAAMA,iBAAiB,GAAG,eAA1B;;;AAEP,IAAMC,QAAyF,GAAG,SAA5FA,QAA4F,CAAAC,KAAK,EAAI;AACzG,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AADyG,sBAE5E,iCAAaL,QAAQ,CAACM,WAAtB,EAAmCJ,OAAO,CAACK,SAA3C,CAF4E;AAAA,MAEjGC,QAFiG,iBAEjGA,QAFiG;AAAA,MAEvFC,MAFuF,iBAEvFA,MAFuF;;AAGzGD,EAAAA,QAAQ;AAHiG,MAKjGE,SALiG,GAKtCT,KALsC,CAKjGS,SALiG;AAAA,MAKtFC,MALsF,GAKtCV,KALsC,CAKtFU,MALsF;AAAA,MAK9EC,MAL8E,GAKtCX,KALsC,CAK9EW,MAL8E;AAAA,MAKtEC,SALsE,GAKtCZ,KALsC,CAKtEY,SALsE;AAAA,MAK3DC,QAL2D,GAKtCb,KALsC,CAK3Da,QAL2D;AAAA,MAKjDC,MALiD,GAKtCd,KALsC,CAKjDc,MALiD;AAMzG,MAAMC,WAAW,GAAG,mCAAef,KAAf,CAApB;AACA,MAAMgB,cAAc,GAAG,sCAAkBjB,QAAQ,CAACkB,YAA3B,EAAyCjB,KAAzC,CAAvB;AACA,MAAMkB,YAAY,GAAG,qCAAiBlB,KAAK,CAACmB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAErB,QAAQ,CAACM,WADqC;AAEzDgB,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AAF4C,GAAtC,CAArB;;AARyG,mBAarF,8BAA+BtB,QAAQ,CAACM,WAAxC,EAAqD;AACvEI,IAAAA,SAAS,EAAEX,iBAD4D;AAEvEwB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFqD;AAGvES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAH+C;AASvES,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AAT0D,GAArD,CAbqF;AAAA,MAajGG,OAbiG,cAajGA,OAbiG;;AAyBzG,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CArCD;;AAuCA1B,QAAQ,CAACM,WAAT,GAAuB,UAAvB;AAEAN,QAAQ,CAAC4B,SAAT,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKAhC,QAAQ,CAACkB,YAAT,GAAwBe,MAAM,CAACC,IAAP,CAAYlC,QAAQ,CAAC4B,SAArB,CAAxB;AAEA5B,QAAQ,CAACmC,MAAT,GAAkB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEpC;AAAb,CAAvB,CAAlB;AAEA;;;;eAGe,8BAAyDA,QAAzD,C","sourcesContent":["import * as React from 'react';\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\nexport const cardBodyClassName = 'ui-card__body';\n\nconst CardBody: React.FC<WithAsProp<CardBodyProps>> & FluentComponentStaticProps<CardBodyProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: cardBodyClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardBody.displayName = 'CardBody';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport default withSafeTypeForAs<typeof CardBody, CardBodyProps, 'div'>(CardBody);\n"],"file":"CardBody.js"}