{"version":3,"sources":["components/Card/CardHeader.tsx"],"names":["cardHeaderClassName","CardHeader","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAHA;AAgBO,IAAMA,mBAAmB,GAAG,iBAA5B;;;AAEP,IAAMC,UAA+F,GAAG,SAAlGA,UAAkG,CAAAC,KAAK,EAAI;AAC/G,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AAD+G,sBAElF,iCAAaL,UAAU,CAACM,WAAxB,EAAqCJ,OAAO,CAACK,SAA7C,CAFkF;AAAA,MAEvGC,QAFuG,iBAEvGA,QAFuG;AAAA,MAE7FC,MAF6F,iBAE7FA,MAF6F;;AAG/GD,EAAAA,QAAQ;AAHuG,MAKvGE,SALuG,GAK5CT,KAL4C,CAKvGS,SALuG;AAAA,MAK5FC,MAL4F,GAK5CV,KAL4C,CAK5FU,MAL4F;AAAA,MAKpFC,MALoF,GAK5CX,KAL4C,CAKpFW,MALoF;AAAA,MAK5EC,SAL4E,GAK5CZ,KAL4C,CAK5EY,SAL4E;AAAA,MAKjEC,QALiE,GAK5Cb,KAL4C,CAKjEa,QALiE;AAAA,MAKvDC,MALuD,GAK5Cd,KAL4C,CAKvDc,MALuD;AAM/G,MAAMC,WAAW,GAAG,mCAAef,KAAf,CAApB;AACA,MAAMgB,cAAc,GAAG,sCAAkBjB,UAAU,CAACkB,YAA7B,EAA2CjB,KAA3C,CAAvB;AACA,MAAMkB,YAAY,GAAG,qCAAiBlB,KAAK,CAACmB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAErB,UAAU,CAACM,WADmC;AAEzDgB,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AAF4C,GAAtC,CAArB;;AAR+G,mBAa3F,8BAAiCtB,UAAU,CAACM,WAA5C,EAAyD;AAC3EI,IAAAA,SAAS,EAAEX,mBADgE;AAE3EwB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFyD;AAG3ES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHmD;AAS3ES,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AAT8D,GAAzD,CAb2F;AAAA,MAavGG,OAbuG,cAavGA,OAbuG;;AAyB/G,MAAMC,OAAO,GACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CArCD;;AAuCA1B,UAAU,CAACM,WAAX,GAAyB,YAAzB;AAEAN,UAAU,CAAC4B,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKAhC,UAAU,CAACkB,YAAX,GAA0Be,MAAM,CAACC,IAAP,CAAYlC,UAAU,CAAC4B,SAAvB,CAA1B;AAEA5B,UAAU,CAACmC,MAAX,GAAoB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEpC;AAAb,CAAvB,CAApB;AAEA;;;;eAGe,8BAA6DA,UAA7D,C","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardHeaderProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardHeaderStylesProps = Pick<CardHeaderProps, 'fitted'>;\nexport const cardHeaderClassName = 'ui-card__header';\n\nconst CardHeader: React.FC<WithAsProp<CardHeaderProps>> & FluentComponentStaticProps<CardHeaderProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardHeader.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardHeader.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardHeader.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardHeaderStylesProps>(CardHeader.displayName, {\n    className: cardHeaderClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardHeader.displayName = 'CardHeader';\n\nCardHeader.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardHeader.handledProps = Object.keys(CardHeader.propTypes) as any;\n\nCardHeader.create = createShorthandFactory({ Component: CardHeader });\n\n/**\n * A CardHeader is used to display data in Card header.\n */\nexport default withSafeTypeForAs<typeof CardHeader, CardHeaderProps, 'div'>(CardHeader);\n"],"file":"CardHeader.js"}