"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _keys2 = _interopRequireDefault(require("lodash/keys"));

var _reactBindings = require("@fluentui/react-bindings");

var _reactComponentEventListener = require("@fluentui/react-component-event-listener");

var _reactComponentRef = require("@fluentui/react-component-ref");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _PortalInner = _interopRequireDefault(require("./PortalInner"));

/**
 * A Portal allows to render children outside of their parent.
 */
var Portal =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(Portal, _AutoControlledCompon);

  function Portal() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Portal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Portal)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "portalNode", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "triggerNode", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMount", function () {
      (0, _invoke2.default)(_this.props, 'onMount', _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleUnmount", function () {
      (0, _invoke2.default)(_this.props, 'onUnmount', _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handlePortalRef", function (portalNode) {
      _this.portalNode = portalNode;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleTriggerRef", function (triggerNode) {
      _this.triggerNode = triggerNode;
      (0, _reactComponentRef.handleRef)(_this.props.triggerRef, triggerNode);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleTriggerClick", function (e) {
      var trigger = _this.props.trigger;
      (0, _invoke2.default)(_this.props, 'onTriggerClick', e); // Call handler from parent component

      for (var _len2 = arguments.length, unhandledProps = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        unhandledProps[_key2 - 1] = arguments[_key2];
      }

      _invoke2.default.apply(void 0, [trigger, 'props.onClick', e].concat(unhandledProps)); // Call original event handler


      _this.setState({
        open: !_this.state.open
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDocumentClick", function (e) {
      if (!_this.portalNode || // no portal
      (0, _utils.doesNodeContainClick)(_this.triggerNode, e, _this.context.target) || // event happened in trigger (delegate to trigger handlers)
      (0, _utils.doesNodeContainClick)(_this.portalNode, e, _this.context.target) // event happened in the portal
      ) {
          return; // ignore the click
        }

      (0, _invoke2.default)(_this.props, 'onOutsideClick', e);

      _this.setState({
        open: false
      });
    });
    return _this;
  }

  (0, _createClass2.default)(Portal, [{
    key: "renderComponent",
    value: function renderComponent() {
      return React.createElement(React.Fragment, null, this.renderPortal(), this.renderTrigger());
    }
  }, {
    key: "renderPortal",
    value: function renderPortal() {
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content,
          trapFocus = _this$props.trapFocus;
      var open = this.state.open;
      var contentToRender = (0, _utils.childrenExist)(children) ? children : content;
      var focusTrapZoneProps = (0, _keys2.default)(trapFocus).length && trapFocus || {};
      return open && React.createElement(_reactComponentRef.Ref, {
        innerRef: this.handlePortalRef
      }, React.createElement(_PortalInner.default, (0, _extends2.default)({
        onMount: this.handleMount,
        onUnmount: this.handleUnmount
      }, _utils.rtlTextContainer.getAttributes({
        forElements: [contentToRender]
      })), trapFocus ? React.createElement(_reactBindings.FocusTrapZone, focusTrapZoneProps, contentToRender) : contentToRender, React.createElement(_reactComponentEventListener.EventListener, {
        listener: this.handleDocumentClick,
        target: this.context.target,
        type: "click"
      })));
    }
  }, {
    key: "renderTrigger",
    value: function renderTrigger() {
      var _this$props2 = this.props,
          trigger = _this$props2.trigger,
          triggerAccessibility = _this$props2.triggerAccessibility;
      return trigger && React.createElement(_reactComponentRef.Ref, {
        innerRef: this.handleTriggerRef
      }, React.cloneElement(trigger, Object.assign({
        onClick: this.handleTriggerClick
      }, triggerAccessibility.attributes, {}, triggerAccessibility.keyHandlers)));
    }
  }]);
  return Portal;
}(_utils.AutoControlledComponent);

(0, _defineProperty2.default)(Portal, "autoControlledProps", ['open']);
(0, _defineProperty2.default)(Portal, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon({
  accessibility: false,
  as: false,
  className: false,
  styled: false
}), {
  defaultOpen: PropTypes.bool,
  onMount: PropTypes.func,
  onUnmount: PropTypes.func,
  open: PropTypes.bool,
  trigger: PropTypes.node,
  triggerRef: customPropTypes.ref,
  triggerAccessibility: PropTypes.object,
  onTriggerClick: PropTypes.func,
  onOutsideClick: PropTypes.func,
  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object])
}));
(0, _defineProperty2.default)(Portal, "defaultProps", {
  triggerAccessibility: {}
});
var _default = Portal;
exports.default = _default;
//# sourceMappingURL=Portal.js.map
