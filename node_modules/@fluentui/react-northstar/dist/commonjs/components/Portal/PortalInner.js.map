{"version":3,"sources":["components/Portal/PortalInner.tsx"],"names":["PortalInner","props","children","mountNode","target","context","document","body","container","ReactDOM","createPortal","React","Component","PortalBoxContext","commonPropTypes","createCommon","accessibility","as","className","content","styled","PropTypes","object","onMount","func","onUnmount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAqBA;;;IAGMA,W;;;;;;;;;;;;wCAgBgB;AAClB,4BAAS,KAAKC,KAAd,EAAqB,SAArB,EAAgC,KAAKA,KAArC;AACD;;;2CAEsB;AACrB,4BAAS,KAAKA,KAAd,EAAqB,WAArB,EAAkC,KAAKA,KAAvC;AACD;;;6BAEQ;AAAA,wBACyB,KAAKA,KAD9B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX,EAGP;AACA;;AACA,UAAMC,MAA6B,GAAG,0BAAc,KAAKC,OAAL,IAAgBC,QAAQ,CAACC,IAAvC,GAA8C,IAApF;AACA,UAAMC,SAA6B,GAAGL,SAAS,IAAIC,MAAnD;AAEA,aAAOI,SAAS,IAAIC,QAAQ,CAACC,YAAT,CAAsBR,QAAtB,EAAgCM,SAAhC,CAApB;AACD;;;EAjCuBG,KAAK,CAACC,S;;8BAA1BZ,W,iBACiBa,8B;8BADjBb,W,iCAICc,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,aAAa,EAAE,KADe;AAE9BC,EAAAA,EAAE,EAAE,KAF0B;AAG9BC,EAAAA,SAAS,EAAE,KAHmB;AAI9BC,EAAAA,OAAO,EAAE,KAJqB;AAK9BC,EAAAA,MAAM,EAAE;AALsB,CAA7B,C;AAOHjB,EAAAA,SAAS,EAAEkB,SAAS,CAACC,M;AACrBC,EAAAA,OAAO,EAAEF,SAAS,CAACG,I;AACnBC,EAAAA,SAAS,EAAEJ,SAAS,CAACG;;eAuBVxB,W","sourcesContent":["import * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { isBrowser, ChildrenComponentProps, commonPropTypes } from '../../utils';\nimport { PortalBoxContext } from '../Provider/usePortalBox';\n\nexport interface PortalInnerProps extends ChildrenComponentProps {\n  /** Existing element the portal should be bound to. */\n  mountNode?: HTMLElement;\n\n  /**\n   * Called when the portal is mounted on the DOM\n   *\n   * @param data - All props.\n   */\n  onMount?: (props: PortalInnerProps) => void;\n\n  /**\n   * Called when the portal is unmounted from the DOM\n   *\n   * @param data - All props.\n   */\n  onUnmount?: (props: PortalInnerProps) => void;\n}\n\n/**\n * A PortalInner is a container for Portal's content.\n */\nclass PortalInner extends React.Component<PortalInnerProps> {\n  static contextType = PortalBoxContext;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      as: false,\n      className: false,\n      content: false,\n      styled: false,\n    }),\n    mountNode: PropTypes.object,\n    onMount: PropTypes.func,\n    onUnmount: PropTypes.func,\n  };\n\n  componentDidMount() {\n    _.invoke(this.props, 'onMount', this.props);\n  }\n\n  componentWillUnmount() {\n    _.invoke(this.props, 'onUnmount', this.props);\n  }\n\n  render() {\n    const { children, mountNode } = this.props;\n\n    // PortalInner should render elements even without a context\n    // eslint-disable-next-line\n    const target: HTMLDivElement | null = isBrowser() ? this.context || document.body : null;\n    const container: HTMLElement | null = mountNode || target;\n\n    return container && ReactDOM.createPortal(children, container);\n  }\n}\n\nexport default PortalInner;\n"],"file":"PortalInner.js"}