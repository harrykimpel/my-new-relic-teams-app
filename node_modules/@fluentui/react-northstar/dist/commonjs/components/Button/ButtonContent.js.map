{"version":3,"sources":["components/Button/ButtonContent.tsx"],"names":["buttonContentClassName","ButtonContent","Box","className","displayName","mapPropsToStylesProps","props","size","handledProps","overrideStyles","defaultProps","as","propTypes","commonPropTypes","createCommon","customPropTypes","shorthandConfig","mappedProp"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AASO,IAAMA,sBAAsB,GAAG,oBAA/B;AAEP;;;;;AAGA,IAAMC,aAAa,GAAG,4BAA4EC,YAA5E,EAAiF;AACrGC,EAAAA,SAAS,EAAEH,sBAD0F;AAErGI,EAAAA,WAAW,EAAE,eAFwF;AAGrGC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAK;AAAEC,MAAAA,IAAI,EAAED,KAAK,CAACC;AAAd,KAAL;AAAA,GAHyE;AAIrGC,EAAAA,YAAY,EAAE,CAAC,MAAD,CAJuF;AAMrGC,EAAAA,cAAc,EAAE;AANqF,CAAjF,CAAtB;AASAR,aAAa,CAACS,YAAd,GAA6B;AAC3BC,EAAAA,EAAE,EAAE;AADuB,CAA7B;AAGAV,aAAa,CAACW,SAAd,qBACKC,uBAAgBC,YAAhB,EADL;AAEEP,EAAAA,IAAI,EAAEQ,eAAe,CAACR;AAFxB;AAIAN,aAAa,CAACe,eAAd,GAAgC;AAC9BC,EAAAA,UAAU,EAAE;AADkB,CAAhC;eAIehB,a","sourcesContent":["import { compose, ComponentWithAs } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { commonPropTypes, ShorthandConfig, SizeValue } from '../../utils';\nimport Box, { BoxProps } from '../Box/Box';\n\ninterface ButtonContentOwnProps {\n  size?: SizeValue;\n}\n\nexport interface ButtonContentProps extends BoxProps, ButtonContentOwnProps {}\nexport type ButtonContentStylesProps = Pick<ButtonContentProps, 'size'>;\n\nexport const buttonContentClassName = 'ui-button__content';\n\n/**\n * A ButtonContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nconst ButtonContent = compose<'span', ButtonContentProps, ButtonContentStylesProps, BoxProps, {}>(Box, {\n  className: buttonContentClassName,\n  displayName: 'ButtonContent',\n  mapPropsToStylesProps: props => ({ size: props.size }),\n  handledProps: ['size'],\n\n  overrideStyles: true,\n}) as ComponentWithAs<'span', ButtonContentProps> & { shorthandConfig: ShorthandConfig<ButtonContentProps> };\n\nButtonContent.defaultProps = {\n  as: 'span',\n};\nButtonContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\nButtonContent.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nexport default ButtonContent;\n"],"file":"ButtonContent.js"}