"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.formFieldClassName = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _types = require("../../types");

var _Text = _interopRequireDefault(require("../Text/Text"));

var _Input = _interopRequireDefault(require("../Input/Input"));

var _Box = _interopRequireDefault(require("../Box/Box"));

var formFieldClassName = 'ui-form__field';
exports.formFieldClassName = formFieldClassName;

var FormField =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(FormField, _UIComponent);

  function FormField() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, FormField);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(FormField)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "shouldControlAppearFirst", function () {
      var type = _this.props.type;
      return type && (type === 'checkbox' || type === 'radio');
    });
    return _this;
  }

  (0, _createClass2.default)(FormField, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          styles = _ref.styles,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          control = _this$props.control,
          id = _this$props.id,
          label = _this$props.label,
          message = _this$props.message,
          name = _this$props.name,
          required = _this$props.required,
          type = _this$props.type;

      var labelElement = _Text.default.create(label, {
        defaultProps: function defaultProps() {
          return {
            as: 'label',
            htmlFor: id,
            styles: styles.label
          };
        }
      });

      var messageElement = _Text.default.create(message, {
        defaultProps: function defaultProps() {
          return {
            styles: styles.message
          };
        }
      });

      var controlElement = _Box.default.create(control || {}, {
        defaultProps: function defaultProps() {
          return {
            required: required,
            id: id,
            name: name,
            type: type,
            styles: styles.control
          };
        }
      });

      var content = React.createElement(React.Fragment, null, this.shouldControlAppearFirst() && controlElement, labelElement, !this.shouldControlAppearFirst() && controlElement, messageElement);
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps), (0, _utils.childrenExist)(children) ? children : content);
    }
  }]);
  return FormField;
}(_utils.UIComponent);

(0, _defineProperty2.default)(FormField, "displayName", 'FormField');
(0, _defineProperty2.default)(FormField, "deprecated_className", formFieldClassName);
(0, _defineProperty2.default)(FormField, "create", void 0);
(0, _defineProperty2.default)(FormField, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon({
  content: false
}), {
  control: customPropTypes.itemShorthand,
  id: PropTypes.string,
  inline: PropTypes.bool,
  label: customPropTypes.itemShorthand,
  message: customPropTypes.itemShorthand,
  name: PropTypes.string,
  required: PropTypes.bool,
  type: PropTypes.string
}));
(0, _defineProperty2.default)(FormField, "defaultProps", {
  as: 'div',
  control: {
    as: _Input.default
  }
});
FormField.create = (0, _utils.createShorthandFactory)({
  Component: FormField,
  mappedProp: 'label'
});
/**
 * A FormField represents a Form element containing a label and an input.
 */

var _default = (0, _types.withSafeTypeForAs)(FormField);

exports.default = _default;
//# sourceMappingURL=FormField.js.map
