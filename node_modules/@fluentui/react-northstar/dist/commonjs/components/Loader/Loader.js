"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.loaderSlotClassNames = exports.loaderClassName = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _accessibility = require("@fluentui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _types = require("../../types");

var _Box = _interopRequireDefault(require("../Box/Box"));

var _Text = _interopRequireDefault(require("../Text/Text"));

var loaderClassName = 'ui-loader';
exports.loaderClassName = loaderClassName;
var loaderSlotClassNames = {
  indicator: "".concat(loaderClassName, "__indicator"),
  label: "".concat(loaderClassName, "__label"),
  svg: "".concat(loaderClassName, "__svg")
};
/**
 * A loader alerts a user that content is being loaded or processed and they should wait for the activity to complete.
 */

exports.loaderSlotClassNames = loaderSlotClassNames;

var Loader =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Loader, _UIComponent);

  function Loader(props, context) {
    var _this;

    (0, _classCallCheck2.default)(this, Loader);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Loader).call(this, props, context));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "delayTimer", void 0);
    _this.state = {
      visible: _this.props.delay === 0,
      labelId: ''
    };
    return _this;
  }

  (0, _createClass2.default)(Loader, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var delay = this.props.delay;

      if (delay > 0) {
        // @ts-ignore We have a collision between types from DOM and @types/node
        this.delayTimer = setTimeout(function () {
          _this2.setState({
            visible: true
          });
        }, delay);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.delayTimer);
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          variables = _ref.variables,
          styles = _ref.styles,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          indicator = _this$props.indicator,
          label = _this$props.label,
          svg = _this$props.svg;
      var _this$state = this.state,
          visible = _this$state.visible,
          labelId = _this$state.labelId;

      var svgElement = _Box.default.create(svg, {
        defaultProps: function defaultProps() {
          return {
            className: loaderSlotClassNames.svg,
            styles: styles.svg
          };
        }
      });

      return visible && React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps), _Box.default.create(indicator, {
        defaultProps: function defaultProps() {
          return {
            children: svgElement,
            className: loaderSlotClassNames.indicator,
            styles: styles.indicator
          };
        }
      }), _Text.default.create(label, {
        defaultProps: function defaultProps() {
          return {
            className: loaderSlotClassNames.label,
            styles: styles.label,
            id: labelId
          };
        }
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      return {
        labelId: (0, _utils.getOrGenerateIdFromShorthand)('loader-label-', props.label, state.labelId)
      };
    }
  }]);
  return Loader;
}(_utils.UIComponent);

(0, _defineProperty2.default)(Loader, "create", void 0);
(0, _defineProperty2.default)(Loader, "displayName", 'Loader');
(0, _defineProperty2.default)(Loader, "deprecated_className", loaderClassName);
(0, _defineProperty2.default)(Loader, "shorthandConfig", void 0);
(0, _defineProperty2.default)(Loader, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  delay: PropTypes.number,
  indicator: customPropTypes.itemShorthand,
  inline: PropTypes.bool,
  label: customPropTypes.itemShorthand,
  labelPosition: PropTypes.oneOf(['above', 'below', 'start', 'end']),
  size: customPropTypes.size,
  svg: customPropTypes.itemShorthand
}));
(0, _defineProperty2.default)(Loader, "defaultProps", {
  accessibility: _accessibility.loaderBehavior,
  delay: 0,
  indicator: {},
  labelPosition: 'below',
  svg: '',
  size: 'medium'
});
Loader.create = (0, _utils.createShorthandFactory)({
  Component: Loader,
  mappedProp: 'label'
});
Loader.shorthandConfig = {
  mappedProp: 'label'
};
/**
 * A Loader alerts a user to wait for an activity to complete.
 *
 * @accessibility
 * Implements [ARIA progressbar](https://www.w3.org/TR/wai-aria-1.1/#progressbar) role.
 */

var _default = (0, _types.withSafeTypeForAs)(Loader);

exports.default = _default;
//# sourceMappingURL=Loader.js.map
