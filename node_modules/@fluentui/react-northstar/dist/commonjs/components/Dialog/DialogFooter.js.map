{"version":3,"sources":["components/Dialog/DialogFooter.tsx"],"names":["dialogFooterClassName","DialogFooter","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","children","content","className","design","styles","variables","accessibility","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","Object","keys","create","Component","mappedProp"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AASA;;AACA;;AAZA;AAqBO,IAAMA,qBAAqB,GAAG,mBAA9B;;;AAIA,IAAMC,YACkC,GAAG,SADrCA,YACqC,CAAAC,KAAK,EAAI;AACzD,MAAMC,OAAgC,GAAGC,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAzC;;AADyD,sBAE5B,iCAAaL,YAAY,CAACM,WAA1B,EAAuCJ,OAAO,CAACK,SAA/C,CAF4B;AAAA,MAEjDC,QAFiD,iBAEjDA,QAFiD;AAAA,MAEvCC,MAFuC,iBAEvCA,MAFuC;;AAGzDD,EAAAA,QAAQ;AAHiD,MAIjDE,QAJiD,GAI0BT,KAJ1B,CAIjDS,QAJiD;AAAA,MAIvCC,OAJuC,GAI0BV,KAJ1B,CAIvCU,OAJuC;AAAA,MAI9BC,SAJ8B,GAI0BX,KAJ1B,CAI9BW,SAJ8B;AAAA,MAInBC,MAJmB,GAI0BZ,KAJ1B,CAInBY,MAJmB;AAAA,MAIXC,MAJW,GAI0Bb,KAJ1B,CAIXa,MAJW;AAAA,MAIHC,SAJG,GAI0Bd,KAJ1B,CAIHc,SAJG;AAAA,MAIQC,aAJR,GAI0Bf,KAJ1B,CAIQe,aAJR;AAKzD,MAAMC,WAAW,GAAG,mCAAehB,KAAf,CAApB;AACA,MAAMiB,cAAc,GAAG,sCAAkBlB,YAAY,CAACmB,YAA/B,EAA6ClB,KAA7C,CAAvB;AACA,MAAMmB,YAAY,GAAG,qCAAwBJ,aAAxB,EAAuC;AAC1DK,IAAAA,SAAS,EAAErB,YAAY,CAACM,WADkC;AAE1DgB,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AAF6C,GAAvC,CAArB;;AAPyD,mBAWrC,8BAAmCtB,YAAY,CAACM,WAAhD,EAA6D;AAC/EM,IAAAA,SAAS,EAAEb,qBADoE;AAE/EwB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BX,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFuD;AAQ/EO,IAAAA,GAAG,EAAEpB,OAAO,CAACoB;AARkE,GAA7D,CAXqC;AAAA,MAWjDE,OAXiD,cAWjDA,OAXiD;;AAqBzD,MAAMC,OAAO,GACX,oBAAC,WAAD,EAAiBL,YAAY,CAAC,MAAD;AAAWR,IAAAA,SAAS,EAAEY,OAAO,CAACE;AAA9B,KAAuCR,cAAvC,EAA7B,EACG,0BAAcR,QAAd,IAA0BA,QAA1B,GAAqCC,OADxC,CADF;AAKAF,EAAAA,MAAM;AACN,SAAOgB,OAAP;AACD,CA7BM;;;AA+BPzB,YAAY,CAACM,WAAb,GAA2B,cAA3B;AAEAN,YAAY,CAAC2B,SAAb,qBACKC,uBAAgBC,YAAhB,EADL;AAIA7B,YAAY,CAACmB,YAAb,GAA4BW,MAAM,CAACC,IAAP,CAAY/B,YAAY,CAAC2B,SAAzB,CAA5B;AAEA3B,YAAY,CAACgC,MAAb,GAAsB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEjC,YAAb;AAA2BkC,EAAAA,UAAU,EAAE;AAAvC,CAAvB,CAAtB;AAEA;;;;eAGe,8BAA0DlC,YAA1D,C","sourcesContent":["import * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\n\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface DialogFooterProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\nexport const dialogFooterClassName = 'ui-dialog__footer';\n\nexport type DialogFooterStylesProps = never;\n\nexport const DialogFooter: React.FC<WithAsProp<DialogFooterProps>> &\n  FluentComponentStaticProps<DialogFooterProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DialogFooter.displayName, context.telemetry);\n  setStart();\n  const { children, content, className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: DialogFooter.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<DialogFooterStylesProps>(DialogFooter.displayName, {\n    className: dialogFooterClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const element = (\n    <ElementType {...getA11yProps('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDialogFooter.displayName = 'DialogFooter';\n\nDialogFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nDialogFooter.handledProps = Object.keys(DialogFooter.propTypes) as any;\n\nDialogFooter.create = createShorthandFactory({ Component: DialogFooter, mappedProp: 'content' });\n\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\nexport default withSafeTypeForAs<typeof DialogFooter, DialogFooterProps>(DialogFooter);\n"],"file":"DialogFooter.js"}