"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.menuDividerClassName = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _accessibility = require("@fluentui/accessibility");

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _utils = require("../../utils");

var _types = require("../../types");

var menuDividerClassName = 'ui-menu__divider';
exports.menuDividerClassName = menuDividerClassName;

var MenuDivider =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(MenuDivider, _UIComponent);

  function MenuDivider() {
    (0, _classCallCheck2.default)(this, MenuDivider);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuDivider).apply(this, arguments));
  }

  (0, _createClass2.default)(MenuDivider, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          accessibility = _ref.accessibility;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content;
      return React.createElement(ElementType, (0, _extends2.default)({}, accessibility.attributes.root, _utils.rtlTextContainer.getAttributes({
        forElements: [children, content]
      }), unhandledProps, {
        className: classes.root
      }), (0, _utils.childrenExist)(children) ? children : content);
    }
  }]);
  return MenuDivider;
}(_utils.UIComponent);

(0, _defineProperty2.default)(MenuDivider, "displayName", 'MenuDivider');
(0, _defineProperty2.default)(MenuDivider, "create", void 0);
(0, _defineProperty2.default)(MenuDivider, "deprecated_className", menuDividerClassName);
(0, _defineProperty2.default)(MenuDivider, "defaultProps", {
  as: 'li',
  accessibility: _accessibility.menuDividerBehavior
});
(0, _defineProperty2.default)(MenuDivider, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon(), {
  primary: PropTypes.bool,
  secondary: PropTypes.bool,
  vertical: PropTypes.bool,
  inSubmenu: PropTypes.bool
}));
MenuDivider.create = (0, _utils.createShorthandFactory)({
  Component: MenuDivider,
  mappedProp: 'content'
});
/**
 * A MenuDivider is non-actionable element that visually segments items of Menu.
 */

var _default = (0, _types.withSafeTypeForAs)(MenuDivider);

exports.default = _default;
//# sourceMappingURL=MenuDivider.js.map
