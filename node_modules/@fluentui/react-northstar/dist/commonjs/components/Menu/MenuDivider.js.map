{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerClassName","MenuDivider","ElementType","classes","unhandledProps","accessibility","props","children","content","attributes","root","rtlTextContainer","getAttributes","forElements","UIComponent","as","menuDividerBehavior","commonPropTypes","createCommon","primary","PropTypes","bool","secondary","vertical","inSubmenu","create","Component","mappedProp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAWA;;AAYO,IAAMA,oBAAoB,GAAG,kBAA7B;;;IAEDC,W;;;;;;;;;;;;0CAoBqE;AAAA,UAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,UAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,UAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,UAAjBC,aAAiB,QAAjBA,aAAiB;AAAA,wBACzC,KAAKC,KADoC;AAAA,UAC/DC,QAD+D,eAC/DA,QAD+D;AAAA,UACrDC,OADqD,eACrDA,OADqD;AAGvE,aACE,oBAAC,WAAD,6BACMH,aAAa,CAACI,UAAd,CAAyBC,IAD/B,EAEMC,wBAAiBC,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACN,QAAD,EAAWC,OAAX;AAAf,OAA/B,CAFN,EAGMJ,cAHN;AAIE,QAAA,SAAS,EAAED,OAAO,CAACO;AAJrB,UAMG,0BAAcH,QAAd,IAA0BA,QAA1B,GAAqCC,OANxC,CADF;AAUD;;;EAjCuBM,kB;;8BAApBb,W,iBACiB,a;8BADjBA,W;8BAAAA,W,0BAK0BD,oB;8BAL1BC,W,kBAOkB;AACpBc,EAAAA,EAAE,EAAE,IADgB;AAEpBV,EAAAA,aAAa,EAAEW;AAFK,C;8BAPlBf,W,iCAaCgB,uBAAgBC,YAAhB,E;AACHC,EAAAA,OAAO,EAAEC,SAAS,CAACC,I;AACnBC,EAAAA,SAAS,EAAEF,SAAS,CAACC,I;AACrBE,EAAAA,QAAQ,EAAEH,SAAS,CAACC,I;AACpBG,EAAAA,SAAS,EAAEJ,SAAS,CAACC;;AAmBzBpB,WAAW,CAACwB,MAAZ,GAAqB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEzB,WAAb;AAA0B0B,EAAAA,UAAU,EAAE;AAAtC,CAAvB,CAArB;AAEA;;;;eAGe,8BAA8D1B,WAA9D,C","sourcesContent":["import { Accessibility, menuDividerBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  vertical?: boolean;\n  primary?: boolean;\n  secondary?: boolean;\n  inSubmenu?: boolean;\n}\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\nclass MenuDivider extends UIComponent<WithAsProp<MenuDividerProps>> {\n  static displayName = 'MenuDivider';\n\n  static create: ShorthandFactory<MenuDividerProps>;\n\n  static deprecated_className = menuDividerClassName;\n\n  static defaultProps = {\n    as: 'li',\n    accessibility: menuDividerBehavior as Accessibility,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool,\n    vertical: PropTypes.bool,\n    inSubmenu: PropTypes.bool,\n  };\n\n  renderComponent({ ElementType, classes, unhandledProps, accessibility }) {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport default withSafeTypeForAs<typeof MenuDivider, MenuDividerProps, 'li'>(MenuDivider);\n"],"file":"MenuDivider.js"}