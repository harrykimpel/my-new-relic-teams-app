{"version":3,"sources":["components/Debug/Debug.tsx"],"names":["INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","p","s","r","console","error","_reactInternalFiber","fluentUIDebug","FiberNavigator","fromFiber","setState","domNode","fromDOMNode","findOwner","fiber","state","e","code","keyboardKey","getCode","Escape","stopSelecting","d","altKey","shiftKey","startSelecting","debugDOMNode","target","preventDefault","stopPropagation","debugPanelPosition","process","env","NODE_ENV","isDebugEnabled","window","openDebugPanel","debugReactComponent","$r","mountDocument","props","handleKeyDown","body","handleMouseMove","handleDOMNodeClick","instance","close","positionLeft","positionRight","changeFiber","selectFiber","React","Component","document","PropTypes","object","isRequired"],"mappings":"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","sourcesContent":["import keyboardKey from 'keyboard-key';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport DebugPanel from './DebugPanel';\nimport FiberNavigator from './FiberNavigator';\nimport DebugRect from './DebugRect';\n\n/* eslint-disable no-console */\n\ntype DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\ntype DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nclass Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = keyboardKey.getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Debug;\n"],"file":"Debug.js"}