"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _keyboardKey = _interopRequireDefault(require("keyboard-key"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _reactComponentEventListener = require("@fluentui/react-component-event-listener");

var _utils = require("../../utils");

var _styles = require("@fluentui/styles");

var _DebugPanel = _interopRequireDefault(require("./DebugPanel"));

var _FiberNavigator = _interopRequireDefault(require("./FiberNavigator"));

var _DebugRect = _interopRequireDefault(require("./DebugRect"));

var INITIAL_STATE = {
  fiberNav: null,
  selectedFiberNav: null,
  isSelecting: false
};

var Debug =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Debug, _React$Component);

  function Debug(p, s) {
    var _this;

    (0, _classCallCheck2.default)(this, Debug);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Debug).call(this, p, s));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", INITIAL_STATE);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "debugReactComponent", function (r) {
      if (!r) {
        console.error("No React component selected. Please select a Fluent UI component from the React's Component panel.");
        return;
      }

      if (!r._reactInternalFiber) {
        console.error('React does not provide data for debugging for this component. Try selecting some Fluent UI component.');
        return;
      }

      if (!r.fluentUIDebug) {
        console.error('Not a debuggable component. Try selecting some Fluent UI component.');
        return;
      }

      var fiberNav = _FiberNavigator.default.fromFiber(r._reactInternalFiber);

      _this.setState({
        fiberNav: fiberNav,
        isSelecting: false,
        selectedFiberNav: null
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "debugDOMNode", function (domNode) {
      var fiberNav = _FiberNavigator.default.fromDOMNode(domNode);

      if (!fiberNav) {
        console.error('No fiber for dom node', domNode);
        return;
      }

      fiberNav = fiberNav.findOwner(function (fiber) {
        return fiber.fluentUIDebug;
      });

      if (fiberNav !== _this.state.fiberNav) {
        _this.setState({
          fiberNav: fiberNav
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (e) {
      var code = _keyboardKey.default.getCode(e);

      switch (code) {
        case _keyboardKey.default.Escape:
          _this.stopSelecting();

          break;

        case _keyboardKey.default.d:
          if (e.altKey && e.shiftKey) {
            _this.startSelecting();
          }

          break;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseMove", function (e) {
      _this.debugDOMNode(e.target);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDOMNodeClick", function (e) {
      e.preventDefault();
      e.stopPropagation();

      _this.setState({
        isSelecting: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startSelecting", function () {
      var isSelecting = !_this.state.isSelecting;

      _this.setState(Object.assign({}, !isSelecting && INITIAL_STATE, {
        isSelecting: isSelecting
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "stopSelecting", function () {
      _this.setState(INITIAL_STATE);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectFiber", function (selectedFiberNav) {
      return _this.setState({
        selectedFiberNav: selectedFiberNav
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "changeFiber", function (fiberNav) {
      return _this.setState({
        fiberNav: fiberNav
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "positionRight", function () {
      return _this.setState({
        debugPanelPosition: 'right'
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "positionLeft", function () {
      return _this.setState({
        debugPanelPosition: 'left'
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "close", function () {
      return _this.setState(INITIAL_STATE);
    });

    if (process.env.NODE_ENV !== 'production' && _styles.isDebugEnabled && (0, _utils.isBrowser)()) {
      // eslint-disable-next-line no-undef
      window.openDebugPanel = function () {
        // eslint-disable-next-line no-undef
        _this.debugReactComponent(window.$r);
      };
    }

    return _this;
  }

  (0, _createClass2.default)(Debug, [{
    key: "render",
    value: function render() {
      var mountDocument = this.props.mountDocument;
      var _this$state = this.state,
          fiberNav = _this$state.fiberNav,
          selectedFiberNav = _this$state.selectedFiberNav,
          isSelecting = _this$state.isSelecting,
          debugPanelPosition = _this$state.debugPanelPosition;

      if (process.env.NODE_ENV !== 'production' && _styles.isDebugEnabled) {
        return React.createElement(React.Fragment, null, React.createElement(_reactComponentEventListener.EventListener, {
          listener: this.handleKeyDown,
          target: mountDocument.body,
          type: "keydown"
        }), isSelecting && React.createElement(_reactComponentEventListener.EventListener, {
          listener: this.handleMouseMove,
          target: mountDocument.body,
          type: "mousemove"
        }), isSelecting && fiberNav && fiberNav.domNode && React.createElement(_reactComponentEventListener.EventListener, {
          listener: this.handleDOMNodeClick,
          target: fiberNav.domNode,
          type: "click"
        }), isSelecting && fiberNav && React.createElement(_DebugRect.default, {
          fiberNav: fiberNav
        }), selectedFiberNav && React.createElement(_DebugRect.default, {
          fiberNav: selectedFiberNav
        }), !isSelecting && fiberNav && fiberNav.instance && React.createElement(_DebugPanel.default, {
          fiberNav: fiberNav,
          onActivateDebugSelectorClick: this.startSelecting,
          onClose: this.close // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)
          // cssStyles={stylesForNode(domNode)}
          ,
          debugData: fiberNav.fluentUIDebug,
          position: debugPanelPosition || 'right',
          onPositionLeft: this.positionLeft,
          onPositionRight: this.positionRight,
          onFiberChanged: this.changeFiber,
          onFiberSelected: this.selectFiber
        }));
      }

      return null;
    }
  }]);
  return Debug;
}(React.Component);

(0, _defineProperty2.default)(Debug, "defaultProps", {
  // eslint-disable-next-line no-undef
  mountDocument: (0, _utils.isBrowser)() ? window.document : null
});
(0, _defineProperty2.default)(Debug, "propTypes", {
  mountDocument: PropTypes.object.isRequired
});
var _default = Debug;
exports.default = _default;
//# sourceMappingURL=Debug.js.map
