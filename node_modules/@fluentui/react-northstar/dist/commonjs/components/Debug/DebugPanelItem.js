"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var React = _interopRequireWildcard(require("react"));

var _DebugPanelData = _interopRequireDefault(require("./DebugPanelData"));

var _utils = require("./utils");

var _styles = require("@fluentui/styles");

var DebugPanelItem = function DebugPanelItem(props) {
  var _React$useState = React.useState(''),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      value = _React$useState2[0],
      setValue = _React$useState2[1];

  var propData = props.data,
      valueKey = props.valueKey,
      commentKey = props.commentKey,
      commentKeyPredicate = props.commentKeyPredicate,
      idKey = props.idKey;
  var reversedData = JSON.parse(JSON.stringify(propData)).reverse();
  var data = valueKey ? reversedData.map(function (v) {
    return v[valueKey];
  }) : reversedData;
  var comments = commentKey ? reversedData.map(function (v) {
    return v[commentKey];
  }) : [];
  var ids = idKey ? reversedData.map(function (v) {
    return v[idKey];
  }) : [];
  var mergedThemes = [];
  mergedThemes.push({}); // init

  for (var i = 1; i < data.length; i++) {
    mergedThemes.push((0, _styles.deepmerge)(mergedThemes[i - 1], data[i - 1]));
  }

  return React.createElement(React.Fragment, null, React.createElement("input", {
    onChange: function onChange(e) {
      return setValue(e.target.value);
    },
    style: {
      padding: '2px 4px',
      marginBottom: '4px',
      width: '100%',
      border: '1px solid #ccc',
      background: 'none'
    },
    placeholder: "Filter"
  }), data.map(function (theme, idx) {
    var filteredTheme = value === '' ? theme : (0, _utils.filter)(theme, value);
    return React.createElement("pre", {
      key: idx,
      style: {
        position: 'relative',
        marginBottom: '4px',
        borderTop: idx > 0 ? '1px solid #ddd' : 'none'
      }
    }, ids && ids[idx] && React.createElement("div", {
      style: {
        position: 'absolute',
        right: 0,
        color: '#707070'
      }
    }, ids[idx]), React.createElement(_DebugPanelData.default, {
      data: filteredTheme,
      comments: comments[idx],
      commentKeyPredicate: commentKeyPredicate,
      overrides: mergedThemes[idx],
      highlightKey: value
    }));
  }));
};

var _default = DebugPanelItem;
exports.default = _default;
//# sourceMappingURL=DebugPanelItem.js.map
