"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.hierarchicalTreeClassName = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _without2 = _interopRequireDefault(require("lodash/without"));

var _includes2 = _interopRequireDefault(require("lodash/includes"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _accessibility = require("@fluentui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _HierarchicalTreeItem = _interopRequireDefault(require("./HierarchicalTreeItem"));

var _utils = require("../../utils");

var _types = require("../../types");

var hierarchicalTreeClassName = 'ui-hierarchicaltree';
exports.hierarchicalTreeClassName = hierarchicalTreeClassName;

var HierarchicalTree =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(HierarchicalTree, _AutoControlledCompon);

  function HierarchicalTree() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, HierarchicalTree);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HierarchicalTree)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      expandSiblings: function expandSiblings(e) {
        var _this$props = _this.props,
            items = _this$props.items,
            exclusive = _this$props.exclusive;
        e.preventDefault();
        e.stopPropagation();

        if (exclusive) {
          return;
        }

        var activeIndex = items ? items.reduce(function (acc, item, index) {
          if (item['items']) {
            return [].concat((0, _toConsumableArray2.default)(acc), [index]);
          }

          return acc;
        }, []) : [];

        _this.trySetActiveIndexAndTriggerEvent(e, activeIndex);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "trySetActiveIndexAndTriggerEvent", function (e, activeIndex) {
      _this.setState({
        activeIndex: activeIndex
      });

      (0, _invoke2.default)(_this.props, 'onActiveIndexChange', e, Object.assign({}, _this.props, {
        activeIndex: activeIndex
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeNewIndex", function (treeItemProps) {
      var index = treeItemProps.index,
          items = treeItemProps.items;

      var activeIndexes = _this.getActiveIndexes();

      var exclusive = _this.props.exclusive;

      if (!items) {
        return activeIndexes;
      }

      if (exclusive) return index; // check to see if index is in array, and remove it, if not then add it

      return (0, _includes2.default)(activeIndexes, index) ? (0, _without2.default)(activeIndexes, index) : [].concat((0, _toConsumableArray2.default)(activeIndexes), [index]);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleTreeItemOverrides", function (predefinedProps) {
      return {
        onTitleClick: function onTitleClick(e, treeItemProps) {
          _this.trySetActiveIndexAndTriggerEvent(e, _this.computeNewIndex(treeItemProps));

          (0, _invoke2.default)(predefinedProps, 'onTitleClick', e, treeItemProps);
        }
      };
    });
    return _this;
  }

  (0, _createClass2.default)(HierarchicalTree, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState(_ref) {
      var exclusive = _ref.exclusive;
      return {
        activeIndex: exclusive ? -1 : []
      };
    }
  }, {
    key: "getActiveIndexes",
    value: function getActiveIndexes() {
      var activeIndex = this.state.activeIndex;
      return (0, _isArray2.default)(activeIndex) ? activeIndex : [activeIndex];
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      var _this2 = this;

      var _this$props2 = this.props,
          items = _this$props2.items,
          renderItemTitle = _this$props2.renderItemTitle,
          exclusive = _this$props2.exclusive;
      var activeIndex = this.state.activeIndex;
      var activeIndexes = this.getActiveIndexes();
      return (0, _map2.default)(items, function (item, index) {
        return _HierarchicalTreeItem.default.create(item, {
          defaultProps: function defaultProps() {
            return {
              index: index,
              exclusive: exclusive,
              renderItemTitle: renderItemTitle,
              open: exclusive ? index === activeIndex : (0, _includes2.default)(activeIndexes, index)
            };
          },
          overrideProps: _this2.handleTreeItemOverrides
        });
      });
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref2) {
      var ElementType = _ref2.ElementType,
          classes = _ref2.classes,
          accessibility = _ref2.accessibility,
          unhandledProps = _ref2.unhandledProps,
          styles = _ref2.styles,
          variables = _ref2.variables;
      var children = this.props.children;
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, accessibility.attributes.root, _utils.rtlTextContainer.getAttributes({
        forElements: [children]
      }), unhandledProps, (0, _utils.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), (0, _utils.childrenExist)(children) ? children : this.renderContent());
    }
  }]);
  return HierarchicalTree;
}(_utils.AutoControlledComponent);

(0, _defineProperty2.default)(HierarchicalTree, "create", void 0);
(0, _defineProperty2.default)(HierarchicalTree, "displayName", 'HierarchicalTree');
(0, _defineProperty2.default)(HierarchicalTree, "deprecated_className", hierarchicalTreeClassName);
(0, _defineProperty2.default)(HierarchicalTree, "propTypes", Object.assign({}, _utils.commonPropTypes.createCommon({
  content: false
}), {
  activeIndex: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])]),
  defaultActiveIndex: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])]),
  exclusive: PropTypes.bool,
  items: customPropTypes.collectionShorthand,
  renderItemTitle: PropTypes.func,
  onActiveIndexChange: PropTypes.func
}));
(0, _defineProperty2.default)(HierarchicalTree, "defaultProps", {
  as: 'ul',
  accessibility: _accessibility.hierarchicalTreeBehavior
});
(0, _defineProperty2.default)(HierarchicalTree, "autoControlledProps", ['activeIndex']);
HierarchicalTree.create = (0, _utils.createShorthandFactory)({
  Component: HierarchicalTree,
  mappedArrayProp: 'items'
});
/**
 * (DEPRECATED) A Tree displays data organised in tree hierarchy.
 *
 * @accessibility
 * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.
 */

var _default = (0, _types.withSafeTypeForAs)(HierarchicalTree);

exports.default = _default;
//# sourceMappingURL=HierarchicalTree.js.map
