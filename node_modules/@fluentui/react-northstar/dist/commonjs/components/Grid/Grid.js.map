{"version":3,"sources":["components/Grid/Grid.tsx"],"names":["gridClassName","Grid","accessibility","ElementType","classes","unhandledProps","props","children","content","root","rtlTextContainer","getAttributes","forElements","attributes","UIComponent","commonPropTypes","createCommon","columns","PropTypes","oneOfType","string","number","customPropTypes","every","disallow","arrayOf","nodeContent","rows","as"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAUA;;AAgBO,IAAMA,aAAa,GAAG,SAAtB;;;IAEDC,I;;;;;;;;;;;;0CAqB+G;AAAA,UAAjGC,aAAiG,QAAjGA,aAAiG;AAAA,UAAlFC,WAAkF,QAAlFA,WAAkF;AAAA,UAArEC,OAAqE,QAArEA,OAAqE;AAAA,UAA5DC,cAA4D,QAA5DA,cAA4D;AAAA,wBACnF,KAAKC,KAD8E;AAAA,UACzGC,QADyG,eACzGA,QADyG;AAAA,UAC/FC,OAD+F,eAC/FA,OAD+F;AAGjH,aACE,oBAAC,WAAD;AACE,QAAA,SAAS,EAAEJ,OAAO,CAACK;AADrB,SAEMC,wBAAiBC,aAAjB,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAACL,QAAD,EAAWC,OAAX;AAAf,OAA/B,CAFN,EAGMN,aAAa,CAACW,UAAd,CAAyBJ,IAH/B,EAIMJ,cAJN,GAMG,0BAAcE,QAAd,IAA0BA,QAA1B,GAAqCC,OANxC,CADF;AAUD;;;EAlCgBM,kB;AAqCnB;;;;;8BArCMb,I,iBACiB,M;8BADjBA,I,0BAG0BD,a;8BAH1BC,I,iCAMCc,uBAAgBC,YAAhB,CAA6B;AAC9BR,EAAAA,OAAO,EAAE;AADqB,CAA7B,C;AAGHS,EAAAA,OAAO,EAAEC,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,MAA7B,CAApB,C;AACTb,EAAAA,OAAO,EAAEc,eAAe,CAACC,KAAhB,CAAsB,CAC7BD,eAAe,CAACE,QAAhB,CAAyB,CAAC,UAAD,CAAzB,CAD6B,EAE7BN,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACO,OAAV,CAAkBH,eAAe,CAACI,WAAlC,CAAD,EAAiDJ,eAAe,CAACI,WAAjE,CAApB,CAF6B,CAAtB,C;AAITC,EAAAA,IAAI,EAAET,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,MAA7B,CAApB;;8BAdJpB,I,kBAiByC;AAC3C2B,EAAAA,EAAE,EAAE;AADuC,C;;eAuBhC,8BAA0C3B,IAA1C,C","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  UIComponent,\n  childrenExist,\n  RenderResultConfig,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface GridProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available gridBehavior, gridHorizontalBehavior\n   * */\n  accessibility?: Accessibility;\n\n  /** The columns of the grid with a space-separated list of values. The values represent the track size, and the space between them represents the grid line. */\n  columns?: string | number;\n\n  /** The rows of the grid with a space-separated list of values. The values represent the track size, and the space between them represents the grid line. */\n  rows?: string | number;\n}\n\nexport const gridClassName = 'ui-grid';\n\nclass Grid extends UIComponent<WithAsProp<GridProps>> {\n  static displayName = 'Grid';\n\n  static deprecated_className = gridClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    content: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent]),\n    ]),\n    rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps: WithAsProp<GridProps> = {\n    as: 'div',\n  };\n\n  renderComponent({ accessibility, ElementType, classes, unhandledProps }: RenderResultConfig<any>): React.ReactNode {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        className={classes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\n/**\n * A Grid is a layout component that harmonizes negative space, by controlling both the row and column alignment.\n */\nexport default withSafeTypeForAs<typeof Grid, GridProps>(Grid);\n"],"file":"Grid.js"}