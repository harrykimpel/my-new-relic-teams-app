{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":["tooltipClassName","Tooltip","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibility","align","children","content","flipBoundary","mountNode","mouseLeaveDelay","offset","overflowBoundary","pointing","position","positionFixed","target","trigger","unstable_pinned","defaultValue","defaultOpen","value","open","initialValue","setOpen","contentRef","useRef","pointerTargetRef","triggerRef","closeTimeoutId","contentId","current","getA11Props","actionHandlers","close","e","setTooltipOpen","stopPropagation","preventDefault","mapPropsToBehavior","triggerAriaLabel","getContentOverrideProps","predefinedProps","onMouseEnter","onMouseLeave","renderPopperChildren","popperProps","tooltipContent","TooltipContent","create","defaultProps","placement","pointerRef","generateKey","overrideProps","shouldStayOpen","relatedTarget","trySetOpen","newValue","newOpen","clearTimeout","defaultView","setTimeout","triggerNode","triggerElement","Children","only","triggerProps","onFocus","args","onBlur","element","cloneElement","rtl","tooltipAsLabelBehavior","propTypes","commonPropTypes","createCommon","as","PropTypes","oneOf","ALIGNMENTS","bool","customPropTypes","domNode","number","oneOfType","func","arrayOf","onOpenChange","POSITIONS","every","disallow","shorthandAllowingChildren","object","handledProps","Object","keys","Content","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, tooltipAsLabelBehavior, TooltipBehaviorProps } from '@fluentui/accessibility';\nimport { useAccessibility, useAutoControlled, useTelemetry } from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport {\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  StyledComponentProps,\n  commonPropTypes,\n  isFromKeyboard,\n  setWhatInputSource,\n  getOrGenerateIdFromShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperChildrenProps,\n  Alignment,\n  Position,\n} from '../../utils/positioner';\nimport PortalInner from '../Portal/PortalInner';\nimport TooltipContent, { TooltipContentProps } from './TooltipContent';\n\nexport interface TooltipProps\n  extends StyledComponentProps<TooltipProps>,\n    ChildrenComponentProps<React.ReactElement>,\n    ContentComponentProps<ShorthandValue<TooltipContentProps>>,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default tooltipBehavior\n   * @available tooltipAsLabelBehavior\n   * */\n  accessibility?: Accessibility<TooltipBehaviorProps>;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the tooltip should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the tooltip will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Defines whether tooltip is displayed. */\n  open?: boolean;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: (e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent, data: TooltipProps) => void;\n\n  /** A tooltip can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as tooltip's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the tooltip is defined. */\n  trigger?: JSX.Element;\n}\n\nexport const tooltipClassName = 'ui-tooltip';\n\n/**\n * A Tooltip displays additional non-modal information on top of its target element.\n * Tooltip doesn't receive focus and cannot contain focusable elements.\n *\n * @accessibility\n * Implements [ARIA Tooltip](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) design pattern.\n */\nconst Tooltip: React.FC<TooltipProps> &\n  FluentComponentStaticProps<TooltipProps> & {\n    Content: typeof TooltipContent;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Tooltip.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    children,\n    content,\n    flipBoundary,\n    mountNode,\n    mouseLeaveDelay,\n    offset,\n    overflowBoundary,\n    pointing,\n    position,\n    positionFixed,\n    target,\n    trigger,\n    unstable_pinned,\n  } = props;\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n\n    initialValue: false,\n  });\n\n  const contentRef = React.useRef<HTMLElement>();\n  const pointerTargetRef = React.useRef<HTMLDivElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const closeTimeoutId = React.useRef<number>();\n  // TODO: Consider `getOrGenerateIdFromShorthand()` as hook and make it SSR safe\n  const contentId = React.useRef<string>();\n  contentId.current = getOrGenerateIdFromShorthand('tooltip-content-', content, contentId.current);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      close: e => {\n        setTooltipOpen(false, e);\n        e.stopPropagation();\n        e.preventDefault();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-describedby': props['aria-describedby'],\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n      contentId: contentId.current,\n      triggerAriaLabel: trigger && trigger.props['aria-label'],\n      open,\n    }),\n  });\n\n  const getContentOverrideProps = (\n    predefinedProps: TooltipContentProps,\n  ): TooltipContentProps & Pick<React.DOMAttributes<HTMLDivElement>, 'onMouseEnter' | 'onMouseLeave'> => ({\n    onMouseEnter: (e: React.MouseEvent) => {\n      setTooltipOpen(true, e);\n      _.invoke(predefinedProps, 'onMouseEnter', e);\n    },\n    onMouseLeave: (e: React.MouseEvent) => {\n      setTooltipOpen(false, e);\n      _.invoke(predefinedProps, 'onMouseLeave', e);\n    },\n  });\n\n  const renderPopperChildren = (popperProps: PopperChildrenProps) => {\n    const tooltipContent = TooltipContent.create(content, {\n      defaultProps: () =>\n        getA11Props('tooltip', {\n          open,\n          placement: popperProps.placement,\n          pointing,\n          pointerRef: pointerTargetRef,\n        }),\n      generateKey: false,\n      overrideProps: getContentOverrideProps,\n    });\n\n    return tooltipContent ? <Ref innerRef={contentRef}>{tooltipContent}</Ref> : null;\n  };\n\n  const shouldStayOpen = (e: React.FocusEvent) =>\n    _.invoke(e, 'currentTarget.contains', e.relatedTarget) || _.invoke(contentRef.current, 'contains', e.relatedTarget);\n\n  const trySetOpen = (newValue: boolean, e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent) => {\n    setOpen(newValue);\n    _.invoke(props, 'onOpenChange', e, { ...props, ...{ open: newValue } });\n  };\n\n  const setTooltipOpen = (newOpen: boolean, e: React.MouseEvent | React.KeyboardEvent) => {\n    clearTimeout(closeTimeoutId.current);\n\n    if (newOpen) {\n      trySetOpen(true, e);\n    } else {\n      closeTimeoutId.current = context.target.defaultView.setTimeout(() => {\n        trySetOpen(false, e);\n      }, mouseLeaveDelay);\n    }\n  };\n\n  const triggerNode: React.ReactElement | undefined = childrenExist(children) ? children : trigger;\n  const triggerElement = triggerNode && React.Children.only(triggerNode);\n\n  const triggerProps: React.HTMLAttributes<HTMLElement> = {\n    onFocus: (e, ...args) => {\n      if (isFromKeyboard()) {\n        trySetOpen(true, e);\n      }\n      _.invoke(triggerElement, 'props.onFocus', e, ...args);\n    },\n    onBlur: (e, ...args) => {\n      if (!shouldStayOpen(e)) {\n        trySetOpen(false, e);\n      }\n      _.invoke(triggerElement, 'props.onBlur', e, ...args);\n    },\n    onMouseEnter: (e, ...args) => {\n      setTooltipOpen(true, e);\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(triggerElement, 'props.onMouseEnter', e, ...args);\n    },\n    onMouseLeave: (e, ...args) => {\n      setTooltipOpen(false, e);\n      _.invoke(triggerElement, 'props.onMouseLeave', e, ...args);\n    },\n  };\n\n  const element = (\n    <>\n      {triggerElement && (\n        <Ref innerRef={triggerRef}>{React.cloneElement(triggerElement, getA11Props('trigger', triggerProps))}</Ref>\n      )}\n      <PortalInner mountNode={mountNode}>\n        <Popper\n          align={align}\n          flipBoundary={flipBoundary}\n          offset={offset}\n          overflowBoundary={overflowBoundary}\n          pointerTargetRef={pointerTargetRef}\n          position={position}\n          positionFixed={positionFixed}\n          enabled={open}\n          rtl={context.rtl}\n          targetRef={target || triggerRef}\n          children={renderPopperChildren}\n          unstable_pinned={unstable_pinned}\n        />\n      </PortalInner>\n    </>\n  );\n  setEnd();\n\n  return element;\n};\n\nTooltip.displayName = 'Tooltip';\n\nTooltip.defaultProps = {\n  align: 'center',\n  position: 'above',\n  mouseLeaveDelay: 10,\n  pointing: true,\n  accessibility: tooltipAsLabelBehavior,\n};\nTooltip.propTypes = {\n  ...commonPropTypes.createCommon({\n    as: false,\n    content: false,\n  }),\n  align: PropTypes.oneOf<Alignment>(ALIGNMENTS),\n  children: PropTypes.element,\n  defaultOpen: PropTypes.bool,\n  mountNode: customPropTypes.domNode,\n  mouseLeaveDelay: PropTypes.number,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  open: PropTypes.bool,\n  onOpenChange: PropTypes.func,\n  pointing: PropTypes.bool,\n  position: PropTypes.oneOf<Position>(POSITIONS),\n  positionFixed: PropTypes.bool,\n  target: customPropTypes.domNode,\n  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.element]),\n  content: customPropTypes.shorthandAllowingChildren,\n  unstable_pinned: PropTypes.bool,\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n};\nTooltip.handledProps = Object.keys(Tooltip.propTypes) as any;\n\nTooltip.Content = TooltipContent;\n\nTooltip.create = createShorthandFactory({ Component: Tooltip, mappedProp: 'content' });\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}