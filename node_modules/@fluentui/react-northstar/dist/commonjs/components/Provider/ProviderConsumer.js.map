{"version":3,"sources":["components/Provider/ProviderConsumer.tsx"],"names":["ProviderConsumer","render","context","theme","displayName","propTypes","PropTypes","func","isRequired"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAYA;;;AAGA,IAAMA,gBAAgE,GAAG,SAAnEA,gBAAmE;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SACvE,oBAAC,oBAAD,QAAY,UAACC,OAAD;AAAA,WAAsCD,MAAM,CAACC,OAAO,CAACC,KAAT,CAA5C;AAAA,GAAZ,CADuE;AAAA,CAAzE;;AAIAH,gBAAgB,CAACI,WAAjB,GAA+B,kBAA/B;AACAJ,gBAAgB,CAACK,SAAjB,GAA6B;AAC3BJ,EAAAA,MAAM,EAAEK,SAAS,CAACC,IAAV,CAAeC;AADI,CAA7B;eAIeR,gB","sourcesContent":["import { ThemePrepared } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { FelaTheme } from 'react-fela';\n\nimport { ProviderContextPrepared } from '../../types';\n\nexport interface ProviderConsumerProps {\n  /**\n   * Uses the function children pattern to access theme.\n   * `theme.siteVariables` contains the siteVariables passed from the nearest Provider.\n   */\n  render: (theme: ThemePrepared) => React.ReactNode;\n}\n\n/**\n * A ProviderConsumer is used to consume Fluent UI context from Provider.\n */\nconst ProviderConsumer: React.FunctionComponent<ProviderConsumerProps> = ({ render }) => (\n  <FelaTheme>{(context: ProviderContextPrepared) => render(context.theme)}</FelaTheme>\n);\n\nProviderConsumer.displayName = 'ProviderConsumer';\nProviderConsumer.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n\nexport default ProviderConsumer;\n"],"file":"ProviderConsumer.js"}