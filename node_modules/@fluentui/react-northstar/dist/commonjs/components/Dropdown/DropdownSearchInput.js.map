{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["dropdownSearchInputClassName","dropdownSearchInputSlotClassNames","input","wrapper","DropdownSearchInput","props","context","React","useContext","ThemeContext","displayName","telemetry","setStart","setEnd","accessibilityComboboxProps","accessibilityInputProps","inputRef","inline","placeholder","disabled","className","design","styles","variables","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","resolvedStyles","handleFocus","e","handleInputKeyDown","handleInputBlur","handleKeyUp","element","root","type","onBlur","onKeyDown","propTypes","commonPropTypes","createCommon","accessibility","children","content","PropTypes","object","bool","customPropTypes","ref","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport {\n  ComponentEventHandler,\n  WithAsProp,\n  withSafeTypeForAs,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport Input from '../Input/Input';\nimport { useTelemetry, useStyles, useUnhandledProps } from '@fluentui/react-bindings';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nexport const dropdownSearchInputClassName = 'ui-dropdown__searchinput';\nexport const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames = {\n  input: `${dropdownSearchInputClassName}__input`,\n  wrapper: `${dropdownSearchInputClassName}__wrapper`,\n};\n\nexport type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;\n\nexport const DropdownSearchInput: React.FC<WithAsProp<DropdownSearchInputProps>> &\n  FluentComponentStaticProps<DropdownSearchInputProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DropdownSearchInput.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibilityComboboxProps,\n    accessibilityInputProps,\n    inputRef,\n    inline,\n    placeholder,\n    disabled,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(DropdownSearchInput.handledProps, props);\n\n  const { styles: resolvedStyles } = useStyles<DropdownSearchInputStylesProps>(DropdownSearchInput.displayName, {\n    className: dropdownSearchInputClassName,\n    mapPropsToStyles: () => ({ inline }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputKeyDown', e, props);\n  };\n\n  const handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputBlur', e, props);\n  };\n\n  const handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyUp', e, props);\n  };\n\n  const element = (\n    <Input\n      disabled={disabled}\n      inputRef={inputRef}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      {...unhandledProps}\n      wrapper={{\n        className: dropdownSearchInputSlotClassNames.wrapper,\n        styles: resolvedStyles.root,\n        ...accessibilityComboboxProps,\n        ...unhandledProps.wrapper,\n      }}\n      input={{\n        type: 'text',\n        className: dropdownSearchInputSlotClassNames.input,\n        styles: resolvedStyles.input,\n        placeholder,\n        onBlur: handleInputBlur,\n        onKeyDown: handleInputKeyDown,\n        ...accessibilityInputProps,\n        ...unhandledProps.input,\n      }}\n    />\n  );\n  setEnd();\n  return element;\n};\n\nDropdownSearchInput.displayName = 'DropdownSearchInput';\n\nDropdownSearchInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nDropdownSearchInput.handledProps = Object.keys(DropdownSearchInput.propTypes) as any;\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport default withSafeTypeForAs<typeof DropdownSearchInput, DropdownSearchInputProps>(DropdownSearchInput);\n"],"file":"DropdownSearchInput.js"}