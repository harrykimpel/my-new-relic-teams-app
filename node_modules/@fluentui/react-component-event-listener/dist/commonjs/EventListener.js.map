{"version":3,"sources":["EventListener.ts"],"names":["EventListener","props","displayName","propTypes","process","env","NODE_ENV","capture","PropTypes","bool","listener","func","isRequired","target","object","targetRef","shape","current","type","string","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAGA,SAASA,aAAT,CAA6CC,KAA7C,EAA6E;AAC3E,iCAAiBA,KAAjB;AAEA,SAAO,IAAP;AACD;;AAEDD,aAAa,CAACE,WAAd,GAA4B,eAA5B,C,CACA;;AACAF,aAAa,CAACG,SAAd,GACEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI;AACEC,EAAAA,OAAO,EAAEC,SAAS,CAACC,IADrB;AAEEC,EAAAA,QAAQ,EAAEF,SAAS,CAACG,IAAV,CAAeC,UAF3B;AAGEC,EAAAA,MAAM,EAAEL,SAAS,CAACM,MAHpB;AAIEC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,KAAV,CAAgB;AACzBC,IAAAA,OAAO,EAAET,SAAS,CAACM;AADM,GAAhB,CAJb;AAOEI,EAAAA,IAAI,EAAEV,SAAS,CAACW,MAAV,CAAiBP;AAPzB,CADJ,GAUI,EAXN;AAYAZ,aAAa,CAACoB,YAAd,GAA6B;AAC3Bb,EAAAA,OAAO,EAAE;AADkB,CAA7B;eAIeP,a","sourcesContent":["import * as PropTypes from 'prop-types';\n\nimport useEventListener from './useEventListener';\nimport { EventListenerOptions, EventTypes, Target, TargetRef } from './types';\n\nfunction EventListener<T extends EventTypes>(props: EventListenerOptions<T>) {\n  useEventListener(props);\n\n  return null;\n}\n\nEventListener.displayName = 'EventListener';\n// TODO: use Babel plugin for this\nEventListener.propTypes =\n  process.env.NODE_ENV !== 'production'\n    ? {\n        capture: PropTypes.bool,\n        listener: PropTypes.func.isRequired,\n        target: PropTypes.object as PropTypes.Validator<Target>,\n        targetRef: PropTypes.shape({\n          current: PropTypes.object,\n        }) as PropTypes.Validator<TargetRef>,\n        type: PropTypes.string.isRequired as PropTypes.Validator<EventTypes>,\n      }\n    : {};\nEventListener.defaultProps = {\n  capture: false,\n};\n\nexport default EventListener;\n"],"file":"EventListener.js"}