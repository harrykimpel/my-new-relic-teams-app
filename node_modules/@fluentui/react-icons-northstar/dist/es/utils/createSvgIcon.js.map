{"version":3,"sources":["utils/createSvgIcon.ts"],"names":["React","ThemeContext","useStyles","getUnhandledProps","svgIconClassName","svgIconDisplayName","svgIconHandledProps","createSvgIcon","svg","displayName","handledProps","Component","props","context","useContext","alt","ariaLabel","bordered","circular","className","design","disabled","outline","rotate","size","styles","variables","xSpacing","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","unhandledProps","createElement","role","undefined","root"],"mappings":"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","sourcesContent":["import * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport { StylesContextValue, useStyles, getUnhandledProps } from '@fluentui/react-bindings';\nimport { SvgIconCreateFnParams, SvgIconProps } from './types';\n\nexport const svgIconClassName = 'ui-icon';\nexport const svgIconDisplayName = 'SvgIcon';\n\nexport const svgIconHandledProps: (keyof SvgIconProps)[] = [\n  'bordered',\n  'className',\n  'circular',\n  'design',\n  'disabled',\n  'outline',\n  'size',\n  'rotate',\n  'styles',\n  'variables',\n  'xSpacing',\n];\n\nconst createSvgIcon = <TProps = {}>({ svg, displayName, handledProps = [] }: SvgIconCreateFnParams<TProps>) => {\n  const Component: React.FC<React.HTMLAttributes<HTMLSpanElement> & TProps & SvgIconProps> & {\n    handledProps: (keyof (TProps & SvgIconProps))[];\n  } = props => {\n    const context: StylesContextValue = React.useContext(ThemeContext);\n\n    const {\n      alt,\n      'aria-label': ariaLabel,\n      bordered,\n      circular,\n      className,\n      design,\n      disabled,\n      outline,\n      rotate = 0,\n      size = 'medium',\n      styles,\n      variables,\n      xSpacing,\n    } = props;\n\n    const { classes } = useStyles(svgIconDisplayName, {\n      className: svgIconClassName,\n      mapPropsToStyles: () => ({\n        bordered,\n        circular,\n        disabled,\n        outline,\n        rotate,\n        size,\n        xSpacing,\n      }),\n      mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = getUnhandledProps([...svgIconHandledProps, ...handledProps], props);\n\n    return React.createElement(\n      'span',\n      {\n        role: 'img',\n        'aria-hidden': alt || ariaLabel ? undefined : 'true',\n        'aria-label': ariaLabel,\n        className: classes.root,\n        ...unhandledProps,\n      },\n      svg({ classes, rtl: context.rtl, props }),\n    );\n  };\n\n  Component.displayName = displayName;\n  Component.handledProps = [...svgIconHandledProps, ...handledProps];\n\n  return Component;\n};\n\nexport default createSvgIcon;\n"],"file":"createSvgIcon.js"}