import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import * as React from 'react';
import NestingContext from '../NestingContext';
import RefStack from '../utils/RefStack';
var registrySet = new RefStack();

var useNestingRoot = function useNestingRoot() {
  var _React$useState = React.useState(registrySet),
      _React$useState2 = _slicedToArray(_React$useState, 1),
      registry = _React$useState2[0];

  var parentRef = React.useRef(null);
  var nestedProps = React.useMemo(function () {
    return {
      value: {
        getContextRefs: registry.getContextRefs,
        register: registry.register,
        unregister: registry.unregister
      }
    };
  }, []);
  var getRefs = React.useCallback(function () {
    return registry.getContextRefs(parentRef);
  }, []);
  React.useEffect(function () {
    registry.register(parentRef);
    return function () {
      return registry.unregister(parentRef);
    };
  }, []);
  return {
    NestedComponent: NestingContext.Provider,
    nestedProps: nestedProps,
    getRefs: getRefs,
    isRoot: true,
    ref: parentRef
  };
};

export default useNestingRoot;
//# sourceMappingURL=useNestingRoot.js.map
