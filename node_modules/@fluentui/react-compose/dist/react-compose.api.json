{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@fluentui/react-compose!",
  "docComment": "",
  "name": "@fluentui/react-compose",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluentui/react-compose!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react-compose!ComponentWithAs:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ComponentWithAs<E extends "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "'div'"
            },
            {
              "kind": "Content",
              "text": ", P = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "ComponentWithAs",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluentui/react-compose!ComponentWithAs:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "<EE extends "
                },
                {
                  "kind": "Reference",
                  "text": "React.ElementType",
                  "canonicalReference": "@types/react!~React.ElementType:type"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Content",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">(props: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PropsOfElement",
                  "canonicalReference": "@fluentui/react-compose!PropsOfElement:type"
                },
                {
                  "kind": "Content",
                  "text": "<EE>, 'as' | keyof P> & {\n        as?: EE;\n    } & P"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EE",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react-compose!ComponentWithAs#defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<P & {\n        as: E;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react-compose!ComponentWithAs#displayName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react-compose!ComponentWithAs#propTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.WeakValidationMap",
                  "canonicalReference": "@types/react!~React.WeakValidationMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<P> & {\n        as: "
                },
                {
                  "kind": "Reference",
                  "text": "React.Requireable",
                  "canonicalReference": "@types/react!~React.Requireable:type"
                },
                {
                  "kind": "Content",
                  "text": "<string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any)>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "propTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/react-compose!compose:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function compose<T extends "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": ", InputProps, InputStylesProps, ParentProps, ParentStylesProps>(input: "
            },
            {
              "kind": "Reference",
              "text": "Input",
              "canonicalReference": "@fluentui/react-compose!Input:type"
            },
            {
              "kind": "Content",
              "text": "<T, InputProps>"
            },
            {
              "kind": "Content",
              "text": ", inputOptions?: "
            },
            {
              "kind": "Reference",
              "text": "ComposeOptions",
              "canonicalReference": "@fluentui/react-compose!ComposeOptions:type"
            },
            {
              "kind": "Content",
              "text": "<InputProps, InputStylesProps, ParentStylesProps>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ComponentWithAs",
              "canonicalReference": "@fluentui/react-compose!ComponentWithAs:interface"
            },
            {
              "kind": "Content",
              "text": "<T, InputProps & ParentProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "inputOptions",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputStylesProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ParentProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ParentStylesProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "compose"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!ComposedComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComposedComponent<P = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<P> & {\n    fluentComposeConfig: "
            },
            {
              "kind": "Reference",
              "text": "ComposePreparedOptions",
              "canonicalReference": "@fluentui/react-compose!ComposePreparedOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ComposedComponent",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!ComposeOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComposeOptions<InputProps = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", InputStylesProps = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", ParentStylesProps = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    className?: string;\n    displayName?: string;\n    mapPropsToStylesProps?: (props: ParentStylesProps & InputProps) => InputStylesProps;\n    handledProps?: (keyof InputProps | 'as')[];\n    overrideStyles?: boolean;\n    slots?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mapPropsToSlotProps?: (props: InputProps) => "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, object>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ComposeOptions",
          "typeParameters": [
            {
              "typeParameterName": "InputProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "InputStylesProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "ParentStylesProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!ComposePreparedOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComposePreparedOptions<Props = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    className: string;\n    displayName: string;\n    displayNames: string[];\n    mapPropsToStylesPropsChain: ((props: object) => object)[];\n    render: "
            },
            {
              "kind": "Reference",
              "text": "ComposeRenderFunction",
              "canonicalReference": "@fluentui/react-compose!ComposeRenderFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    handledProps: (keyof Props)[];\n    overrideStyles: boolean;\n    slots: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mapPropsToSlotPropsChain: ((props: Props) => "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, object>)[];\n    resolveSlotProps: <P>(props: P) => "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, object>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ComposePreparedOptions",
          "typeParameters": [
            {
              "typeParameterName": "Props",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!ComposeRenderFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComposeRenderFunction<T extends "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "'div'"
            },
            {
              "kind": "Content",
              "text": ", P = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(props: P, ref: "
            },
            {
              "kind": "Reference",
              "text": "React.Ref",
              "canonicalReference": "@types/react!~React.Ref:type"
            },
            {
              "kind": "Content",
              "text": "<T>, composeOptions: "
            },
            {
              "kind": "Reference",
              "text": "ComposePreparedOptions",
              "canonicalReference": "@fluentui/react-compose!ComposePreparedOptions:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "React.ReactElement",
              "canonicalReference": "@types/react!~React.ReactElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ComposeRenderFunction",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!Input:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Input<T extends "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "'div'"
            },
            {
              "kind": "Content",
              "text": ", P = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "InputComposeComponent",
              "canonicalReference": "@fluentui/react-compose!InputComposeComponent:type"
            },
            {
              "kind": "Content",
              "text": "<P> | "
            },
            {
              "kind": "Reference",
              "text": "ComposeRenderFunction",
              "canonicalReference": "@fluentui/react-compose!ComposeRenderFunction:type"
            },
            {
              "kind": "Content",
              "text": "<T, P & {\n    as?: "
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Input",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!InputComposeComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputComposeComponent<P = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<P> & {\n    fluentComposeConfig?: "
            },
            {
              "kind": "Reference",
              "text": "ComposePreparedOptions",
              "canonicalReference": "@fluentui/react-compose!ComposePreparedOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputComposeComponent",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react-compose!PropsOfElement:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PropsOfElement<E extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "JSX.IntrinsicElements",
              "canonicalReference": "@types/react!~__global.JSX.IntrinsicElements:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "React.JSXElementConstructor",
              "canonicalReference": "@types/react!~React.JSXElementConstructor:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "JSX.LibraryManagedAttributes",
              "canonicalReference": "@types/react!~__global.JSX.LibraryManagedAttributes:type"
            },
            {
              "kind": "Content",
              "text": "<E, "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentPropsWithRef",
              "canonicalReference": "@types/react!~React.ComponentPropsWithRef:type"
            },
            {
              "kind": "Content",
              "text": "<E>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PropsOfElement",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          }
        }
      ]
    }
  ]
}
