{"version":3,"sources":["FocusZone/FocusZone.tsx"],"names":["TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","_allInstances","_outerZones","Set","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","FocusZone","size","props","current","elem","_root","ReactDOM","findDOMNode","setParkedFocus","ev","onActiveElementChanged","stopFocusPropagation","shouldFocusInnerElementWhenReceivedFocus","defaultTabbableElement","newActiveElement","isImmediateDescendant","isImmediateDescendantOfZone","target","parentElement","maybeElementToFocus","focus","_activeElement","setFocusAlignment","updateTabIndexes","stopPropagation","keyboardKey","getCode","Tab","forEach","zone","disabled","path","push","length","pop","setActiveElement","direction","shouldEnterInnerZone","pagingSupportDisabled","undefined","doc","onKeyDown","activeElement","_isInnerZone","isDefaultPrevented","innerZone","getFirstInnerZone","focusElement","firstChild","altKey","Spacebar","tryInvokeClickForFocusable","ArrowLeft","FocusZoneDirection","vertical","preventDefaultWhenHandled","moveFocusLeft","ArrowRight","moveFocusRight","ArrowUp","horizontal","moveFocusUp","ArrowDown","moveFocusDown","PageDown","moveFocusPaging","PageUp","handleTabKey","FocusZoneTabbableElements","all","inputOnly","isElementInput","focusChanged","_processingTabKey","shouldWrapFocus","shiftKey","tabWithDirection","isRtl","shouldResetActiveElementWhenTabFromZone","Home","isContentEditableElement","shouldInputLoseFocus","End","lastChild","Enter","preventDefault","isForward","activeRect","targetRect","leftAlignment","_focusAlignment","left","targetRectTop","Math","floor","top","activeRectBottom","bottom","targetRectBottom","activeRectTop","isValidCandidateOnpagingDown","isValidCandidateOnpagingUp","width","abs","_id","setRef","windowElement","body","nodeType","add","addEventListener","_onKeyDownCapture","_onBlur","getDocument","querySelector","shouldFocusOnMount","_lastIndexPath","preventFocusRestoration","elementToFocus","delete","removeEventListener","_defaultFocusElement","className","ElementType","unhandledProps","propTypes","evaluateFocusBeforeRender","_onKeyDown","_onFocus","_onMouseDown","children","forceIntoFirstElement","getAttribute","IS_FOCUSABLE_ATTRIBUTE","ownerZoneElement","getOwnerZone","ownerZone","FOCUSZONE_ID_ATTRIBUTE","element","shouldReceiveFocus","focusedElement","shouldRestoreFocus","isParked","_isParked","allowFocusRoot","_parkedTabIndex","setAttribute","removeAttribute","forceAlignemnt","previousActiveElement","tabIndex","forRootElement","rootElement","child","firstElementChild","match","nextElementSibling","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","getBoundingClientRect","elementDistance","isCircularNavigation","lastElementChild","targetTop","moveFocus","distance","shouldWrap","topBottomComparison","parseFloat","toFixed","right","scrollableParent","targetBottom","pagesize","clientHeight","getHorizontalDistanceFromCenter","isElementPassedPageSizeOnPagingDown","isElementPassedPageSizeOnPagingUp","isHorizontal","isVertical","rect","height","onElement","childNodes","childIndex","tagName","toLowerCase","type","indexOf","selectionStart","selectionEnd","isRangeSelected","inputValue","value","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","noWrapDataAttribute","checkForNoWrap","React","Component","PropTypes","string","number","func","bool","as","elementType","onFocus"],"mappings":"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","sourcesContent":["import { FocusZoneDirection, FocusZoneTabbableElements, IS_FOCUSABLE_ATTRIBUTE } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport * as keyboardKey from 'keyboard-key';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  elementContains,\n  findScrollableParent,\n  getDocument,\n  getParent,\n  getWindow,\n  shouldWrapFocus,\n} from '@uifabric/utilities';\n\nimport getElementType from '../utils/getElementType';\nimport getUnhandledProps from '../utils/getUnhandledProps';\nimport { FocusZoneProps, IFocusZone } from './FocusZone.types';\nimport {\n  getNextElement,\n  getPreviousElement,\n  isElementFocusZone,\n  isElementFocusSubZone,\n  isElementTabbable,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  FOCUSZONE_ID_ATTRIBUTE,\n} from './focusUtilities';\n\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\n\nconst _outerZones: Set<FocusZone> = new Set();\n\ninterface Point {\n  left: number;\n  top: number;\n}\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport default class FocusZone extends React.Component<FocusZoneProps> implements IFocusZone {\n  static propTypes = {\n    className: PropTypes.string,\n    direction: PropTypes.number,\n    defaultTabbableElement: PropTypes.func,\n    shouldFocusOnMount: PropTypes.bool,\n    shouldResetActiveElementWhenTabFromZone: PropTypes.bool,\n    shouldFocusInnerElementWhenReceivedFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    as: PropTypes.elementType as PropTypes.Requireable<React.ElementType>,\n    isCircularNavigation: PropTypes.bool,\n    shouldEnterInnerZone: PropTypes.func,\n    onActiveElementChanged: PropTypes.func,\n    shouldReceiveFocus: PropTypes.func,\n    handleTabKey: PropTypes.number,\n    shouldInputLoseFocusOnArrowKey: PropTypes.func,\n    stopFocusPropagation: PropTypes.bool,\n    onFocus: PropTypes.func,\n    preventDefaultWhenHandled: PropTypes.bool,\n    isRtl: PropTypes.bool,\n    preventFocusRestoration: PropTypes.bool,\n    pagingSupportDisabled: PropTypes.bool,\n  };\n\n  static defaultProps: FocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    as: 'div',\n    preventDefaultWhenHandled: true,\n  };\n\n  static displayName = 'FocusZone';\n  static className = 'ms-FocusZone';\n\n  /** Used for testing purposes only. */\n  static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  _root: { current: HTMLElement | null } = { current: null };\n  _id: string;\n  /** The most recently focused child element. */\n  _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  _isParked: boolean = false;\n  _parkedTabIndex: string | null | undefined;\n\n  /** The child element with tabindex=0. */\n  _defaultFocusElement: HTMLElement | null;\n  _focusAlignment: Point;\n  _isInnerZone: boolean;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  _processingTabKey: boolean;\n\n  windowElement: Window | null;\n\n  constructor(props: FocusZoneProps) {\n    super(props);\n\n    this._id = _.uniqueId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n  }\n\n  componentDidMount(): void {\n    _allInstances[this._id] = this;\n\n    this.setRef(this); // called here to support functional components, we only need HTMLElement ref anyway\n\n    if (!this._root.current) {\n      return;\n    }\n\n    // @ts-ignore\n    this.windowElement = getWindow(this._root.current);\n    let parentElement = getParent(this._root.current, ALLOW_VIRTUAL_ELEMENTS);\n    const doc = getDocument(this._root.current);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== doc.body && parentElement.nodeType === 1) {\n      if (isElementFocusZone(parentElement)) {\n        this._isInnerZone = true;\n        break;\n      }\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    if (!this._isInnerZone) {\n      _outerZones.add(this);\n\n      if (this.windowElement && _outerZones.size === 1) {\n        this.windowElement.addEventListener('keydown', this._onKeyDownCapture, true);\n      }\n    }\n\n    this._root.current.addEventListener('blur', this._onBlur, true);\n\n    // Assign initial tab indexes so that we can set initial focus as appropriate.\n    this.updateTabIndexes();\n\n    if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n      this._activeElement = this.getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n    }\n\n    if (this.props.shouldFocusOnMount) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body ||\n        doc.activeElement === null ||\n        (!this.props.preventFocusRestoration && doc.activeElement === this._root.current))\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(this._root.current as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this.setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this.setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this.setParkedFocus(true);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n\n      if (this.windowElement && _outerZones.size === 0) {\n        this.windowElement.removeEventListener('keydown', this._onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  render() {\n    const { className } = this.props;\n\n    const ElementType = getElementType(this.props);\n    const unhandledProps = getUnhandledProps(_.keys(FocusZone.propTypes) as any, this.props);\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this.evaluateFocusBeforeRender();\n\n    return (\n      <ElementType\n        {...unhandledProps}\n        className={cx(FocusZone.className, className)}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </ElementType>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this.getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      }\n      if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement, ALLOW_VIRTUAL_ELEMENTS) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      }\n\n      const firstChild = this._root.current.firstChild as HTMLElement;\n\n      return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(element: HTMLElement): boolean {\n    const { shouldReceiveFocus } = this.props;\n\n    if (shouldReceiveFocus && !shouldReceiveFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      this.setActiveElement(element);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setRef = (elem: React.ReactInstance): void => {\n    // findDOMNode needed to get correct DOM ref with react-hot-loader, see https://github.com/gaearon/react-hot-loader/issues/964\n    this._root.current = ReactDOM.findDOMNode(elem) as HTMLElement;\n  };\n\n  // Record if focus was in the zone, what the index path to the element is at this time.\n  evaluateFocusBeforeRender(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (!doc) {\n      return;\n    }\n\n    const focusedElement = doc.activeElement as HTMLElement;\n\n    // Only update the index path if we are not parked on the root.\n    if (focusedElement !== this._root.current) {\n      const shouldRestoreFocus = elementContains(this._root.current, focusedElement, ALLOW_VIRTUAL_ELEMENTS);\n\n      this._lastIndexPath = shouldRestoreFocus\n        ? getElementIndexPath(this._root.current as HTMLElement, doc.activeElement as HTMLElement)\n        : undefined;\n    }\n  }\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  setParkedFocus(isParked: boolean): void {\n    if (this._root.current && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = this._root.current.getAttribute('tabindex');\n          this._root.current.setAttribute('tabindex', '-1');\n        }\n        this._root.current.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          this._root.current.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          this._root.current.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  _onBlur = () => {\n    this.setParkedFocus(false);\n  };\n\n  _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const {\n      onActiveElementChanged,\n      stopFocusPropagation,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n    } = this.props;\n\n    let newActiveElement: HTMLElement | null | undefined;\n    const isImmediateDescendant = this.isImmediateDescendantOfZone(ev.target as HTMLElement);\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this.isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n\n          newActiveElement = null;\n        }\n      }\n    }\n\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      this._activeElement = newActiveElement;\n\n      if (isImmediateDescendant) {\n        this.setFocusAlignment(this._activeElement);\n        this.updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation) {\n      ev.stopPropagation();\n    }\n\n    _.invoke(this.props, 'onFocus', ev);\n  };\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   */\n  _onKeyDownCapture = (ev: KeyboardEvent) => {\n    if (keyboardKey.getCode(ev) === keyboardKey.Tab) {\n      _outerZones.forEach(zone => zone.updateTabIndexes());\n    }\n  };\n\n  _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path: HTMLElement[] = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this.setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  setActiveElement(element: HTMLElement, forceAlignemnt?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this.updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignemnt) {\n        this.setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    const { direction, disabled, shouldEnterInnerZone, pagingSupportDisabled } = this.props;\n\n    if (disabled) {\n      return undefined;\n    }\n\n    const doc = getDocument(this._root.current);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // @ts-ignore\n    if (doc.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return undefined;\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return undefined;\n    }\n\n    if (\n      shouldEnterInnerZone &&\n      shouldEnterInnerZone(ev) &&\n      this.isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this.getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return undefined;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return undefined;\n        }\n      } else {\n        return undefined;\n      }\n    } else if (ev.altKey) {\n      return undefined;\n    } else {\n      switch (keyboardKey.getCode(ev)) {\n        case keyboardKey.Spacebar:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.ArrowLeft:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusLeft()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowRight:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusRight()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowUp:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusUp()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowDown:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusDown()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.PageDown:\n          if (!pagingSupportDisabled && this.moveFocusPaging(true)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.PageUp:\n          if (!pagingSupportDisabled && this.moveFocusPaging(false)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Tab:\n          if (\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this.isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this.moveFocusUp() : this.moveFocusDown();\n            } else {\n              const tabWithDirection = this.props.isRtl ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this.moveFocusLeft() : this.moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n            this._activeElement = null;\n          }\n          return undefined;\n\n        case keyboardKey.Home:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.End:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Enter:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return undefined;\n\n        default:\n          return undefined;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    return undefined;\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   * TODO\n   */\n  tryInvokeClickForFocusable(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  getFirstInnerZone(forRootElement?: HTMLElement | null): FocusZone | null {\n    const rootElement = forRootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this.getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    // @ts-ignore\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n\n    return changedFocus;\n  }\n\n  moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusLeft(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        // @ts-ignore\n        this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusRight(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        !this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  getHorizontalDistanceFromCenter = (isForward: boolean, activeRect: ClientRect, targetRect: ClientRect): number => {\n    const leftAlignment = this._focusAlignment.left;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = scrollableParent.clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this.getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this.setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this.getOwnerZone(element) === this._root.current;\n  }\n\n  getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    const doc = getDocument(this._root.current);\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== this._root.current && parentElement !== doc.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return this._root.current;\n  }\n\n  updateTabIndexes(onElement?: HTMLElement) {\n    let element = onElement;\n\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement, ALLOW_VIRTUAL_ELEMENTS)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this.updateTabIndexes(child);\n    }\n  }\n\n  isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length and it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n"],"file":"FocusZone.js"}