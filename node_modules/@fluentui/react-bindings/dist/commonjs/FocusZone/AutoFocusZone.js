"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _keys2 = _interopRequireDefault(require("lodash/keys"));

var _reactComponentRef = require("@fluentui/react-component-ref");

var _styles = require("@fluentui/styles");

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _getElementType = _interopRequireDefault(require("../utils/getElementType"));

var _getUnhandledProps = _interopRequireDefault(require("../utils/getUnhandledProps"));

var _focusUtilities = require("./focusUtilities");

/** AutoFocusZone is used to focus inner element on mount. */
var AutoFocusZone =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(AutoFocusZone, _React$Component);

  function AutoFocusZone() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, AutoFocusZone);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AutoFocusZone)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "root", React.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "findElementAndFocusAsync", function () {
      if (!_this.root.current) return;
      var firstFocusableSelector = _this.props.firstFocusableSelector;
      var focusSelector = (0, _styles.callable)(firstFocusableSelector)();
      var firstFocusableChild = focusSelector ? _this.root.current.querySelector(focusSelector) : (0, _focusUtilities.getNextElement)(_this.root.current, _this.root.current.firstChild, true, false, false, true);
      firstFocusableChild && (0, _focusUtilities.focusAsync)(firstFocusableChild);
    });
    return _this;
  }

  (0, _createClass2.default)(AutoFocusZone, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.findElementAndFocusAsync();
    }
  }, {
    key: "render",
    value: function render() {
      var unhandledProps = (0, _getUnhandledProps.default)(AutoFocusZone.handledProps, this.props);
      var ElementType = (0, _getElementType.default)(this.props);
      return React.createElement(_reactComponentRef.Ref, {
        innerRef: this.root
      }, React.createElement(ElementType, unhandledProps, this.props.children));
    }
  }]);
  return AutoFocusZone;
}(React.Component);

exports.default = AutoFocusZone;
(0, _defineProperty2.default)(AutoFocusZone, "propTypes", {
  as: PropTypes.elementType,
  firstFocusableSelector: PropTypes.oneOfType([PropTypes.func, PropTypes.string])
});
(0, _defineProperty2.default)(AutoFocusZone, "handledProps", (0, _keys2.default)(AutoFocusZone.propTypes));
//# sourceMappingURL=AutoFocusZone.js.map
