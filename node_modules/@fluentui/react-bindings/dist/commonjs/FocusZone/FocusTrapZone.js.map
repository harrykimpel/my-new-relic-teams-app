{"version":3,"sources":["FocusZone/FocusTrapZone.tsx"],"names":["FocusTrapZone","current","React","createRef","elem","_root","ReactDOM","findDOMNode","windowRef","props","isClickableOutsideFocusTrap","focusTriggerOnOutsideClick","ev","onFocus","_hasFocus","onBlur","relatedTarget","doc","activeElement","contains","_onBumperFocus","isFirstBumper","currentBumper","_lastBumper","_firstBumper","nextFocusable","_isBumper","_findElementAndFocusAsync","focus","disabled","_focusStack","push","_bringFocusIntoZone","_hideContentFromAccessibilityTree","disableFirstFocus","_previouslyFocusedElementOutsideTrapZone","_getPreviouslyFocusedElementOutsideTrapZone","ignoreExternalFocusing","filter","value","body","_focusAsync","lastActiveFocusTrap","length","_showContentInAccessibilityTree","hasAttribute","HIDDEN_FROM_ACC_TREE","removeAttribute","focusPreviouslyFocusedInnerElement","firstFocusableSelector","_previouslyFocusedElementInTrapZone","focusSelector","firstFocusableChild","querySelector","firstChild","onFocusCapture","target","currentTarget","triggeredElement","preventDefault","stopPropagation","focusedElement","_forceFocusInTrap","clickedElement","isOutsideFocusTrapZone","isOutsideTriggerElement","onKeyDown","elementToFocusOnDismiss","previouslyFocusedElement","bodyChildren","children","console","warn","index","currentChild","isOrHasFocusTrapZone","isAriaLiveRegion","getAttribute","setAttribute","hiddenElements","querySelectorAll","element","_enableFocusTrapZone","prevProps","forceFocusInsideTrapOnComponentUpdate","forceFocusInsideTrapOnOutsideFocus","prevForceFocusInsideTrap","undefined","newForceFocusInsideTrap","prevDisabled","newDisabled","_releaseFocusTrapZone","className","ariaLabelledBy","unhandledProps","propTypes","ElementType","bumperProps","style","pointerEvents","position","tabIndex","_onKeyboardHandler","_onFocusCapture","_onRootFocus","_onRootBlur","_onFirstBumperFocus","_onLastBumperFocus","_handleOutsideFocus","shouldHandleOutsideClick","_handleOutsideClick","Component","as","PropTypes","elementType","string","object","bool"],"mappings":"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","sourcesContent":["import { EventListener } from '@fluentui/react-component-event-listener';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport getElementType from '../utils/getElementType';\nimport getUnhandledProps from '../utils/getUnhandledProps';\nimport {\n  getNextElement,\n  getFirstTabbable,\n  getLastTabbable,\n  getWindow,\n  getDocument,\n  focusAsync,\n  HIDDEN_FROM_ACC_TREE,\n} from './focusUtilities';\nimport { FocusTrapZoneProps } from './FocusTrapZone.types';\n\n/** FocusTrapZone is used to trap the focus in any html element placed in body\n *  and hide other elements outside of Focus Trap Zone from accessibility tree.\n *  Pressing tab will circle focus within the inner focusable elements of the FocusTrapZone. */\nexport default class FocusTrapZone extends React.Component<FocusTrapZoneProps, {}> {\n  static _focusStack: FocusTrapZone[] = [];\n\n  _root: { current: HTMLElement | null } = { current: null };\n\n  _previouslyFocusedElementOutsideTrapZone: HTMLElement;\n  _previouslyFocusedElementInTrapZone?: HTMLElement;\n\n  _firstBumper = React.createRef<HTMLDivElement>();\n  _lastBumper = React.createRef<HTMLDivElement>();\n  _hasFocus: boolean = false;\n\n  windowRef = React.createRef<Window>() as React.MutableRefObject<Window>;\n\n  // @ts-ignore\n  createRef = elem => {\n    this._root.current = ReactDOM.findDOMNode(elem) as HTMLElement;\n    // @ts-ignore\n    this.windowRef.current = getWindow(this._root.current);\n  };\n\n  shouldHandleOutsideClick = () => !this.props.isClickableOutsideFocusTrap || !this.props.focusTriggerOnOutsideClick;\n\n  static propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    elementToFocusOnDismiss: PropTypes.object,\n    ariaLabelledBy: PropTypes.string,\n    isClickableOutsideFocusTrap: PropTypes.bool,\n    ignoreExternalFocusing: PropTypes.bool,\n    forceFocusInsideTrapOnOutsideFocus: PropTypes.bool,\n    forceFocusInsideTrapOnComponentUpdate: PropTypes.bool,\n    firstFocusableSelector: PropTypes.string,\n    disableFirstFocus: PropTypes.bool,\n    focusPreviouslyFocusedInnerElement: PropTypes.bool,\n    focusTriggerOnOutsideClick: PropTypes.bool,\n  };\n\n  static defaultProps: FocusTrapZoneProps = {\n    as: 'div',\n    isClickableOutsideFocusTrap: true,\n    forceFocusInsideTrapOnOutsideFocus: false,\n  };\n\n  componentDidMount(): void {\n    this._enableFocusTrapZone();\n  }\n\n  componentDidUpdate(prevProps: FocusTrapZoneProps): void {\n    const { forceFocusInsideTrapOnComponentUpdate, forceFocusInsideTrapOnOutsideFocus, disabled } = this.props;\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n\n    // if after componentDidUpdate focus is not inside the focus trap, bring it back\n    if (\n      !disabled &&\n      // @ts-ignore\n      !this._root.current.contains(activeElement) &&\n      forceFocusInsideTrapOnComponentUpdate\n    ) {\n      this._bringFocusIntoZone();\n      return;\n    }\n\n    const prevForceFocusInsideTrap =\n      prevProps.forceFocusInsideTrapOnOutsideFocus !== undefined ? prevProps.forceFocusInsideTrapOnOutsideFocus : true;\n    const newForceFocusInsideTrap =\n      forceFocusInsideTrapOnOutsideFocus !== undefined ? forceFocusInsideTrapOnOutsideFocus : true;\n    const prevDisabled = prevProps.disabled !== undefined ? prevProps.disabled : false;\n    const newDisabled = disabled !== undefined ? disabled : false;\n\n    if ((!prevForceFocusInsideTrap && newForceFocusInsideTrap) || (prevDisabled && !newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ disabled to enabled.\n      // Emulate what happens when a FocusTrapZone gets mounted.\n      this._enableFocusTrapZone();\n    } else if ((prevForceFocusInsideTrap && !newForceFocusInsideTrap) || (!prevDisabled && newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ enabled to disabled.\n      // Emulate what happens when a FocusTrapZone gets unmounted.\n      this._releaseFocusTrapZone();\n    }\n  }\n\n  componentWillUnmount(): void {\n    // don't handle return focus unless forceFocusInsideTrapOnOutsideFocus is true or focus is still within FocusTrapZone\n    const doc = getDocument(this._root.current);\n    if (\n      !this.props.disabled ||\n      this.props.forceFocusInsideTrapOnOutsideFocus ||\n      // @ts-ignore\n      !this._root.current.contains(doc.activeElement as HTMLElement)\n    ) {\n      this._releaseFocusTrapZone();\n    }\n\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete this._previouslyFocusedElementInTrapZone;\n    delete this._previouslyFocusedElementOutsideTrapZone;\n  }\n\n  render(): JSX.Element {\n    const { className, forceFocusInsideTrapOnOutsideFocus, ariaLabelledBy, disabled = false } = this.props;\n    const unhandledProps = getUnhandledProps(_.keys(FocusTrapZone.propTypes) as any, this.props);\n    const ElementType = getElementType(this.props);\n\n    const bumperProps = {\n      style: {\n        pointerEvents: 'none',\n        position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n      },\n      tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n      'data-is-visible': true,\n    } as React.HTMLAttributes<HTMLDivElement>;\n\n    return (\n      <>\n        <ElementType\n          {...unhandledProps}\n          className={className}\n          ref={this.createRef}\n          aria-labelledby={ariaLabelledBy}\n          onKeyDown={this._onKeyboardHandler}\n          onFocusCapture={this._onFocusCapture}\n          onFocus={this._onRootFocus}\n          onBlur={this._onRootBlur}\n        >\n          <div {...bumperProps} ref={this._firstBumper} onFocus={this._onFirstBumperFocus} />\n          {this.props.children}\n          <div {...bumperProps} ref={this._lastBumper} onFocus={this._onLastBumperFocus} />\n        </ElementType>\n\n        {forceFocusInsideTrapOnOutsideFocus && (\n          <EventListener capture listener={this._handleOutsideFocus} targetRef={this.windowRef} type=\"focus\" />\n        )}\n        {this.shouldHandleOutsideClick() && (\n          <EventListener capture listener={this._handleOutsideClick} targetRef={this.windowRef} type=\"click\" />\n        )}\n      </>\n    );\n  }\n\n  _onRootFocus = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this._hasFocus = true;\n  };\n\n  _onRootBlur = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the ComboBox\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      relatedTarget = doc.activeElement as Element;\n    }\n\n    // @ts-ignore\n    if (!this._root.current.contains(relatedTarget as HTMLElement)) {\n      this._hasFocus = false;\n    }\n  };\n\n  _onFirstBumperFocus = () => {\n    this._onBumperFocus(true);\n  };\n\n  _onLastBumperFocus = () => {\n    this._onBumperFocus(false);\n  };\n\n  _isBumper(element: HTMLElement): boolean {\n    return element === this._firstBumper.current || element === this._lastBumper.current;\n  }\n\n  _onBumperFocus = (isFirstBumper: boolean) => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const currentBumper = (isFirstBumper === this._hasFocus\n      ? this._lastBumper.current\n      : this._firstBumper.current) as HTMLElement;\n\n    const nextFocusable =\n      isFirstBumper === this._hasFocus\n        ? getLastTabbable(this._root.current, currentBumper, true, false)\n        : getFirstTabbable(this._root.current, currentBumper, true, false);\n\n    if (nextFocusable) {\n      if (this._isBumper(nextFocusable)) {\n        // This can happen when FTZ contains no tabbable elements. Focus will take care of finding a focusable element in FTZ.\n        this._findElementAndFocusAsync();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  _focusAsync(element: HTMLElement): void {\n    if (!this._isBumper(element)) {\n      focusAsync(element);\n    }\n  }\n\n  _enableFocusTrapZone = () => {\n    const { disabled = false } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    FocusTrapZone._focusStack.push(this);\n\n    this._bringFocusIntoZone();\n    this._hideContentFromAccessibilityTree();\n  };\n\n  _bringFocusIntoZone = () => {\n    const { disableFirstFocus = false } = this.props;\n\n    this._previouslyFocusedElementOutsideTrapZone = this._getPreviouslyFocusedElementOutsideTrapZone();\n\n    if (\n      // @ts-ignore\n      !this._root.current.contains(this._previouslyFocusedElementOutsideTrapZone) &&\n      !disableFirstFocus\n    ) {\n      this._findElementAndFocusAsync();\n    }\n  };\n\n  _releaseFocusTrapZone = () => {\n    const { ignoreExternalFocusing } = this.props;\n\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\n      return this !== value;\n    });\n\n    // try to focus element which triggered FocusTrapZone - prviously focused element outside trap zone\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !ignoreExternalFocusing &&\n      this._previouslyFocusedElementOutsideTrapZone &&\n      // @ts-ignore\n      (this._root.current.contains(activeElement) || activeElement === doc.body)\n    ) {\n      this._focusAsync(this._previouslyFocusedElementOutsideTrapZone);\n    }\n\n    // if last active focus trap zone is going to be released - show previously hidden content in accessibility tree\n    const lastActiveFocusTrap =\n      FocusTrapZone._focusStack.length && FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1];\n\n    if (!lastActiveFocusTrap) {\n      this._showContentInAccessibilityTree();\n    } else if (\n      lastActiveFocusTrap._root.current &&\n      lastActiveFocusTrap._root.current.hasAttribute(HIDDEN_FROM_ACC_TREE)\n    ) {\n      lastActiveFocusTrap._root.current.removeAttribute(HIDDEN_FROM_ACC_TREE);\n      lastActiveFocusTrap._root.current.removeAttribute('aria-hidden');\n    }\n  };\n\n  _findElementAndFocusAsync = () => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\n\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      this._previouslyFocusedElementInTrapZone &&\n      this._root.current.contains(this._previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      this._focusAsync(this._previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    const focusSelector =\n      firstFocusableSelector &&\n      (typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector());\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (focusSelector) {\n      firstFocusableChild = this._root.current.querySelector(focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        this._root.current,\n        this._root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    firstFocusableChild && this._focusAsync(firstFocusableChild);\n  };\n\n  _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    this.props.onFocusCapture && this.props.onFocusCapture(ev);\n    if (ev.target !== ev.currentTarget && !this._isBumper(ev.target)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  _forceFocusInTrap = (ev: Event, triggeredElement: HTMLElement) => {\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\n      // @ts-ignore\n      if (!this._root.current.contains(triggeredElement)) {\n        this._findElementAndFocusAsync();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  _handleOutsideFocus = (ev: FocusEvent): void => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const focusedElement = doc.activeElement as HTMLElement;\n    focusedElement && this._forceFocusInTrap(ev, focusedElement);\n  };\n\n  _handleOutsideClick = (ev: MouseEvent): void => {\n    const clickedElement = ev.target as HTMLElement;\n    const { isClickableOutsideFocusTrap, focusTriggerOnOutsideClick } = this.props;\n\n    if (!isClickableOutsideFocusTrap) {\n      clickedElement && this._forceFocusInTrap(ev, clickedElement);\n    } else if (!focusTriggerOnOutsideClick) {\n      const isOutsideFocusTrapZone = this._root.current && !this._root.current.contains(clickedElement);\n      const isOutsideTriggerElement =\n        this._previouslyFocusedElementOutsideTrapZone &&\n        !this._previouslyFocusedElementOutsideTrapZone.contains(clickedElement);\n      if (isOutsideFocusTrapZone && isOutsideTriggerElement) {\n        // set it to NULL, so the trigger will not be focused on componentWillUnmount\n        // @ts-ignore\n        this._previouslyFocusedElementOutsideTrapZone = null;\n      }\n    }\n  };\n\n  _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // do not propogate keyboard events outside focus trap zone\n    // https://github.com/microsoft/fluent-ui-react/pull/1180\n    ev.stopPropagation();\n  };\n\n  _getPreviouslyFocusedElementOutsideTrapZone = () => {\n    const { elementToFocusOnDismiss } = this.props;\n    let previouslyFocusedElement = this._previouslyFocusedElementOutsideTrapZone;\n\n    if (elementToFocusOnDismiss && previouslyFocusedElement !== elementToFocusOnDismiss) {\n      previouslyFocusedElement = elementToFocusOnDismiss;\n    } else if (!previouslyFocusedElement) {\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      previouslyFocusedElement = doc.activeElement as HTMLElement;\n    }\n\n    return previouslyFocusedElement;\n  };\n\n  _hideContentFromAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const bodyChildren = (doc.body && doc.body.children) || [];\n\n    // @ts-ignore\n    if (bodyChildren.length && !doc.body.contains(this._root.current)) {\n      // In case popup render options will change\n      /* eslint-disable-next-line no-console */\n      console.warn(\n        'Body element does not contain trap zone element. Please, ensure the trap zone element is placed inside body, so it will work properly.',\n      );\n    }\n\n    for (let index = 0; index < bodyChildren.length; index++) {\n      const currentChild = bodyChildren[index] as HTMLElement;\n      const isOrHasFocusTrapZone = currentChild === this._root.current || currentChild.contains(this._root.current);\n      const isAriaLiveRegion = currentChild.hasAttribute('aria-live');\n\n      if (!isOrHasFocusTrapZone && !isAriaLiveRegion && currentChild.getAttribute('aria-hidden') !== 'true') {\n        currentChild.setAttribute('aria-hidden', 'true');\n        currentChild.setAttribute(HIDDEN_FROM_ACC_TREE, 'true');\n      }\n    }\n  };\n\n  _showContentInAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const hiddenElements = doc.querySelectorAll(`[${HIDDEN_FROM_ACC_TREE}=\"true\"]`);\n    for (let index = 0; index < hiddenElements.length; index++) {\n      const element = hiddenElements[index];\n      element.removeAttribute('aria-hidden');\n      element.removeAttribute(HIDDEN_FROM_ACC_TREE);\n    }\n  };\n}\n"],"file":"FocusTrapZone.js"}