{"version":3,"sources":["styles/resolveStyles.ts"],"names":["classesCache","WeakMap","stylesCache","resolveStyles","options","resolvedVariables","renderStylesInput","componentClassName","className","theme","displayNames","props","rtl","disableAnimations","renderer","performance","design","styles","variables","stylesProps","noInlineStylesOverrides","noVariableOverrides","enableBooleanVariablesCaching","process","env","NODE_ENV","enableStylesCaching","Error","hasOnlyBooleanVariables","Object","keys","every","variableName","cacheEnabled","mergedStyles","length","componentStyles","root","map","displayName","filter","Boolean","mergeComponentStyles","styleParam","direction","felaParam","join","sanitizeCss","enableSanitizeCssPlugin","renderStyles","style","renderRule","resolvedStyles","resolvedStylesDebug","classes","has","set","propsCacheKey","JSON","stringify","variablesCacheKey","componentCacheKey","forEach","slotName","lazyEvaluationKey","slotCacheKey","defineProperty","enumerable","configurable","val","get","stylesThemeCache","isDebugEnabled","classesThemeCache","styleObj"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport {\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentSlotStylesResolved,\n  ComponentStyleFunctionParam,\n  ComponentVariablesObject,\n  ICSSInJSStyle,\n  isDebugEnabled,\n  mergeComponentStyles,\n  ThemePrepared,\n  withDebugId,\n} from '@fluentui/styles';\nimport { ComponentSlotClasses, RendererParam, ResolveStylesOptions } from './types';\nimport * as _ from 'lodash';\n\nexport type ResolveStylesResult = {\n  resolvedStyles: ComponentSlotStylesResolved;\n  resolvedStylesDebug: Record<string, { styles: Object }[]>;\n  classes: ComponentSlotClasses;\n};\n\n// this weak map is used as cache for the classes\nconst classesCache = new WeakMap<ThemePrepared, Record<string, string>>();\n\n// this weak map is used as cache for the styles\nconst stylesCache = new WeakMap<ThemePrepared, Record<string, ICSSInJSStyle>>();\n\n/**\n * Both resolvedStyles and classes are objects of getters with lazy evaluation\n *\n * Additionally if the cacheEnabled option is provided, than the resolved styles\n * and classes are caching the results in WeakMaps. The key of the maps contains the following:\n * - theme\n * - displayName\n * - slot name\n * - styling props\n * - rtl mode\n * - disable animations mode\n */\nconst resolveStyles = (\n  options: ResolveStylesOptions,\n  resolvedVariables: ComponentVariablesObject,\n  renderStylesInput?: (styles: ICSSInJSStyle) => string,\n): ResolveStylesResult => {\n  const {\n    className: componentClassName,\n    theme,\n    displayNames,\n    props,\n    rtl,\n    disableAnimations,\n    renderer,\n    performance,\n  } = options;\n\n  const { className, design, styles, variables, ...stylesProps } = props;\n\n  const noInlineStylesOverrides = !(design || styles);\n  let noVariableOverrides = performance.enableBooleanVariablesCaching || !variables;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    if (!performance.enableStylesCaching && performance.enableBooleanVariablesCaching) {\n      throw new Error(\n        '@fluentui/react-northstar: Please check your \"performance\" settings on \"Provider\", to enable \"enableBooleanVariablesCaching\" you need to enable \"enableStylesCaching\"',\n      );\n    }\n  }\n\n  if (performance.enableBooleanVariablesCaching) {\n    if (_.isPlainObject(variables)) {\n      const hasOnlyBooleanVariables = Object.keys(variables).every(\n        variableName =>\n          variables[variableName] === null ||\n          typeof variables[variableName] === 'undefined' ||\n          typeof variables[variableName] === 'boolean',\n      );\n\n      if (!hasOnlyBooleanVariables) {\n        noVariableOverrides = false;\n      }\n    } else {\n      noVariableOverrides = false;\n    }\n  }\n\n  const cacheEnabled = performance.enableStylesCaching && noInlineStylesOverrides && noVariableOverrides;\n\n  // Merge theme styles with inline overrides if any\n  let mergedStyles: ComponentSlotStylesPrepared;\n\n  if (displayNames.length === 1) {\n    mergedStyles = theme.componentStyles[displayNames[0]] || { root: () => ({}) };\n  } else {\n    const styles = displayNames.map(displayName => theme.componentStyles[displayName]).filter(Boolean);\n\n    if (styles.length > 0) {\n      mergedStyles = mergeComponentStyles(...styles);\n    } else {\n      mergedStyles = { root: () => ({}) };\n    }\n  }\n\n  if (!noInlineStylesOverrides) {\n    mergedStyles = mergeComponentStyles(\n      mergedStyles,\n      props.design && withDebugId({ root: props.design }, 'props.design'),\n      props.styles && withDebugId({ root: props.styles } as ComponentSlotStylesInput, 'props.styles'),\n    );\n  }\n\n  const styleParam: ComponentStyleFunctionParam = {\n    props,\n    variables: resolvedVariables,\n    theme,\n    rtl,\n    disableAnimations,\n  };\n\n  // Fela plugins rely on `direction` param in `theme` prop instead of RTL\n  // Our API should be aligned with it\n  // Heads Up! Keep in sync with Design.tsx render logic\n  const direction = rtl ? 'rtl' : 'ltr';\n  const felaParam: RendererParam = {\n    theme: { direction },\n    disableAnimations,\n    displayName: displayNames.join(':'), // does not affect styles, only used by useEnhancedRenderer in docs\n    sanitizeCss: performance.enableSanitizeCssPlugin,\n  };\n\n  const renderStyles = renderStylesInput || ((style: ICSSInJSStyle) => renderer.renderRule(() => style, felaParam));\n\n  const resolvedStyles: Record<string, ICSSInJSStyle> = {};\n  const resolvedStylesDebug: Record<string, { styles: Object }[]> = {};\n  const classes: Record<string, string> = {};\n\n  if (cacheEnabled && theme) {\n    if (!stylesCache.has(theme)) {\n      stylesCache.set(theme, {});\n    }\n    if (!classesCache.has(theme)) {\n      classesCache.set(theme, {});\n    }\n  }\n\n  const propsCacheKey = cacheEnabled ? JSON.stringify(stylesProps) : '';\n  const variablesCacheKey = cacheEnabled && performance.enableBooleanVariablesCaching ? JSON.stringify(variables) : '';\n  const componentCacheKey = cacheEnabled\n    ? `${displayNames.join(':')}:${propsCacheKey}:${variablesCacheKey}:${styleParam.rtl}${styleParam.disableAnimations}`\n    : '';\n\n  Object.keys(mergedStyles).forEach(slotName => {\n    // resolve/render slot styles once and cache\n    const lazyEvaluationKey = `${slotName}__return`;\n    const slotCacheKey = componentCacheKey + slotName;\n\n    Object.defineProperty(resolvedStyles, slotName, {\n      enumerable: false,\n      configurable: false,\n      set(val: ICSSInJSStyle) {\n        // Add to the cache if it's enabled\n        if (cacheEnabled && theme) {\n          stylesCache.set(theme, {\n            ...stylesCache.get(theme),\n            [slotCacheKey]: val,\n          });\n        }\n\n        resolvedStyles[lazyEvaluationKey] = val;\n      },\n      get(): ICSSInJSStyle {\n        // If caching enabled and entry exists, get from cache, avoid lazy evaluation\n        if (cacheEnabled && theme) {\n          const stylesThemeCache = stylesCache.get(theme) || {};\n          if (stylesThemeCache[slotCacheKey]) {\n            return stylesThemeCache[slotCacheKey];\n          }\n        }\n\n        if (resolvedStyles[lazyEvaluationKey]) {\n          return resolvedStyles[lazyEvaluationKey];\n        }\n\n        // resolve/render slot styles once and cache\n        resolvedStyles[lazyEvaluationKey] = mergedStyles[slotName](styleParam);\n\n        if (cacheEnabled && theme) {\n          stylesCache.set(theme, {\n            ...stylesCache.get(theme),\n            [slotCacheKey]: resolvedStyles[lazyEvaluationKey],\n          });\n        }\n\n        if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n          resolvedStylesDebug[slotName] = resolvedStyles[slotName]['_debug'];\n          delete resolvedStyles[slotName]['_debug'];\n        }\n\n        return resolvedStyles[lazyEvaluationKey];\n      },\n    });\n\n    Object.defineProperty(classes, slotName, {\n      enumerable: false,\n      configurable: false,\n      set(val: string) {\n        if (cacheEnabled && theme) {\n          classesCache.set(theme, {\n            ...classesCache.get(theme),\n            [slotCacheKey]: val,\n          });\n        }\n\n        classes[lazyEvaluationKey] = val;\n      },\n      get(): string {\n        if (cacheEnabled && theme) {\n          const classesThemeCache = classesCache.get(theme) || {};\n\n          if (classesThemeCache[slotCacheKey] || classesThemeCache[slotCacheKey] === '') {\n            return slotName === 'root'\n              ? cx(componentClassName, classesThemeCache[slotCacheKey], className)\n              : classesThemeCache[slotCacheKey];\n          }\n        }\n\n        if (classes[lazyEvaluationKey]) {\n          return slotName === 'root'\n            ? cx(componentClassName, classes[lazyEvaluationKey], className)\n            : classes[lazyEvaluationKey];\n        }\n\n        // this resolves the getter magic\n        const styleObj = resolvedStyles[slotName];\n\n        if (renderStyles && styleObj) {\n          classes[lazyEvaluationKey] = renderStyles(styleObj);\n\n          if (cacheEnabled && theme) {\n            classesCache.set(theme, {\n              ...classesCache.get(theme),\n              [slotCacheKey]: classes[lazyEvaluationKey],\n            });\n          }\n        }\n\n        return slotName === 'root'\n          ? cx(componentClassName, classes[lazyEvaluationKey], className)\n          : classes[lazyEvaluationKey];\n      },\n    });\n  });\n\n  return {\n    resolvedStyles,\n    resolvedStylesDebug,\n    classes,\n  };\n};\n\nexport default resolveStyles;\n"],"file":"resolveStyles.js"}