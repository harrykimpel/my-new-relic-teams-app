{"version":3,"sources":["FocusZone/AutoFocusZone.tsx"],"names":["Ref","callable","React","PropTypes","getElementType","getUnhandledProps","getNextElement","focusAsync","AutoFocusZone","createRef","root","current","firstFocusableSelector","props","focusSelector","firstFocusableChild","querySelector","firstChild","findElementAndFocusAsync","unhandledProps","handledProps","ElementType","children","Component","as","elementType","oneOfType","func","string","propTypes"],"mappings":";;;;;;;;AAAA,SAASA,GAAT,QAAoB,+BAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAGA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,kBAA3C;AAEA;;IACqBC,a;;;;;;;;;;;;;;;;;;2DACZN,KAAK,CAACO,SAAN,E;;+EAwBoB,YAAM;AAC/B,UAAI,CAAC,MAAKC,IAAL,CAAUC,OAAf,EAAwB;AADO,UAEvBC,sBAFuB,GAEI,MAAKC,KAFT,CAEvBD,sBAFuB;AAI/B,UAAME,aAAa,GAAGb,QAAQ,CAACW,sBAAD,CAAR,EAAtB;AAEA,UAAMG,mBAAmB,GAAGD,aAAa,GACpC,MAAKJ,IAAL,CAAUC,OAAV,CAAkBK,aAAlB,CAAgCF,aAAhC,CADoC,GAErCR,cAAc,CAAC,MAAKI,IAAL,CAAUC,OAAX,EAAoB,MAAKD,IAAL,CAAUC,OAAV,CAAkBM,UAAtC,EAAiE,IAAjE,EAAuE,KAAvE,EAA8E,KAA9E,EAAqF,IAArF,CAFlB;AAIAF,MAAAA,mBAAmB,IAAIR,UAAU,CAACQ,mBAAD,CAAjC;AACD,K;;;;;;;wCA1ByB;AACxB,WAAKG,wBAAL;AACD;;;6BAEqB;AACpB,UAAMC,cAAc,GAAGd,iBAAiB,CAACG,aAAa,CAACY,YAAf,EAA6B,KAAKP,KAAlC,CAAxC;AACA,UAAMQ,WAAW,GAAGjB,cAAc,CAAC,KAAKS,KAAN,CAAlC;AAEA,aACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,KAAKH;AAApB,SACE,oBAAC,WAAD,EAAiBS,cAAjB,EAAkC,KAAKN,KAAL,CAAWS,QAA7C,CADF,CADF;AAKD;;;;EAvBwCpB,KAAK,CAACqB,S;;gBAA5Bf,a,eAGA;AACjBgB,EAAAA,EAAE,EAAErB,SAAS,CAACsB,WADG;AAEjBb,EAAAA,sBAAsB,EAAET,SAAS,CAACuB,SAAV,CAAoB,CAACvB,SAAS,CAACwB,IAAX,EAAiBxB,SAAS,CAACyB,MAA3B,CAApB;AAFP,C;;gBAHApB,a,kBAQG,MAAOA,aAAa,CAACqB,SAArB,C;;SARHrB,a","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport { callable } from '@fluentui/styles';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport getElementType from '../utils/getElementType';\nimport getUnhandledProps from '../utils/getUnhandledProps';\nimport { AutoFocusZoneProps } from './AutoFocusZone.types';\nimport { getNextElement, focusAsync } from './focusUtilities';\n\n/** AutoFocusZone is used to focus inner element on mount. */\nexport default class AutoFocusZone extends React.Component<AutoFocusZoneProps> {\n  root = React.createRef<HTMLElement>();\n\n  static propTypes = {\n    as: PropTypes.elementType,\n    firstFocusableSelector: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  };\n\n  static handledProps = _.keys(AutoFocusZone.propTypes) as any;\n\n  componentDidMount(): void {\n    this.findElementAndFocusAsync();\n  }\n\n  render(): JSX.Element {\n    const unhandledProps = getUnhandledProps(AutoFocusZone.handledProps, this.props);\n    const ElementType = getElementType(this.props);\n\n    return (\n      <Ref innerRef={this.root}>\n        <ElementType {...unhandledProps}>{this.props.children}</ElementType>\n      </Ref>\n    );\n  }\n\n  findElementAndFocusAsync = () => {\n    if (!this.root.current) return;\n    const { firstFocusableSelector } = this.props;\n\n    const focusSelector = callable(firstFocusableSelector)();\n\n    const firstFocusableChild = focusSelector\n      ? (this.root.current.querySelector(focusSelector) as HTMLElement)\n      : getNextElement(this.root.current, this.root.current.firstChild as HTMLElement, true, false, false, true);\n\n    firstFocusableChild && focusAsync(firstFocusableChild);\n  };\n}\n"],"file":"AutoFocusZone.js"}