{"version":3,"sources":["behaviors/Tree/treeAsListBehavior.ts"],"names":["treeBehavior","treeItemAsListItemBehavior","treeAsListBehavior","props","behavior","attributes","root","role","childBehaviors","item"],"mappings":";AAGA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA;;;;;AAIA,IAAMC,kBAAoD,GAAG,SAAvDA,kBAAuD,CAAAC,KAAK,EAAI;AACpE,MAAMC,QAAQ,GAAGJ,YAAY,CAACG,KAAD,CAA7B;AACA,SAAO,OAAQC,QAAR,EAAkB;AACvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADW;AAMvBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAER;AADQ;AANO,GAAlB,CAAP;AAUD,CAZD;;AAgBA,eAAeC,kBAAf","sourcesContent":["import * as _ from 'lodash';\n\nimport { Accessibility, AccessibilityAttributes } from '../../types';\nimport treeBehavior from './treeBehavior';\nimport treeItemAsListItemBehavior from './treeItemAsListItemBehavior';\n\n/**\n * @specification\n * Adds role 'list' to 'root' slot.\n */\nconst treeAsListBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const behavior = treeBehavior(props);\n  return _.merge(behavior, {\n    attributes: {\n      root: {\n        role: 'list',\n      },\n    },\n    childBehaviors: {\n      item: treeItemAsListItemBehavior,\n    },\n  });\n};\n\ntype TreeBehaviorProps = Pick<AccessibilityAttributes, 'aria-labelledby'>;\n\nexport default treeAsListBehavior;\n"],"file":"treeAsListBehavior.js"}