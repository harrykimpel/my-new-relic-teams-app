{"version":3,"sources":["behaviors/Tree/treeItemAsListItemBehavior.ts"],"names":["treeItemBehavior","treeTitleAsListItemTitleBehavior","treeItemAsListItemBehavior","props","behavior","attributes","root","hasSubtree","role","childBehaviors","title"],"mappings":";AAEA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gCAAP,MAA6C,oCAA7C;AAEA;;;;;AAIA,IAAMC,0BAAgE,GAAG,SAAnEA,0BAAmE,CAAAC,KAAK,EAAI;AAChF,MAAMC,QAAQ,GAAGJ,gBAAgB,CAACG,KAAD,CAAjC;AACA,SAAO,OAAQC,QAAR,EAAkB;AACvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACEH,KAAK,CAACI,UAAN,IAAoB;AACtBC,QAAAA,IAAI,EAAE;AADgB,OADtB;AADM,KADW;AAQvBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAET;AADO;AARO,GAAlB,CAAP;AAYD,CAdD;;AAqBA,eAAeC,0BAAf","sourcesContent":["import * as _ from 'lodash';\nimport { Accessibility } from '../../types';\nimport treeItemBehavior from './treeItemBehavior';\nimport treeTitleAsListItemTitleBehavior from './treeTitleAsListItemTitleBehavior';\n\n/**\n * @description\n * Adds role 'listitem' to a non-leaf item and 'none' to a leaf item.\n */\nconst treeItemAsListItemBehavior: Accessibility<TreeItemBehaviorProps> = props => {\n  const behavior = treeItemBehavior(props);\n  return _.merge(behavior, {\n    attributes: {\n      root: {\n        ...(props.hasSubtree && {\n          role: 'listitem',\n        }),\n      },\n    },\n    childBehaviors: {\n      title: treeTitleAsListItemTitleBehavior,\n    },\n  });\n};\n\nexport type TreeItemBehaviorProps = {\n  /** Indicates whether `TreeTitle` has a subtree. */\n  hasSubtree?: boolean;\n};\n\nexport default treeItemAsListItemBehavior;\n"],"file":"treeItemAsListItemBehavior.js"}