{"version":3,"sources":["behaviors/Table/gridHeaderRowBehavior.ts"],"names":["IS_FOCUSABLE_ATTRIBUTE","FocusZoneDirection","keyboardKey","gridHeaderCellBehavior","gridHeaderRowBehavior","props","attributes","root","focusZone","direction","horizontal","shouldFocusInnerElementWhenReceivedFocus","shouldResetActiveElementWhenTabFromZone","keyActions","unsetRowTabbable","keyCombinations","keyCode","Tab","shiftKey","childBehaviors","cell"],"mappings":";AACA,SAASA,sBAAT,QAAuC,kBAAvC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAGA;;;;;;;;;;AAUA,IAAMC,qBAA0D,GAAG,SAA7DA,qBAA6D,CAAAC,KAAK;AAAA;;AAAA,SAAK;AAC3EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,sCACDP,sBADC,EACwB,IADxB,kCAEI,KAFJ;AADM,KAD+D;AAO3EQ,IAAAA,SAAS,EAAE;AACTH,MAAAA,KAAK,EAAE;AACLI,QAAAA,SAAS,EAAER,kBAAkB,CAACS,UADzB;AAELC,QAAAA,wCAAwC,EAAE,IAFrC;AAGLC,QAAAA,uCAAuC,EAAE;AAHpC;AADE,KAPgE;AAc3EC,IAAAA,UAAU,EAAE;AACVN,MAAAA,IAAI,EAAE;AACJO,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEd,WAAW,CAACe,GAAvB;AAA4BC,YAAAA,QAAQ,EAAE;AAAtC,WAAD;AADD;AADd;AADI,KAd+D;AAqB3EC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEjB;AADQ;AArB2D,GAAL;AAAA,CAAxE;;AA0BA,eAAeC,qBAAf","sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\nimport gridHeaderCellBehavior from './gridHeaderCellBehavior';\nimport { GridRowBehaviorProps } from './gridRowBehavior';\n\n/**\n * @specification\n * Adds role='row'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in horizontal direction.\n * Focused active element of the component is reset when TAB from the component.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n * Triggers 'unsetRowTabbable' action using 'shiftKey' + 'Tab' key on 'root'.\n * Applies 'gridHeaderCellBehavior' for 'cell' child component.\n */\nconst gridHeaderRowBehavior: Accessibility<GridRowBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      role: 'row',\n    },\n  },\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.horizontal,\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      shouldResetActiveElementWhenTabFromZone: true,\n    },\n  },\n  keyActions: {\n    root: {\n      unsetRowTabbable: {\n        keyCombinations: [{ keyCode: keyboardKey.Tab, shiftKey: true }],\n      },\n    },\n  },\n  childBehaviors: {\n    cell: gridHeaderCellBehavior,\n  },\n});\n\nexport default gridHeaderRowBehavior;\n"],"file":"gridHeaderRowBehavior.js"}