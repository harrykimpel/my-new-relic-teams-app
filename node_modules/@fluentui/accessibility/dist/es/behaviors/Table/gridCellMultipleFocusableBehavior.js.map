{"version":3,"sources":["behaviors/Table/gridCellMultipleFocusableBehavior.ts"],"names":["IS_FOCUSABLE_ATTRIBUTE","FocusZoneDirection","keyboardKey","gridCellMultipleFocusableBehavior","props","attributes","root","role","focusZone","direction","bidirectional","keyActions","focusCell","keyCombinations","keyCode","Escape"],"mappings":";AACA,SAASA,sBAAT,QAAuC,kBAAvC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AAEA;;;;;;;;AAOA,IAAMC,iCAAgD,GAAG,SAAnDA,iCAAmD,CAAAC,KAAK;AAAA,SAAK;AACjEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE;AADJ,SAEDP,sBAFC,EAEwB,IAFxB;AADM,KADqD;AAOjEQ,IAAAA,SAAS,EAAE;AACTJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,SAAS,EAAER,kBAAkB,CAACS;AADzB;AADE,KAPsD;AAYjEC,IAAAA,UAAU,EAAE;AACVL,MAAAA,IAAI,EAAE;AACJM,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEZ,WAAW,CAACa;AAAvB,WAAD;AADR;AADP;AADI;AAZqD,GAAL;AAAA,CAA9D;;AAqBA,eAAeZ,iCAAf","sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @specification\n * Adds role='gridcell'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in bidirectional direction.\n * Triggers 'focusCell' action with 'Escape' on 'root'.\n */\nconst gridCellMultipleFocusableBehavior: Accessibility = props => ({\n  attributes: {\n    root: {\n      role: 'gridcell',\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.bidirectional,\n    },\n  },\n  keyActions: {\n    root: {\n      focusCell: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport default gridCellMultipleFocusableBehavior;\n"],"file":"gridCellMultipleFocusableBehavior.js"}