{"version":3,"sources":["behaviors/Chat/chatMessageBehavior.ts"],"names":["keyboardKey","IS_FOCUSABLE_ATTRIBUTE","FocusZoneTabbableElements","FocusZoneDirection","chatMessageBehavior","attributes","root","focusZone","props","handleTabKey","all","isCircularNavigation","direction","vertical","pagingSupportDisabled","keyActions","preventDefault","keyCombinations","keyCode","ArrowUp","ArrowDown","focus","Escape"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;AAEA,SAASC,yBAAT,EAAoCC,kBAApC,QAA8D,uBAA9D;AAEA;;;;;;;;;;;;;;AAaA,IAAMC,mBAA4D,GAAG,SAA/DA,mBAA+D;AAAA;;AAAA,SAAO;AAC1EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,sCACDL,sBADC,EACwB,IADxB,sCAEQ,CAAC,CAFT;AADM,KAD8D;AAO1EM,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAEP,yBAAyB,CAACQ,GADnC;AAELC,QAAAA,oBAAoB,EAAE,IAFjB;AAGLC,QAAAA,SAAS,EAAET,kBAAkB,CAACU,QAHzB;AAILC,QAAAA,qBAAqB,EAAE;AAJlB;AADE,KAP+D;AAe1EC,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE;AACJ;AACAU,QAAAA,cAAc,EAAE;AACdC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAElB,WAAW,CAACmB;AAAvB,WAAD,EAAmC;AAAED,YAAAA,OAAO,EAAElB,WAAW,CAACoB;AAAvB,WAAnC;AADH,SAFZ;AAKJC,QAAAA,KAAK,EAAE;AACLJ,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAElB,WAAW,CAACsB;AAAvB,WAAD;AADZ;AALH;AADI;AAf8D,GAAP;AAAA,CAArE;;AA8BA,eAAelB,mBAAf","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { FocusZoneTabbableElements, FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Sets the message to be a focusable element.\n * Adds a vertical circular focus zone navigation where a user navigates using a Tab key.\n * Adds a key action which prevents up and down arrow keys from navigating in FocusZone, we only want a Tab key to navigate.\n * Adds an escape key action which focuses the chat message, i.e., moves key handling from inside a message back to the chat list.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Focus is moved within the focusable children of the component using TAB key.\n * Does not handle PageDown and PageUp.\n */\nconst chatMessageBehavior: Accessibility<ChatMessageBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      tabIndex: -1,\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      direction: FocusZoneDirection.vertical,\n      pagingSupportDisabled: true,\n    },\n  },\n  keyActions: {\n    root: {\n      // prevents default FocusZone behavior, in this case, prevents using arrow keys as navigation (we only want a Tab key to navigate)\n      preventDefault: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowDown }],\n      },\n      focus: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type ChatMessageBehaviorProps = never;\n\nexport default chatMessageBehavior;\n"],"file":"chatMessageBehavior.js"}