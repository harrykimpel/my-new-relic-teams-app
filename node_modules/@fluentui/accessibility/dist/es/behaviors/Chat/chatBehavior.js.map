{"version":3,"sources":["behaviors/Chat/chatBehavior.ts"],"names":["keyboardKey","IS_FOCUSABLE_ATTRIBUTE","FocusZoneDirection","CHAT_FOCUSZONE_ATTRIBUTE","ChatBehavior","attributes","root","focusZone","props","shouldEnterInnerZone","event","getCode","Enter","direction","vertical","shouldResetActiveElementWhenTabFromZone","defaultTabbableElement","getLastTabbableElement","lastVisibleMessage","querySelector","chatItemsElements","querySelectorAll","length"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;AAEA,IAAMC,wBAAwB,GAAG,gBAAjC;AAEA;;;;;;;;;;;;AAWA,IAAMC,YAA8C,GAAG,SAAjDA,YAAiD;AAAA;;AAAA,SAAO;AAC5DC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI,KADgD;AAI5DC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK;AACHC,QAAAA,oBAAoB,EAAE,8BAAAC,KAAK;AAAA,iBAAIV,WAAW,CAACW,OAAZ,CAAoBD,KAApB,MAA+BV,WAAW,CAACY,KAA/C;AAAA,SADxB;AAEHC,QAAAA,SAAS,EAAEX,kBAAkB,CAACY,QAF3B;AAGHC,QAAAA,uCAAuC,EAAE,IAHtC;AAIHC,QAAAA,sBAAsB,EAAEC;AAJrB,iCAKFd,wBALE,EAKyB,EALzB,oDAMoB,IANpB;AADI;AAJiD,GAAP;AAAA,CAAvD;;AAgBA,IAAMc,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACX,IAAD,EAAoC;AACjE,MAAMY,kBAAkB,GAAGZ,IAAI,CAACa,aAAL,CAAmB,4BAAnB,CAA3B;AACA,MAAID,kBAAJ,EAAwB,OAAOA,kBAAP;AAExB,MAAME,iBAAiB,GAAGd,IAAI,CAACe,gBAAL,YACpBlB,wBADoB,iCAC2BF,sBAD3B,gBAA1B;AAGA,SAAOmB,iBAAiB,CAACE,MAAlB,GAA2B,CAA3B,GAAgCF,iBAAiB,CAACA,iBAAiB,CAACE,MAAlB,GAA2B,CAA5B,CAAjD,GAAkG,IAAzG;AACD,CARD;;AAYA,eAAelB,YAAf","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\n\nconst CHAT_FOCUSZONE_ATTRIBUTE = 'chat-focuszone';\n\n/**\n * @description\n * Adds a vertical focus zone navigation with a last message as a default tabbable element, pressing enter key focuses inside a message.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Focus is set initially on the specified default tabbable element.\n * Focused active element of the component is reset when TAB from the component.\n * Focus can be moved inside a child component with embeded inner FocusZone by pressing a specified key.\n * Does not handle PageDown and PageUp.\n */\nconst ChatBehavior: Accessibility<ChatBehaviorProps> = () => ({\n  attributes: {\n    root: {},\n  },\n  focusZone: {\n    props: {\n      shouldEnterInnerZone: event => keyboardKey.getCode(event) === keyboardKey.Enter,\n      direction: FocusZoneDirection.vertical,\n      shouldResetActiveElementWhenTabFromZone: true,\n      defaultTabbableElement: getLastTabbableElement, // select last chat message by default\n      [CHAT_FOCUSZONE_ATTRIBUTE]: '', // allows querying the default active element\n      pagingSupportDisabled: true,\n    },\n  },\n});\n\nconst getLastTabbableElement = (root: HTMLElement): HTMLElement => {\n  const lastVisibleMessage = root.querySelector('[data-last-visible=\"true\"]') as HTMLElement;\n  if (lastVisibleMessage) return lastVisibleMessage;\n\n  const chatItemsElements = root.querySelectorAll(\n    `[${CHAT_FOCUSZONE_ATTRIBUTE}] .ui-chat__message[${IS_FOCUSABLE_ATTRIBUTE}=\"true\"]`,\n  );\n  return chatItemsElements.length > 0 ? (chatItemsElements[chatItemsElements.length - 1] as HTMLElement) : null;\n};\n\nexport type ChatBehaviorProps = never;\n\nexport default ChatBehavior;\n"],"file":"chatBehavior.js"}