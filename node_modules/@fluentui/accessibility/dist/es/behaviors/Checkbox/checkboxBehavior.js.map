{"version":3,"sources":["behaviors/Checkbox/checkboxBehavior.ts"],"names":["keyboardKey","IS_FOCUSABLE_ATTRIBUTE","checkboxBehavior","props","attributes","root","checked","disabled","role","tabIndex","keyActions","performClick","keyCombinations","keyCode","Spacebar"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;AAEA;;;;;;;;;AAQA,IAAMC,gBAAsD,GAAG,SAAzDA,gBAAyD,CAAAC,KAAK;AAAA,SAAK;AACvEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACF,wBAAgB,CAAC,CAACF,KAAK,CAACG,OADtB;AAEF,yBAAiBH,KAAK,CAACI,QAFrB;AAGFC,QAAAA,IAAI,EAAE,UAHJ;AAIFC,QAAAA,QAAQ,EAAE;AAJR,SAKDR,sBALC,EAKwB,IALxB;AADM,KAD2D;AAUvES,IAAAA,UAAU,EAAE;AACVL,MAAAA,IAAI,EAAE;AACJM,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEb,WAAW,CAACc;AAAvB,WAAD;AADL;AADV;AADI;AAV2D,GAAL;AAAA,CAApE;;AAmBA,eAAeZ,gBAAf","sourcesContent":["import * as keyboardKey from 'keyboard-key';\nimport { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n\n/**\n * @specification\n * Adds role='checkbox'. This allows screen readers to handle the component as a checkbox button.\n * Adds attribute 'aria-checked=true' based on the property 'checked'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\nconst checkboxBehavior: Accessibility<CheckboxBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-checked': !!props.checked,\n      'aria-disabled': props.disabled,\n      role: 'checkbox',\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default checkboxBehavior;\n\nexport type CheckboxBehaviorProps = {\n  /** Whether or not item is checked. */\n  checked?: boolean;\n  /** If the checkbox is in disabled state. */\n  disabled?: boolean;\n};\n"],"file":"checkboxBehavior.js"}