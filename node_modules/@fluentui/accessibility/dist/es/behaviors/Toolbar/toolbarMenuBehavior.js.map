{"version":3,"sources":["behaviors/Toolbar/toolbarMenuBehavior.ts"],"names":["FocusZoneDirection","toolbarMenuItemBehavior","keyboardKey","toolbarMenuBehavior","attributes","root","role","keyActions","performClick","keyCombinations","keyCode","Enter","Spacebar","focusZone","props","isCircularNavigation","shouldFocusOnMount","direction","vertical","childBehaviors","item"],"mappings":"AACA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AAEA;;;;;;;;;;;AAUA,IAAMC,mBAA4D,GAAG,SAA/DA,mBAA+D;AAAA,SAAO;AAC1EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD8D;AAO1EC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAER,WAAW,CAACS;AAAvB,WAAD,EAAiC;AAAED,YAAAA,OAAO,EAAER,WAAW,CAACU;AAAvB,WAAjC;AADL;AADV;AADI,KAP8D;AAc1EC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EAAE,IADjB;AAELC,QAAAA,kBAAkB,EAAE,IAFf;AAGLC,QAAAA,SAAS,EAAEjB,kBAAkB,CAACkB;AAHzB;AADE,KAd+D;AAqB1EC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAEnB;AAAR;AArB0D,GAAP;AAAA,CAArE;;AA0BA,eAAeE,mBAAf","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport toolbarMenuItemBehavior from './toolbarMenuItemBehavior';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @description\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Component will get focus when mounted.\n */\nconst toolbarMenuBehavior: Accessibility<ToolbarMenuBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n  focusZone: {\n    props: {\n      isCircularNavigation: true,\n      shouldFocusOnMount: true,\n      direction: FocusZoneDirection.vertical,\n    },\n  },\n  childBehaviors: { item: toolbarMenuItemBehavior },\n});\n\nexport type ToolbarMenuBehaviorProps = never;\n\nexport default toolbarMenuBehavior;\n"],"file":"toolbarMenuBehavior.js"}