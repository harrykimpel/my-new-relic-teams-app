{"version":3,"sources":["behaviors/Toolbar/toolbarRadioGroupBehavior.ts"],"names":["keyboardKey","toolbarRadioGroupBehavior","attributes","root","role","keyActions","nextItem","keyCombinations","keyCode","ArrowDown","prevItem","ArrowUp"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;;AAGA;;;;;;;;AAQA,IAAMC,yBAAwE,GAAG,SAA3EA,yBAA2E;AAAA,SAAO;AACtFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD0E;AAOtFC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,QAAQ,EAAE;AACRC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAER,WAAW,CAACS;AAAvB,WAAD;AADT,SADN;AAIJC,QAAAA,QAAQ,EAAE;AACRH,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAER,WAAW,CAACW;AAAvB,WAAD;AADT;AAJN;AADI;AAP0E,GAAP;AAAA,CAAjF;;AAqBA,eAAeV,yBAAf","sourcesContent":["import * as keyboardKey from 'keyboard-key';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Implements ARIA Radio Group design pattern.\n * @specification\n *  Adds role='radiogroup'. This allows screen readers to handle the component as a radio group.\n *  Triggers 'nextItem' action with 'ArrowDown' on 'root'.\n *  Triggers 'prevItem' action with 'ArrowUp' on 'root'.\n */\nconst toolbarRadioGroupBehavior: Accessibility<ToolbarRadioGroupBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'radiogroup',\n    },\n  },\n\n  keyActions: {\n    root: {\n      nextItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowDown }],\n      },\n      prevItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }],\n      },\n    },\n  },\n});\n\nexport type ToolbarRadioGroupBehaviorProps = never;\n\nexport default toolbarRadioGroupBehavior;\n"],"file":"toolbarRadioGroupBehavior.js"}