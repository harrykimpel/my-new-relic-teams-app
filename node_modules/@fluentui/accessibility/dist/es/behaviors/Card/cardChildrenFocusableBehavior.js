import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';
import { FocusZoneTabbableElements } from '../../focusZone/types';
import * as keyboardKey from 'keyboard-key';
/**
 * @description
 * Behavior for a card component with multiple focusable child elements.
 * @specification
 * Adds role='group'.
 * Adds attribute 'aria-disabled=true' based on the property 'disabled'.
 * Adds attribute 'tabIndex=0' to 'root' slot.
 * Adds attribute 'data-is-focusable=true' to 'root' slot.
 * Triggers 'focusCard' action with 'Escape' on 'root'.
 */

var cardChildrenFocusableBehavior = function cardChildrenFocusableBehavior(props) {
  var _root;

  return {
    attributes: {
      root: (_root = {
        role: 'group',
        tabIndex: 0
      }, _defineProperty(_root, IS_FOCUSABLE_ATTRIBUTE, true), _defineProperty(_root, 'aria-disabled', props.disabled), _root)
    },
    focusZone: {
      props: {
        handleTabKey: FocusZoneTabbableElements.all,
        isCircularNavigation: true
      }
    },
    keyActions: {
      root: {
        focusCard: {
          keyCombinations: [{
            keyCode: keyboardKey.Escape
          }]
        }
      }
    }
  };
};

export default cardChildrenFocusableBehavior;
//# sourceMappingURL=cardChildrenFocusableBehavior.js.map
