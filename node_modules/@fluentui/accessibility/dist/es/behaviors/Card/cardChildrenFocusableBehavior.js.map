{"version":3,"sources":["behaviors/Card/cardChildrenFocusableBehavior.ts"],"names":["IS_FOCUSABLE_ATTRIBUTE","FocusZoneTabbableElements","keyboardKey","cardChildrenFocusableBehavior","props","attributes","root","role","tabIndex","disabled","focusZone","handleTabKey","all","isCircularNavigation","keyActions","focusCard","keyCombinations","keyCode","Escape"],"mappings":";AAEA,SAASA,sBAAT,QAAuC,kBAAvC;AACA,SAASC,yBAAT,QAA0C,uBAA1C;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AAEA;;;;;;;;;;;AAUA,IAAMC,6BAA+D,GAAG,SAAlEA,6BAAkE,CAAAC,KAAK;AAAA;;AAAA,SAAK;AAChFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,QAAQ,EAAE;AAFR,gCAGDR,sBAHC,EAGwB,IAHxB,0BAIF,eAJE,EAIeI,KAAK,CAACK,QAJrB;AADM,KADoE;AAShFC,IAAAA,SAAS,EAAE;AACTN,MAAAA,KAAK,EAAE;AACLO,QAAAA,YAAY,EAAEV,yBAAyB,CAACW,GADnC;AAELC,QAAAA,oBAAoB,EAAE;AAFjB;AADE,KATqE;AAehFC,IAAAA,UAAU,EAAE;AACVR,MAAAA,IAAI,EAAE;AACJS,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEf,WAAW,CAACgB;AAAvB,WAAD;AADR;AADP;AADI;AAfoE,GAAL;AAAA,CAA7E;;AAwBA,eAAef,6BAAf","sourcesContent":["import { Accessibility } from '../../types';\nimport { CardBehaviorProps } from './cardBehavior';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneTabbableElements } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @description\n * Behavior for a card component with multiple focusable child elements.\n * @specification\n * Adds role='group'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Triggers 'focusCard' action with 'Escape' on 'root'.\n */\nconst cardChildrenFocusableBehavior: Accessibility<CardBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'group',\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      'aria-disabled': props.disabled,\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n    },\n  },\n  keyActions: {\n    root: {\n      focusCard: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport default cardChildrenFocusableBehavior;\n"],"file":"cardChildrenFocusableBehavior.js"}