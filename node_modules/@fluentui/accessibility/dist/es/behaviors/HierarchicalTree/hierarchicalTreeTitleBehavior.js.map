{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeTitleBehavior.ts"],"names":["keyboardKey","IS_FOCUSABLE_ATTRIBUTE","hierarchicalTreeTitleBehavior","props","attributes","root","hasSubtree","tabIndex","keyActions","performClick","keyCombinations","keyCode","Enter","Spacebar"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;;AAGA;;;;;;;;AAQA,IAAMC,6BAA+D,GAAG,SAAlEA,6BAAkE,CAAAC,KAAK;AAAA;;AAAA,SAAK;AAChFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACE,CAACF,KAAK,CAACG,UAAP;AACFC,QAAAA,QAAQ,EAAE,CAAC;AADT,+BAEDN,sBAFC,EAEwB,IAFxB,iCAGI,UAHJ,QADF;AADM,KADoE;AAUhFO,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAE;AACJI,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEX,WAAW,CAACY;AAAvB,WAAD,EAAiC;AAAED,YAAAA,OAAO,EAAEX,WAAW,CAACa;AAAvB,WAAjC;AADL;AADV;AADI;AAVoE,GAAL;AAAA,CAA7E;;AAmBA,eAAeX,6BAAf","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n * Adds 'tabIndex' as '-1' if the title is a leaf node inside the tree.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nconst hierarchicalTreeTitleBehavior: Accessibility<TreeTitleBehavior> = props => ({\n  attributes: {\n    root: {\n      ...(!props.hasSubtree && {\n        tabIndex: -1,\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        role: 'treeitem',\n      }),\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default hierarchicalTreeTitleBehavior;\n\ntype TreeTitleBehavior = {\n  /** Indicated if tree title has a subtree */\n  hasSubtree?: boolean;\n  /** If subtree is opened. */\n  open?: boolean;\n};\n"],"file":"hierarchicalTreeTitleBehavior.js"}