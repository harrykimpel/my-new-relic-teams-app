{"version":3,"sources":["behaviors/Attachment/attachmentBehavior.ts"],"names":["attachmentBehavior","attributes","root","tabIndex","IS_FOCUSABLE_ATTRIBUTE","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAGA;;;;;AAKA,IAAMA,kBAA0D,GAAG,SAA7DA,kBAA6D;AAAA,SAAO;AACxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,QAAQ,EAAE;AADR,SAEDC,kCAFC,EAEwB,IAFxB;AADM,KAD4D;AAOxEC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAE;AACJI,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI;AAP4D,GAAP;AAAA,CAAnE;;eAkBeX,kB","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @specification\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nconst attachmentBehavior: Accessibility<AttachmentBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport type AttachmentBehaviorProps = never;\n\nexport default attachmentBehavior;\n"],"file":"attachmentBehavior.js"}