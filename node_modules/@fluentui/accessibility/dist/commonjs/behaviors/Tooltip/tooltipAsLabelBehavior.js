"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tooltipAsDescriptionBehavior = _interopRequireDefault(require("./tooltipAsDescriptionBehavior"));

/**
 * @description
 * Implements ARIA Tooltip design pattern.
 * Adds 'aria-label' to the button if passed as a prop to root or trigger instead of aria-labelledby pointing to the content id.
 *
 * @specification
 * Adds attribute 'role=tooltip' to 'tooltip' slot.
 * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.
 * Adds attribute 'aria-labelledby' based on the property 'contentId' to 'trigger' slot. This can be overriden by providing 'aria-labelledby' property directly to the component.
 * Triggers 'close' action with 'Escape' on 'trigger'.
 */
var tooltipAsLabelBehavior = function tooltipAsLabelBehavior(props) {
  var behaviorData = (0, _tooltipAsDescriptionBehavior.default)(props);
  var triggerAriaLabel = props.triggerAriaLabel;
  behaviorData.attributes = {
    trigger: Object.assign({}, triggerAriaLabel ? {
      'aria-label': triggerAriaLabel
    } : {
      'aria-labelledby': props['aria-labelledby'] || props.contentId
    }),
    tooltip: Object.assign({}, behaviorData.attributes.tooltip, {}, !triggerAriaLabel && !props['aria-labelledby'] && {
      id: props.contentId
    })
  };
  return behaviorData;
};

var _default = tooltipAsLabelBehavior;
exports.default = _default;
//# sourceMappingURL=tooltipAsLabelBehavior.js.map
