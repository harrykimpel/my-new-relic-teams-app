{"version":3,"sources":["behaviors/Icon/iconBehavior.ts"],"names":["iconBehavior","props","attributes","root","role","alt","undefined"],"mappings":";;;;;;;AAEA;;;;;;;;;AASA,IAAMA,YAA8C,GAAG,SAAjDA,YAAiD,CAAAC,KAAK;AAAA,SAAK;AAC/DC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJ,uBAAeH,KAAK,CAACI,GAAN,IAAaJ,KAAK,CAAC,YAAD,CAAlB,GAAmCK,SAAnC,GAA+C;AAF1D;AADI;AADmD,GAAL;AAAA,CAA5D;;eASeN,Y","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\n\n/**\n * @description\n * Icon is usually only visual representation and therefore is hidden from screen readers, unless 'alt' or 'aria-label' property is provided.\n *\n * @specification\n * Adds role='img'.\n * Adds attribute 'aria-hidden=true', if there is no 'alt' property provided.\n * Adds attribute 'aria-hidden=true', if there is no 'aria-label' property provided.\n */\nconst iconBehavior: Accessibility<IconBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'img',\n      'aria-hidden': props.alt || props['aria-label'] ? undefined : 'true',\n    },\n  },\n});\n\nexport default iconBehavior;\n\nexport type IconBehaviorProps = {\n  /** Alternative text. */\n  alt?: string;\n} & Pick<AccessibilityAttributes, 'aria-label'>;\n"],"file":"iconBehavior.js"}