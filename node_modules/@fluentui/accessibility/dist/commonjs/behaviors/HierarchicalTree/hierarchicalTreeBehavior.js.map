{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeBehavior.ts"],"names":["hierarchicalTreeBehavior","props","subtreeBehaviorData","attributes","root","role","keyActions","focusZone","direction","FocusZoneDirection","vertical"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;;;;;;AAOA,IAAMA,wBAA0D,GAAG,SAA7DA,wBAA6D,CAAAC,KAAK,EAAI;AAC1E,MAAMC,mBAAmB,GAAG,0CAA4B,EAA5B,CAA5B;AACA,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACCF,mBAAmB,CAACC,UAApB,CAA+BC,IADhC;AAEFC,QAAAA,IAAI,EAAE,MAFJ;AAGF,2BAAmBJ,KAAK,CAAC,iBAAD;AAHtB;AADM,KADP;AAQLK,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,oBACCF,mBAAmB,CAACI,UAApB,CAA+BF,IADhC;AADM,KARP;AAaLG,IAAAA,SAAS,EAAE;AACTN,MAAAA,KAAK,EAAE;AACLO,QAAAA,SAAS,EAAEC,0BAAmBC;AADzB;AADE;AAbN,GAAP;AAmBD,CArBD;;eAyBeV,wB","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport hierarchicalSubtreeBehavior from './hierarchicalSubtreeBehavior';\n\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n */\nconst hierarchicalTreeBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const subtreeBehaviorData = hierarchicalSubtreeBehavior({});\n  return {\n    attributes: {\n      root: {\n        ...subtreeBehaviorData.attributes.root,\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby'],\n      },\n    },\n    keyActions: {\n      root: {\n        ...subtreeBehaviorData.keyActions.root,\n      },\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical,\n      },\n    },\n  };\n};\n\ntype TreeBehaviorProps = {} & Pick<AccessibilityAttributes, 'aria-labelledby'>;\n\nexport default hierarchicalTreeBehavior;\n"],"file":"hierarchicalTreeBehavior.js"}