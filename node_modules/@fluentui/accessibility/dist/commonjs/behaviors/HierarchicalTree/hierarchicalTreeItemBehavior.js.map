{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeItemBehavior.ts"],"names":["hierarchicalTreeItemBehavior","props","attributes","root","role","items","length","open","tabIndex","IS_FOCUSABLE_ATTRIBUTE","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar","isSubtreeOpen","receiveFocus","ArrowLeft","collapse","focusSubtree","ArrowRight","expand"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAGA;;;;;;;;;;;;;AAaA,IAAMA,4BAAkE,GAAG,SAArEA,4BAAqE,CAAAC,KAAK;AAAA;;AAAA,SAAK;AACnFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE;AADJ,SAEEH,KAAK,CAACI,KAAN,IACFJ,KAAK,CAACI,KAAN,CAAYC,MADV;AAEA,yBAAiBL,KAAK,CAACM,IAFvB;AAGAC,QAAAA,QAAQ,EAAE,CAAC;AAHX,6CAICC,kCAJD,EAI0B,IAJ1B,+CAKM,UALN,QAFF;AADM,KADuE;AAanFC,IAAAA,UAAU,EAAE;AACVP,MAAAA,IAAI;AACFQ,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADZ,SAIEC,aAAa,CAAChB,KAAD,CAAb,IAAwB;AAC1BiB,QAAAA,YAAY,EAAE;AACZN,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACK;AAAvB,WAAD;AADL,SADY;AAI1BC,QAAAA,QAAQ,EAAE;AACRR,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACK;AAAvB,WAAD;AADT,SAJgB;AAO1BE,QAAAA,YAAY,EAAE;AACZT,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACQ;AAAvB,WAAD;AADL;AAPY,OAJ1B,MAeE,CAACL,aAAa,CAAChB,KAAD,CAAd,IAAyB;AAC3BsB,QAAAA,MAAM,EAAE;AACNX,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACQ;AAAvB,WAAD;AADX;AADmB,OAf3B;AADM;AAbuE,GAAL;AAAA,CAAhF;;AA6CA;AACA,IAAML,aAAa,GAAG,SAAhBA,aAAgB,CAAChB,KAAD,EAA2C;AAAA,MACvDI,KADuD,GACvCJ,KADuC,CACvDI,KADuD;AAAA,MAChDE,IADgD,GACvCN,KADuC,CAChDM,IADgD;AAE/D,SAAO,CAAC,EAAEF,KAAK,IAAIA,KAAK,CAACC,MAAf,IAAyBC,IAA3B,CAAR;AACD,CAHD;;eAKeP,4B","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds role 'treeitem' to a non-leaf item and 'none' to a leaf item.\n * Adds 'aria-expanded' with a value based on the 'open' prop if item is not a leaf.\n * Adds 'tabIndex' as '-1' if the item is not a leaf.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Triggers 'receiveFocus' action with 'ArrowLeft' on 'root', when has an opened subtree.\n * Triggers 'collapse' action with 'ArrowLeft' on 'root', when has an opened subtree.\n * Triggers 'expand' action with 'ArrowRight' on 'root', when has a closed subtree.\n * Triggers 'focusSubtree' action with 'ArrowRight' on 'root', when has an opened subtree.\n */\nconst hierarchicalTreeItemBehavior: Accessibility<TreeItemBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'none',\n      ...(props.items &&\n        props.items.length && {\n          'aria-expanded': props.open,\n          tabIndex: -1,\n          [IS_FOCUSABLE_ATTRIBUTE]: true,\n          role: 'treeitem',\n        }),\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n      ...(isSubtreeOpen(props) && {\n        receiveFocus: {\n          keyCombinations: [{ keyCode: keyboardKey.ArrowLeft }],\n        },\n        collapse: {\n          keyCombinations: [{ keyCode: keyboardKey.ArrowLeft }],\n        },\n        focusSubtree: {\n          keyCombinations: [{ keyCode: keyboardKey.ArrowRight }],\n        },\n      }),\n      ...(!isSubtreeOpen(props) && {\n        expand: {\n          keyCombinations: [{ keyCode: keyboardKey.ArrowRight }],\n        },\n      }),\n    },\n  },\n});\n\nexport type TreeItemBehaviorProps = {\n  /** If item is a subtree, it contains items. */\n  items?: object[];\n  /** If item is a subtree, it indicates if it's open. */\n  open?: boolean;\n};\n\n/** Checks if current tree item has a subtree and it is opened */\nconst isSubtreeOpen = (props: TreeItemBehaviorProps): boolean => {\n  const { items, open } = props;\n  return !!(items && items.length && open);\n};\n\nexport default hierarchicalTreeItemBehavior;\n"],"file":"hierarchicalTreeItemBehavior.js"}