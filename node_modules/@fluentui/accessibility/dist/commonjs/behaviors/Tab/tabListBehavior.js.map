{"version":3,"sources":["behaviors/Tab/tabListBehavior.ts"],"names":["tabListBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectionalDomOrder","childBehaviors","item","tabBehavior"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;;;;;;;;AASA,IAAMA,eAA8B,GAAG,SAAjCA,eAAiC;AAAA,SAAO;AAC5CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADgC;AAM5CC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAEC,0BAAmBC;AAFzB;AADE,KANiC;AAY5CC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC;AADQ;AAZ4B,GAAP;AAAA,CAAvC;;eAiBeZ,e","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport tabBehavior from './tabBehavior';\n\n/**\n * @description\n * Implements ARIA Tabs design pattern.\n * Child item components need to have tabBehavior assigned.\n * @specification\n * Adds role 'tablist' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nconst tabListBehavior: Accessibility = () => ({\n  attributes: {\n    root: {\n      role: 'tablist',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: tabBehavior,\n  },\n});\n\nexport default tabListBehavior;\n"],"file":"tabListBehavior.js"}