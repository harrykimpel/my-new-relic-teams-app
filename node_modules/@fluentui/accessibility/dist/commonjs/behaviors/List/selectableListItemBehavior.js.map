{"version":3,"sources":["behaviors/List/selectableListItemBehavior.ts"],"names":["selectableListItemBehavior","props","attributes","root","role","selected","IS_FOCUSABLE_ATTRIBUTE","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAIA;;;;;;;AAOA,IAAMA,0BAAgE,GAAG,SAAnEA,0BAAmE,CAAAC,KAAK;AAAA,SAAK;AACjFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE,QADJ;AAEF,yBAAiB,CAAC,CAACH,KAAK,CAACI;AAFvB,SAGDC,kCAHC,EAGwB,IAHxB;AADM,KADqE;AAQjFC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI;AARqE,GAAL;AAAA,CAA9E;;eAiBeb,0B","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { ListItemBehaviorProps } from './listItemBehavior';\n\n/**\n * @specification\n * Adds role='option'. This role is used for a selectable item in a list.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nconst selectableListItemBehavior: Accessibility<ListItemBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'option',\n      'aria-selected': !!props.selected,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default selectableListItemBehavior;\n"],"file":"selectableListItemBehavior.js"}