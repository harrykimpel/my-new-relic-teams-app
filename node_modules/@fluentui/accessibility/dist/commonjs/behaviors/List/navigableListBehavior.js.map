{"version":3,"sources":["behaviors/List/navigableListBehavior.ts"],"names":["navigableListBehavior","props","attributes","root","role","focusZone","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectionalDomOrder"],"mappings":";;;;;;;AAAA;;AAIA;;;;;AAKA,IAAMA,qBAAuD,GAAG,SAA1DA,qBAA0D,CAAAC,KAAK;AAAA,SAAK;AACxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD4D;AAMxEC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAEC,0BAAmBC;AAFzB;AADE;AAN6D,GAAL;AAAA,CAArE;;eAceT,qB","sourcesContent":["import { FocusZoneDirection } from '../../focusZone/types';\nimport { Accessibility } from '../../types';\nimport { ListBehaviorProps } from './listBehavior';\n\n/**\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n */\nconst navigableListBehavior: Accessibility<ListBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n});\n\nexport default navigableListBehavior;\n"],"file":"navigableListBehavior.js"}