{"version":3,"sources":["behaviors/Menu/submenuBehavior.ts"],"names":["submenuBehavior","attributes","root","role","focusZone","props","isCircularNavigation","shouldFocusOnMount","direction","FocusZoneDirection","vertical","childBehaviors","item","menuItemBehavior"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;;;;;;;;;AAUA,IAAMA,eAA8B,GAAG,SAAjCA,eAAiC;AAAA,SAAO;AAC5CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADgC;AAM5CC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EAAE,IADjB;AAELC,QAAAA,kBAAkB,EAAE,IAFf;AAGLC,QAAAA,SAAS,EAAEC,0BAAmBC;AAHzB;AADE,KANiC;AAa5CC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAEC;AAAR;AAb4B,GAAP;AAAA,CAAvC;;eAgBeb,e","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport menuItemBehavior from './menuItemBehavior';\n\n/**\n * @description\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Component will get focus when mounted.\n */\nconst submenuBehavior: Accessibility = () => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n  focusZone: {\n    props: {\n      isCircularNavigation: true,\n      shouldFocusOnMount: true,\n      direction: FocusZoneDirection.vertical,\n    },\n  },\n  childBehaviors: { item: menuItemBehavior },\n});\n\nexport default submenuBehavior;\n"],"file":"submenuBehavior.js"}