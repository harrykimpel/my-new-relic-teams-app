{"version":3,"sources":["behaviors/Card/cardChildrenFocusableBehavior.ts"],"names":["cardChildrenFocusableBehavior","props","attributes","root","role","tabIndex","IS_FOCUSABLE_ATTRIBUTE","disabled","focusZone","handleTabKey","FocusZoneTabbableElements","all","isCircularNavigation","keyActions","focusCard","keyCombinations","keyCode","keyboardKey","Escape"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;AAUA,IAAMA,6BAA+D,GAAG,SAAlEA,6BAAkE,CAAAC,KAAK;AAAA;;AAAA,SAAK;AAChFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,QAAQ,EAAE;AAFR,8CAGDC,kCAHC,EAGwB,IAHxB,wCAIF,eAJE,EAIeL,KAAK,CAACM,QAJrB;AADM,KADoE;AAShFC,IAAAA,SAAS,EAAE;AACTP,MAAAA,KAAK,EAAE;AACLQ,QAAAA,YAAY,EAAEC,iCAA0BC,GADnC;AAELC,QAAAA,oBAAoB,EAAE;AAFjB;AADE,KATqE;AAehFC,IAAAA,UAAU,EAAE;AACVV,MAAAA,IAAI,EAAE;AACJW,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD;AADR;AADP;AADI;AAfoE,GAAL;AAAA,CAA7E;;eAwBelB,6B","sourcesContent":["import { Accessibility } from '../../types';\nimport { CardBehaviorProps } from './cardBehavior';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneTabbableElements } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @description\n * Behavior for a card component with multiple focusable child elements.\n * @specification\n * Adds role='group'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Triggers 'focusCard' action with 'Escape' on 'root'.\n */\nconst cardChildrenFocusableBehavior: Accessibility<CardBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'group',\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      'aria-disabled': props.disabled,\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n    },\n  },\n  keyActions: {\n    root: {\n      focusCard: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport default cardChildrenFocusableBehavior;\n"],"file":"cardChildrenFocusableBehavior.js"}