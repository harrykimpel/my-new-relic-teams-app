"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _types = require("../../focusZone/types");

var _toolbarMenuItemBehavior = _interopRequireDefault(require("./toolbarMenuItemBehavior"));

var keyboardKey = _interopRequireWildcard(require("keyboard-key"));

/**
 * @description
 * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.
 *
 * @specification
 * Adds role='menu'.
 * Provides arrow key navigation in vertical direction.
 * Keyboard navigation is circular.
 * Component will get focus when mounted.
 */
var toolbarMenuBehavior = function toolbarMenuBehavior() {
  return {
    attributes: {
      root: {
        role: 'menu'
      }
    },
    keyActions: {
      root: {
        performClick: {
          keyCombinations: [{
            keyCode: keyboardKey.Enter
          }, {
            keyCode: keyboardKey.Spacebar
          }]
        }
      }
    },
    focusZone: {
      props: {
        isCircularNavigation: true,
        shouldFocusOnMount: true,
        direction: _types.FocusZoneDirection.vertical
      }
    },
    childBehaviors: {
      item: _toolbarMenuItemBehavior.default
    }
  };
};

var _default = toolbarMenuBehavior;
exports.default = _default;
//# sourceMappingURL=toolbarMenuBehavior.js.map
