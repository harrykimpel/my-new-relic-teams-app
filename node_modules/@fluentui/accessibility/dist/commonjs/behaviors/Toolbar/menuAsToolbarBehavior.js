"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _types = require("../../focusZone/types");

var _menuItemAsToolbarButtonBehavior = _interopRequireDefault(require("./menuItemAsToolbarButtonBehavior"));

/**
 * @description
 * Implements ARIA Toolbar design pattern.
 * Child item components need to have menuItemAsToolbarButtonBehavior assigned.
 * @specification
 * Adds role 'toolbar' to 'root' slot.
 * Provides arrow key navigation in bidirectionalDomOrder direction.
 * When component's container element receives focus, focus will be set to the default focusable child element of the component.
 */
var menuAsToolbarBehavior = function menuAsToolbarBehavior() {
  return {
    attributes: {
      root: {
        role: 'toolbar'
      }
    },
    focusZone: {
      props: {
        shouldFocusInnerElementWhenReceivedFocus: true,
        direction: _types.FocusZoneDirection.bidirectionalDomOrder
      }
    },
    childBehaviors: {
      item: _menuItemAsToolbarButtonBehavior.default
    }
  };
};

var _default = menuAsToolbarBehavior;
exports.default = _default;
//# sourceMappingURL=menuAsToolbarBehavior.js.map
