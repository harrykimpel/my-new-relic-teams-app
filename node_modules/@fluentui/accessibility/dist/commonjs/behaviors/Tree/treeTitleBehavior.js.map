{"version":3,"sources":["behaviors/Tree/treeTitleBehavior.ts"],"names":["treeTitleBehavior","props","attributes","root","hasSubtree","tabIndex","IS_FOCUSABLE_ATTRIBUTE","treeSize","index","level","selectable","selected","undefined","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Spacebar"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAGA;;;;;;;;;;;;AAYA,IAAMA,iBAAwD,GAAG,SAA3DA,iBAA2D,CAAAC,KAAK;AAAA;;AAAA,SAAK;AACzEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACE,CAACF,KAAK,CAACG,UAAP;AACFC,QAAAA,QAAQ,EAAE,CAAC;AADT,6CAEDC,kCAFC,EAEwB,IAFxB,+CAGI,UAHJ,uCAIF,cAJE,EAIcL,KAAK,CAACM,QAJpB,uCAKF,eALE,EAKeN,KAAK,CAACO,KALrB,uCAMF,YANE,EAMYP,KAAK,CAACQ,KANlB,uCAOF,eAPE,EAOeR,KAAK,CAACS,UAAN,GAAmBT,KAAK,CAACU,QAAN,IAAkB,KAArC,GAA6CC,SAP5D,QADF;AADM,KAD6D;AAczEC,IAAAA,UAAU,EAAE;AACVV,MAAAA,IAAI,EAAE;AACJW,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD;AADL;AADV;AADI;AAd6D,GAAL;AAAA,CAAtE;;eAuBelB,iB","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n *  Adds attribute 'aria-selected=true' based on the properties 'selectable' & 'selected' if the component has 'hasSubtree' property false or undefined. Does not set anything if true.\n *  Triggers 'performClick' action with 'Spacebar' on 'root', when tree title is selectable.\n *  @specification\n * Adds attribute 'tabIndex=-1' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.\n * Adds attribute 'role=treeitem' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.\n * Adds attribute 'aria-setsize=3' based on the property 'treeSize' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Adds attribute 'aria-posinset=2' based on the property 'index' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Adds attribute 'aria-level=1' based on the property 'level' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Triggers 'performClick' action with 'Spacebar' on 'root'.\n */\nconst treeTitleBehavior: Accessibility<TreeTitleBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      ...(!props.hasSubtree && {\n        tabIndex: -1,\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        role: 'treeitem',\n        'aria-setsize': props.treeSize,\n        'aria-posinset': props.index,\n        'aria-level': props.level,\n        'aria-selected': props.selectable ? props.selected || false : undefined,\n      }),\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default treeTitleBehavior;\n\nexport type TreeTitleBehaviorProps = {\n  /** Indicated if tree title has a subtree */\n  hasSubtree?: boolean;\n  level?: number;\n  treeSize?: number;\n  index?: number;\n  selected?: boolean;\n  selectable?: boolean;\n};\n"],"file":"treeTitleBehavior.js"}