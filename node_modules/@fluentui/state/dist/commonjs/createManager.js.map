{"version":3,"sources":["createManager.ts"],"names":["createManager","config","actions","debug","middleware","sideEffects","state","_state","Object","assign","getState","setState","partial","manager","keys","forEach","actionName","enhancedAction","action","prevState","args","applyAction","applyMiddleware","applySideEffects","process","env","NODE_ENV","console","log","name","actionResult","middlewareItem","index","prev","next","sideEffect"],"mappings":"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","sourcesContent":["import { AnyActions, EnhancedAction, Manager, ManagerConfig } from './types';\n\nconst createManager = <State, Actions extends AnyActions>(\n  config: ManagerConfig<State, Actions>,\n): Manager<State, Actions> => {\n  const { actions, debug, middleware = [], sideEffects = [], state } = config;\n  const _state: State = Object.assign({}, state) as State;\n\n  const getState = (): State => Object.assign({}, _state);\n  const setState = (partial: Partial<State>): State => Object.assign(_state, partial);\n\n  const manager: Manager<State, Actions> = {\n    actions: {} as Actions,\n    get state() {\n      return getState();\n    },\n  };\n\n  // assign actions to manager's api\n  Object.keys(actions).forEach(actionName => {\n    const enhancedAction = actions[actionName];\n    const action = (...args: Parameters<typeof enhancedAction>) => {\n      const prevState = getState();\n\n      applyAction(enhancedAction, ...args);\n\n      applyMiddleware(prevState);\n      applySideEffects(prevState);\n    };\n    (manager.actions as any)[actionName] = action;\n  });\n\n  const applyAction = <A extends EnhancedAction<State, Actions>>(action: A, ...args: Parameters<A>) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (debug) {\n        // eslint-disable-next-line no-console\n        console.log('manager ACTION', action.name || 'Anonymous');\n      }\n    }\n    const actionResult = action(...args)(getState(), manager.actions);\n\n    if (actionResult) {\n      setState(actionResult);\n    }\n  };\n\n  const applyMiddleware = (prevState: State) => {\n    middleware.forEach((middlewareItem, index) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (debug) {\n          // eslint-disable-next-line no-console\n          console.log(`manager MIDDLEWARE[${index}]`, {\n            prev: prevState,\n            next: getState(),\n          });\n        }\n      }\n\n      setState(middlewareItem(prevState, getState(), manager.actions));\n    });\n  };\n\n  const applySideEffects = (prevState: State): void => {\n    sideEffects.forEach((sideEffect, index) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (debug) {\n          // eslint-disable-next-line no-console\n          console.log(`manager SIDE_EFFECT[${index}]`);\n        }\n      }\n\n      sideEffect(prevState, manager.state);\n    });\n  };\n\n  return manager;\n};\n\nexport default createManager;\n"],"file":"createManager.js"}