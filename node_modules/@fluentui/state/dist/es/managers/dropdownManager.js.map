{"version":3,"sources":["managers/dropdownManager.ts"],"names":["createManager","createDropdownManager","config","state","multiple","open","searchQuery","items","values","actions","clear","close","select","item","indexOf","toString","unselect"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AAyBA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MACnCC,MADmC,uEACoC,EADpC;AAAA,SAGnCF,aAAa,mBACRE,MADQ;AAEXC,IAAAA,KAAK;AACHC,MAAAA,QAAQ,EAAE,KADP;AAEHC,MAAAA,IAAI,EAAE,KAFH;AAIHC,MAAAA,WAAW,EAAE,EAJV;AAMHC,MAAAA,KAAK,EAAE,EANJ;AAOHC,MAAAA,MAAM,EAAE;AAPL,OASAN,MAAM,CAACC,KATP,CAFM;AAaXM,IAAAA,OAAO;AACLC,MAAAA,KAAK,EAAE;AAAA,eAAM;AAAA,iBAAO;AAAEF,YAAAA,MAAM,EAAE;AAAV,WAAP;AAAA,SAAN;AAAA,OADF;AAGLG,MAAAA,KAAK,EAAE;AAAA,eAAM;AAAA,iBAAO;AAAEN,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAA,SAAN;AAAA,OAHF;AAILA,MAAAA,IAAI,EAAE;AAAA,eAAM;AAAA,iBAAO;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAA,SAAN;AAAA,OAJD;AAMLO,MAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,eAAa,UAAAV,KAAK;AAAA,iBAAK;AAAEK,YAAAA,MAAM,EAAE,CAACL,KAAK,CAACI,KAAN,CAAYO,OAAZ,CAAoBD,IAApB,EAA0BE,QAA1B,EAAD;AAAV,WAAL;AAAA,SAAlB;AAAA,OANH;AAOLC,MAAAA,QAAQ,EAAE,kBAACH,IAAD;AAAA,eAAa,UAAAV,KAAK;AAAA,iBAAK;AAAEK,YAAAA,MAAM,EAAE,CAACL,KAAK,CAACI,KAAN,CAAYO,OAAZ,CAAoBD,IAApB,EAA0BE,QAA1B,EAAD;AAAV,WAAL;AAAA,SAAlB;AAAA;AAPL,OASFb,MAAM,CAACO,OATL;AAbI,KAHsB;AAAA,CAA9B","sourcesContent":["import createManager from '../createManager';\nimport { Manager, ManagerConfig } from '../types';\n\nexport type DropdownActions<I> = {\n  clear: () => void;\n\n  open: () => void;\n  close: () => void;\n\n  select: (item: I) => void;\n  unselect: (item: I) => void;\n};\n\nexport type DropdownState<I> = {\n  multiple: boolean;\n  open: boolean;\n\n  searchQuery: string;\n\n  items: I[];\n  values: string[];\n};\n\nexport type DropdownManager<I> = Manager<DropdownState<I>, DropdownActions<I>>;\n\nexport const createDropdownManager = <I>(\n  config: Partial<ManagerConfig<DropdownState<I>, DropdownActions<I>>> = {},\n): DropdownManager<I> =>\n  createManager<DropdownState<I>, DropdownActions<I>>({\n    ...config,\n    state: {\n      multiple: false,\n      open: false,\n\n      searchQuery: '',\n\n      items: [],\n      values: [],\n\n      ...config.state,\n    },\n    actions: {\n      clear: () => () => ({ values: [] }),\n\n      close: () => () => ({ open: false }),\n      open: () => () => ({ open: true }),\n\n      select: (item: I) => state => ({ values: [state.items.indexOf(item).toString()] }),\n      unselect: (item: I) => state => ({ values: [state.items.indexOf(item).toString()] }),\n\n      ...config.actions,\n    },\n  });\n"],"file":"dropdownManager.js"}