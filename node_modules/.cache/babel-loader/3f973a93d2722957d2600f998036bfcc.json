{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport * as keyboardKey from 'keyboard-key';\n/**\n * @specification\n * Adds role='columnheader'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\n\nvar gridHeaderCellBehavior = function gridHeaderCellBehavior(props) {\n  return {\n    attributes: {\n      root: _defineProperty({\n        role: 'columnheader'\n      }, IS_FOCUSABLE_ATTRIBUTE, true)\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: keyboardKey.Spacebar\n          }]\n        }\n      }\n    }\n  };\n};\n\nexport default gridHeaderCellBehavior;","map":{"version":3,"sources":["behaviors/Table/gridHeaderCellBehavior.ts"],"names":["gridHeaderCellBehavior","attributes","root","role","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar"],"mappings":";AACA,SAAA,sBAAA,QAAA,kBAAA;AACA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA;;;;;;AAKA,IAAMA,sBAAqC,GAAG,SAAxCA,sBAAwC,CAAA,KAAA,EAAK;AAAA,SAAK;AACtDC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,eAAA,CAAA;AACFC,QAAAA,IAAI,EAAE;AADJ,OAAA,EAAA,sBAAA,EAAA,IAAA;AADM,KAD0C;AAOtDC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI;AAP0C,GAAL;AAAnD,CAAA;;AAgBA,eAAA,sBAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @specification\n * Adds role='columnheader'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\nconst gridHeaderCellBehavior: Accessibility = props => ({\n  attributes: {\n    root: {\n      role: 'columnheader',\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default gridHeaderCellBehavior;\n"]},"metadata":{},"sourceType":"module"}