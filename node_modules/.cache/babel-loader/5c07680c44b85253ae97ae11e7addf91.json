{"ast":null,"code":"import getBorderFocusStyles from '../../getBorderFocusStyles';\nvar cardStyles = {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables,\n        theme = _ref.theme;\n    var siteVariables = theme.siteVariables;\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius\n    });\n    return Object.assign({\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n      padding: v.padding,\n      width: v.width,\n      height: v.height,\n      backgroundColor: v.backgroundColor,\n      boxShadow: v.boxShadow,\n      ':hover': {\n        backgroundColor: v.backgroundColorHover,\n        borderColor: v.borderColorHover,\n        boxShadow: v.boxShadowHover\n      },\n      borderWidth: v.borderWidth,\n      borderStyle: v.borderStyle,\n      borderColor: v.borderColor,\n      borderRadius: v.borderRadius\n    }, p.size === 'small' && {\n      width: v.sizeSmallWidth,\n      height: v.sizeSmallHeight,\n      padding: v.sizeSmallPadding\n    }, {}, p.size === 'large' && {\n      width: v.sizeLargeWidth,\n      height: v.sizeLargeHeight,\n      padding: v.sizeLargePadding\n    }, {}, p.fluid && {\n      width: v.fluidWidth,\n      height: v.fluidHeight\n    }, {}, p.horizontal && {\n      flexDirection: 'row'\n    }, {}, p.compact && {\n      padding: v.compactPadding\n    }, {}, p.centered && {\n      alignItems: 'center'\n    }, {}, p.actionable && {\n      cursor: 'pointer',\n      ':focus-visible': {\n        backgroundColor: v.backgroundColorFocus,\n        boxShadow: v.boxShadowFocus\n      },\n      ':active': {\n        backgroundColor: v.backgroundColorPressed,\n        borderColor: v.borderColorPressed,\n        boxShadow: v.boxShadowPressed\n      }\n    }, {}, p.disabled && {\n      cursor: 'not-allowed',\n      color: v.colorDisabled,\n      backgroundColor: v.backgroundColorDisabled,\n      borderColor: v.borderColorDisabled,\n      boxShadow: v.boxShadowDisabled,\n      ':hover': {\n        boxShadow: v.boxShadowDisabled\n      },\n      ':focus-visible': {\n        boxShadow: v.boxShadowDisabled\n      },\n      ':active': {\n        boxShadow: v.boxShadowDisabled\n      }\n    }, {}, borderFocusStyles);\n  }\n};\nexport default cardStyles;","map":{"version":3,"sources":["themes/teams/components/Card/cardStyles.ts"],"names":["cardStyles","root","props","p","variables","v","theme","siteVariables","borderFocusStyles","getBorderFocusStyles","borderRadius","display","flexDirection","position","padding","width","height","backgroundColor","boxShadow","borderColor","boxShadowHover","borderWidth","borderStyle","sizeSmallPadding","sizeLargePadding","fluidHeight","compactPadding","alignItems","cursor","boxShadowFocus","boxShadowPressed","color","boxShadowDisabled"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CardVariables } from './cardVariables';\nimport { CardStylesProps } from '../../../../components/Card/Card';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\n\nconst cardStyles: ComponentSlotStylesPrepared<CardStylesProps, CardVariables> = {\n  root: ({ props: p, variables: v, theme }): ICSSInJSStyle => {\n    const { siteVariables } = theme;\n\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: v.borderRadius,\n    });\n\n    return {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n      padding: v.padding,\n      width: v.width,\n      height: v.height,\n      backgroundColor: v.backgroundColor,\n      boxShadow: v.boxShadow,\n      ':hover': {\n        backgroundColor: v.backgroundColorHover,\n        borderColor: v.borderColorHover,\n        boxShadow: v.boxShadowHover,\n      },\n\n      borderWidth: v.borderWidth,\n      borderStyle: v.borderStyle,\n      borderColor: v.borderColor,\n      borderRadius: v.borderRadius,\n\n      ...(p.size === 'small' && { width: v.sizeSmallWidth, height: v.sizeSmallHeight, padding: v.sizeSmallPadding }),\n      ...(p.size === 'large' && { width: v.sizeLargeWidth, height: v.sizeLargeHeight, padding: v.sizeLargePadding }),\n      ...(p.fluid && { width: v.fluidWidth, height: v.fluidHeight }),\n      ...(p.horizontal && { flexDirection: 'row' }),\n      ...(p.compact && { padding: v.compactPadding }),\n      ...(p.centered && { alignItems: 'center' }),\n\n      ...(p.actionable && {\n        cursor: 'pointer',\n        ':focus-visible': {\n          backgroundColor: v.backgroundColorFocus,\n          boxShadow: v.boxShadowFocus,\n        },\n        ':active': {\n          backgroundColor: v.backgroundColorPressed,\n          borderColor: v.borderColorPressed,\n          boxShadow: v.boxShadowPressed,\n        },\n      }),\n\n      ...(p.disabled && {\n        cursor: 'not-allowed',\n        color: v.colorDisabled,\n        backgroundColor: v.backgroundColorDisabled,\n        borderColor: v.borderColorDisabled,\n        boxShadow: v.boxShadowDisabled,\n        ':hover': {\n          boxShadow: v.boxShadowDisabled,\n        },\n        ':focus-visible': {\n          boxShadow: v.boxShadowDisabled,\n        },\n        ':active': {\n          boxShadow: v.boxShadowDisabled,\n        },\n      }),\n\n      ...borderFocusStyles,\n    };\n  },\n};\n\nexport default cardStyles;\n"]},"metadata":{},"sourceType":"module"}