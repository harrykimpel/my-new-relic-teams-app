{"ast":null,"code":"import getBorderFocusStyles from '../../getBorderFocusStyles';\nvar splitButtonStyles = {\n  menuButton: function menuButton(_ref) {\n    var p = _ref.props,\n        v = _ref.variables;\n    return Object.assign({\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderRightWidth: 0,\n      padding: v.padding\n    }, p.size === 'small' && {\n      height: v.smallDimension,\n      padding: v.smallPadding,\n      minWidth: v.smallMinWidth,\n      boxShadow: v.smallBoxShadow\n    }, {\n      ':focus-visible': {\n        borderRightWidth: 0,\n        ':before': {\n          borderRightWidth: 0\n        },\n        ':after': {\n          borderRightWidth: 0\n        }\n      },\n      ':active': {\n        animationName: 'unset',\n        animationDuration: 'unset'\n      }\n    });\n  },\n  root: function root(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables,\n        siteVariables = _ref2.theme.siteVariables;\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: {\n        borderRadius: v.focusBorderRadius,\n        borderWidth: v.focusBorderWidth,\n        focusInnerBorderColor: v.focusInnerBorderColor,\n        focusOuterBorderColor: v.focusOuterBorderColor,\n        zIndexes: {\n          foreground: v.focusBorderZIndex\n        }\n      }\n    });\n    return {\n      borderRadius: v.borderRadius,\n      position: 'relative',\n      display: 'inline-block',\n      ':focus-within': Object.assign({\n        boxShadow: 'none'\n      }, p.isFromKeyboard && Object.assign({}, borderFocusStyles[':focus-visible']))\n    };\n  }\n};\nexport default splitButtonStyles;","map":{"version":3,"sources":["themes/teams/components/SplitButton/splitButtonStyles.ts"],"names":["splitButtonStyles","menuButton","p","v","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","padding","height","minWidth","boxShadow","smallBoxShadow","animationName","animationDuration","root","props","variables","theme","siteVariables","borderFocusStyles","getBorderFocusStyles","borderRadius","borderWidth","focusInnerBorderColor","focusOuterBorderColor","zIndexes","foreground","focusBorderZIndex","position","display"],"mappings":"AACA,OAAA,oBAAA,MAAA,4BAAA;AAIA,IAAMA,iBAA4F,GAAG;AACnGC,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,IAAA,EAAA;AAAA,QAAUC,CAAV,GAAA,IAAA,CAAA,KAAA;AAAA,QAAwBC,CAAxB,GAAA,IAAA,CAAA,SAAA;AAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AACVC,MAAAA,oBAAoB,EADV,CAAA;AAEVC,MAAAA,uBAAuB,EAFb,CAAA;AAGVC,MAAAA,gBAAgB,EAHN,CAAA;AAIVC,MAAAA,OAAO,EAAEJ,CAAC,CAACI;AAJD,KAAA,EAMNL,CAAC,CAADA,IAAAA,KAAAA,OAAAA,IAAsB;AACxBM,MAAAA,MAAM,EAAEL,CAAC,CADe,cAAA;AAExBI,MAAAA,OAAO,EAAEJ,CAAC,CAFc,YAAA;AAGxBM,MAAAA,QAAQ,EAAEN,CAAC,CAHa,aAAA;AAIxBO,MAAAA,SAAS,EAAEP,CAAC,CAACQ;AAJW,KANhB,EAAA;AAaV,wBAAkB;AAChBL,QAAAA,gBAAgB,EADA,CAAA;AAGhB,mBAAW;AACTA,UAAAA,gBAAgB,EAAE;AADT,SAHK;AAOhB,kBAAU;AACRA,UAAAA,gBAAgB,EAAE;AADV;AAPM,OAbR;AAyBV,iBAAW;AACTM,QAAAA,aAAa,EADJ,OAAA;AAETC,QAAAA,iBAAiB,EAAE;AAFV;AAzBD,KAAA,CAAA;AADuF,GAAA;AAgCnGC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,KAAA,EAAyE;AAAA,QAA/DZ,CAA+D,GAAA,KAAA,CAAtEa,KAAsE;AAAA,QAAjDZ,CAAiD,GAAA,KAAA,CAA5Da,SAA4D;AAAA,QAArCE,aAAqC,GAAA,KAAA,CAA9CD,KAA8C,CAArCC,aAAqC;AAC7E,QAAMC,iBAAiB,GAAGC,oBAAoB,CAAC;AAC7CJ,MAAAA,SAAS,EAAE;AACTK,QAAAA,YAAY,EAAElB,CAAC,CADN,iBAAA;AAETmB,QAAAA,WAAW,EAAEnB,CAAC,CAFL,gBAAA;AAGToB,QAAAA,qBAAqB,EAAEpB,CAAC,CAHf,qBAAA;AAITqB,QAAAA,qBAAqB,EAAErB,CAAC,CAJf,qBAAA;AAKTsB,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,UAAU,EAAEvB,CAAC,CAACwB;AAAhB;AALD;AADkC,KAAD,CAA9C;AAUA,WAAO;AACLN,MAAAA,YAAY,EAAElB,CAAC,CADV,YAAA;AAELyB,MAAAA,QAAQ,EAFH,UAAA;AAGLC,MAAAA,OAAO,EAHF,cAAA;AAKL,uBAAA,MAAA,CAAA,MAAA,CAAA;AACEnB,QAAAA,SAAS,EAAE;AADb,OAAA,EAEMR,CAAC,CAADA,cAAAA,IAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAGCiB,iBAAiB,CALxB,gBAKwB,CAHlBjB,CAFN;AALK,KAAP;AAcD;AAzDkG,CAArG;AA4DA,eAAA,iBAAA","sourcesContent":["import { ICSSInJSStyle, ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport { SplitButtonStylesProps } from '../../../../components/SplitButton/SplitButton';\nimport { SplitButtonVariables } from './splitButtonVariables';\n\nconst splitButtonStyles: ComponentSlotStylesPrepared<SplitButtonStylesProps, SplitButtonVariables> = {\n  menuButton: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderRightWidth: 0,\n    padding: v.padding,\n\n    ...(p.size === 'small' && {\n      height: v.smallDimension,\n      padding: v.smallPadding,\n      minWidth: v.smallMinWidth,\n      boxShadow: v.smallBoxShadow,\n    }),\n\n    ':focus-visible': {\n      borderRightWidth: 0,\n\n      ':before': {\n        borderRightWidth: 0,\n      },\n\n      ':after': {\n        borderRightWidth: 0,\n      },\n    },\n\n    ':active': {\n      animationName: 'unset',\n      animationDuration: 'unset',\n    },\n  }),\n\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: {\n        borderRadius: v.focusBorderRadius,\n        borderWidth: v.focusBorderWidth,\n        focusInnerBorderColor: v.focusInnerBorderColor,\n        focusOuterBorderColor: v.focusOuterBorderColor,\n        zIndexes: { foreground: v.focusBorderZIndex },\n      },\n    });\n\n    return {\n      borderRadius: v.borderRadius,\n      position: 'relative',\n      display: 'inline-block',\n\n      ':focus-within': {\n        boxShadow: 'none',\n        ...(p.isFromKeyboard && {\n          // make sure focus is coming from keyboard before applying the focus styles\n          // otherwise focus state is applied only to the button and not the toggle\n          ...borderFocusStyles[':focus-visible'],\n        }),\n      },\n    };\n  },\n};\n\nexport default splitButtonStyles;\n"]},"metadata":{},"sourceType":"module"}