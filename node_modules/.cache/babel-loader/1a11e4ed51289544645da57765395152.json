{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport RefStack from './utils/RefStack';\nimport NestingContext from './NestingContext';\n\nvar NestingRoot = /*#__PURE__*/function (_React$Component) {\n  _inherits(NestingRoot, _React$Component);\n\n  function NestingRoot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NestingRoot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NestingRoot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"registry\", new RefStack());\n\n    _defineProperty(_assertThisInitialized(_this), \"parentRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"getRefs\", function () {\n      return _this.registry.getContextRefs(_this.parentRef);\n    });\n\n    return _this;\n  }\n\n  _createClass(NestingRoot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.registry.register(this.parentRef);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.registry.unregister(this.parentRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NestingContext.Provider, {\n        value: this.registry\n      }, this.props.children(this.getRefs, this.parentRef));\n    }\n  }]);\n\n  return NestingRoot;\n}(React.Component);\n\nexport default NestingRoot;","map":{"version":3,"sources":["NestingRoot.tsx"],"names":["NestingRoot","React","Component","registry"],"mappings":";;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,QAAA,MAAA,kBAAA;AACA,OAAA,cAAA,MAAA,kBAAA;;IAGMA,W;;;;;;;;;;;;;;;;+DACO,IAAA,QAAA,E;;gEACCC,KAAK,CAALA,SAAAA,E;;8DAUF,YAAA;AAAA,aAAiB,KAAA,CAAA,QAAA,CAAA,cAAA,CAA6B,KAAA,CAA9C,SAAiB,CAAjB;;;;;;;;wCARU;AAClB,WAAA,QAAA,CAAA,QAAA,CAAuB,KAAvB,SAAA;AACD;;;2CAEsB;AACrB,WAAA,QAAA,CAAA,UAAA,CAAyB,KAAzB,SAAA;AACD;;;6BAIQ;AACP,aACE,KAAA,CAAA,aAAA,CAAC,cAAD,CAAA,QAAA,EAAA;AAAyB,QAAA,KAAK,EAAE,KAAKE;AAArC,OAAA,EACG,KAAA,KAAA,CAAA,QAAA,CAAoB,KAApB,OAAA,EAAkC,KAFvC,SAEK,CADH,CADF;AAKD;;;;EApBuCF,KAAK,CAACC,S;;AAuBhD,eAAA,WAAA","sourcesContent":["import * as React from 'react';\n\nimport RefStack from './utils/RefStack';\nimport NestingContext from './NestingContext';\nimport { NestingProps, NodeRef } from './types';\n\nclass NestingRoot<T extends Node> extends React.Component<NestingProps> {\n  registry = new RefStack();\n  parentRef = React.createRef<T>();\n\n  componentDidMount() {\n    this.registry.register(this.parentRef as any);\n  }\n\n  componentWillUnmount() {\n    this.registry.unregister(this.parentRef as any);\n  }\n\n  getRefs = (): NodeRef[] => this.registry.getContextRefs(this.parentRef as any);\n\n  render() {\n    return (\n      <NestingContext.Provider value={this.registry}>\n        {this.props.children(this.getRefs, this.parentRef as any)}\n      </NestingContext.Provider>\n    );\n  }\n}\n\nexport default NestingRoot;\n"]},"metadata":{},"sourceType":"module"}