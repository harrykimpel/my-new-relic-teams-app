{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponent, childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nexport var gridClassName = 'ui-grid';\n\nvar Grid = /*#__PURE__*/function (_UIComponent) {\n  _inherits(Grid, _UIComponent);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var accessibility = _ref.accessibility,\n          ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          unhandledProps = _ref.unhandledProps;\n      var _this$props = this.props,\n          children = _this$props.children,\n          content = _this$props.content;\n      return React.createElement(ElementType, _extends({\n        className: classes.root\n      }, rtlTextContainer.getAttributes({\n        forElements: [children, content]\n      }), accessibility.attributes.root, unhandledProps), childrenExist(children) ? children : content);\n    }\n  }]);\n\n  return Grid;\n}(UIComponent);\n/**\n * A Grid is a layout component that harmonizes negative space, by controlling both the row and column alignment.\n */\n\n\n_defineProperty(Grid, \"displayName\", 'Grid');\n\n_defineProperty(Grid, \"deprecated_className\", gridClassName);\n\n_defineProperty(Grid, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  content: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent])]),\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}));\n\n_defineProperty(Grid, \"defaultProps\", {\n  as: 'div'\n});\n\nexport default withSafeTypeForAs(Grid);","map":{"version":3,"sources":["components/Grid/Grid.tsx"],"names":["gridClassName","Grid","UIComponent","content","columns","PropTypes","customPropTypes","rows","as","accessibility","ElementType","classes","unhandledProps","children","root","forElements","childrenExist","withSafeTypeForAs"],"mappings":";;;;;;;AACA,OAAO,KAAP,eAAA,MAAA,2BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,QAAA,aAAA;AAUA,SAAA,iBAAA,QAAA,aAAA;AAgBA,OAAO,IAAMA,aAAa,GAAnB,SAAA;;IAEDC,I;;;;;;;;;;;0CAqB+G;AAAA,UAAjGQ,aAAiG,GAAA,IAAA,CAAjGA,aAAiG;AAAA,UAAlFC,WAAkF,GAAA,IAAA,CAAlFA,WAAkF;AAAA,UAArEC,OAAqE,GAAA,IAAA,CAArEA,OAAqE;AAAA,UAA5DC,cAA4D,GAAA,IAAA,CAA5DA,cAA4D;AAAA,UAAA,WAAA,GACnF,KADmF,KAAA;AAAA,UACzGC,QADyG,GAAA,WAAA,CAAA,QAAA;AAAA,UAC/FV,OAD+F,GAAA,WAAA,CAAA,OAAA;AAGjH,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACG;AADrB,OAAA,EAEM,gBAAgB,CAAhB,aAAA,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAAA,QAAA,EAAA,OAAA;AAAf,OAA/B,CAFN,EAGMN,aAAa,CAAbA,UAAAA,CAHN,IAAA,EAAA,cAAA,CAAA,EAMGO,aAAa,CAAbA,QAAa,CAAbA,GAAAA,QAAAA,GAPL,OACE,CADF;AAUD;;;;EAlCgBd,W;AAqCnB;;;;;gBArCMD,I,iBACiB,M;;gBADjBA,I,0BAG0BD,a;;gBAH1BC,I,iCAMC,eAAe,CAAf,YAAA,CAA6B;AAC9BE,EAAAA,OAAO,EAAE;AADqB,CAA7B,C;AAGHC,EAAAA,OAAO,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,MAAoB,CAApBA,C;AACTF,EAAAA,OAAO,EAAEG,eAAe,CAAfA,KAAAA,CAAsB,CAC7BA,eAAe,CAAfA,QAAAA,CAAyB,CADI,UACJ,CAAzBA,CAD6B,EAE7BD,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAATA,OAAAA,CAAkBC,eAAe,CAAlC,WAACD,CAAD,EAAiDC,eAAe,CAF7EA,WAEa,CAApBD,CAF6B,CAAtBC,C;AAITC,EAAAA,IAAI,EAAEF,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,MAAoB,CAApBA;;;gBAdJJ,I,kBAiByC;AAC3CO,EAAAA,EAAE,EAAE;AADuC,C;;AAuB/C,eAAeS,iBAAiB,CAAhC,IAAgC,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  UIComponent,\n  childrenExist,\n  RenderResultConfig,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface GridProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available gridBehavior, gridHorizontalBehavior\n   * */\n  accessibility?: Accessibility;\n\n  /** The columns of the grid with a space-separated list of values. The values represent the track size, and the space between them represents the grid line. */\n  columns?: string | number;\n\n  /** The rows of the grid with a space-separated list of values. The values represent the track size, and the space between them represents the grid line. */\n  rows?: string | number;\n}\n\nexport const gridClassName = 'ui-grid';\n\nclass Grid extends UIComponent<WithAsProp<GridProps>> {\n  static displayName = 'Grid';\n\n  static deprecated_className = gridClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    content: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent]),\n    ]),\n    rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps: WithAsProp<GridProps> = {\n    as: 'div',\n  };\n\n  renderComponent({ accessibility, ElementType, classes, unhandledProps }: RenderResultConfig<any>): React.ReactNode {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        className={classes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\n/**\n * A Grid is a layout component that harmonizes negative space, by controlling both the row and column alignment.\n */\nexport default withSafeTypeForAs<typeof Grid, GridProps>(Grid);\n"]},"metadata":{},"sourceType":"module"}