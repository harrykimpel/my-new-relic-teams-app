{"ast":null,"code":"import tooltipAsDescriptionBehavior from './tooltipAsDescriptionBehavior';\n/**\n * @description\n * Implements ARIA Tooltip design pattern.\n * Adds 'aria-label' to the button if passed as a prop to root or trigger instead of aria-labelledby pointing to the content id.\n *\n * @specification\n * Adds attribute 'role=tooltip' to 'tooltip' slot.\n * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-labelledby' based on the property 'contentId' to 'trigger' slot. This can be overriden by providing 'aria-labelledby' property directly to the component.\n * Triggers 'close' action with 'Escape' on 'trigger'.\n */\n\nvar tooltipAsLabelBehavior = function tooltipAsLabelBehavior(props) {\n  var behaviorData = tooltipAsDescriptionBehavior(props);\n  var triggerAriaLabel = props.triggerAriaLabel;\n  behaviorData.attributes = {\n    trigger: Object.assign({}, triggerAriaLabel ? {\n      'aria-label': triggerAriaLabel\n    } : {\n      'aria-labelledby': props['aria-labelledby'] || props.contentId\n    }),\n    tooltip: Object.assign({}, behaviorData.attributes.tooltip, {}, !triggerAriaLabel && !props['aria-labelledby'] && {\n      id: props.contentId\n    })\n  };\n  return behaviorData;\n};\n\nexport default tooltipAsLabelBehavior;","map":{"version":3,"sources":["behaviors/Tooltip/tooltipAsLabelBehavior.ts"],"names":["tooltipAsLabelBehavior","behaviorData","tooltipAsDescriptionBehavior","triggerAriaLabel","props","trigger","contentId","tooltip","id"],"mappings":"AACA,OAAA,4BAAA,MAAA,gCAAA;AAEA;;;;;;;;;;;;AAWA,IAAMA,sBAA2D,GAAG,SAA9DA,sBAA8D,CAAA,KAAA,EAAS;AAC3E,MAAMC,YAAY,GAAGC,4BAA4B,CAAjD,KAAiD,CAAjD;AAD2E,MAEnEC,gBAFmE,GAE9CC,KAF8C,CAAA,gBAAA;AAI3EH,EAAAA,YAAY,CAAZA,UAAAA,GAA0B;AACxBI,IAAAA,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACDF,gBAAgB,GAChB;AAAE,oBAAcA;AAAhB,KADgB,GAEhB;AAAE,yBAAmBC,KAAK,CAALA,iBAAK,CAALA,IAA4BA,KAAK,CAACE;AAAvD,KAHC,CADiB;AAMxBC,IAAAA,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACFN,YAAY,CAAZA,UAAAA,CADE,OAAA,EAAA,EAAA,EAED,CAAA,gBAAA,IAAqB,CAACG,KAAK,CAA3B,iBAA2B,CAA3B,IAAkD;AAAEI,MAAAA,EAAE,EAAEJ,KAAK,CAACE;AAAZ,KAFjD;AANiB,GAA1BL;AAYA,SAAA,YAAA;AAhBF,CAAA;;AAmBA,eAAA,sBAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport tooltipAsDescriptionBehavior, { TooltipBehaviorProps } from './tooltipAsDescriptionBehavior';\n\n/**\n * @description\n * Implements ARIA Tooltip design pattern.\n * Adds 'aria-label' to the button if passed as a prop to root or trigger instead of aria-labelledby pointing to the content id.\n *\n * @specification\n * Adds attribute 'role=tooltip' to 'tooltip' slot.\n * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.\n * Adds attribute 'aria-labelledby' based on the property 'contentId' to 'trigger' slot. This can be overriden by providing 'aria-labelledby' property directly to the component.\n * Triggers 'close' action with 'Escape' on 'trigger'.\n */\nconst tooltipAsLabelBehavior: Accessibility<TooltipBehaviorProps> = props => {\n  const behaviorData = tooltipAsDescriptionBehavior(props);\n  const { triggerAriaLabel } = props;\n\n  behaviorData.attributes = {\n    trigger: {\n      ...(triggerAriaLabel\n        ? { 'aria-label': triggerAriaLabel }\n        : { 'aria-labelledby': props['aria-labelledby'] || props.contentId }),\n    },\n    tooltip: {\n      ...behaviorData.attributes.tooltip,\n      ...(!triggerAriaLabel && !props['aria-labelledby'] && { id: props.contentId }),\n    },\n  };\n\n  return behaviorData;\n};\n\nexport default tooltipAsLabelBehavior;\n"]},"metadata":{},"sourceType":"module"}