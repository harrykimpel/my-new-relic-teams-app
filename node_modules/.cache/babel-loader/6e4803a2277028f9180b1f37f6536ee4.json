{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _noop from \"lodash/noop\";\nimport _isNil from \"lodash/isNil\";\nimport * as React from 'react';\nexport var hasSubtree = function hasSubtree(item) {\n  return !_isNil(item['items']) && item['items'].length > 0;\n};\nexport var removeItemAtIndex = function removeItemAtIndex(items, itemIndex) {\n  return [].concat(_toConsumableArray(items.slice(0, itemIndex)), _toConsumableArray(items.slice(itemIndex + 1)));\n};\n/**\n * Looks for the item inside the nested items array and returns its siblings.\n * @param {any[]} items The nested items array.\n * @param {string} itemId The id of the item to return the children of.\n * @returns {any[]} The item siblings\n */\n\nexport var getSiblings = function getSiblings(items, itemId) {\n  function getSiblingsFn(items) {\n    var itemIndex = items.findIndex(function (item) {\n      return item.id === itemId;\n    });\n\n    if (itemIndex > -1) {\n      return removeItemAtIndex(items, itemIndex);\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        if (item.items) {\n          var result = getSiblingsFn(item.items);\n\n          if (result) {\n            return result;\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  return getSiblingsFn(items);\n};\nexport var TreeContext = React.createContext({\n  onFocusFirstChild: _noop,\n  onFocusParent: _noop,\n  onSiblingsExpand: _noop,\n  onTitleClick: _noop\n});","map":{"version":3,"sources":["components/Tree/utils/index.ts"],"names":["hasSubtree","item","removeItemAtIndex","items","itemIndex","getSiblings","result","getSiblingsFn","TreeContext","onFocusFirstChild","onFocusParent","onSiblingsExpand","onTitleClick"],"mappings":";;;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAIA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAkE;AAC1F,SAAO,CAAC,MAAA,CAAQC,IAAI,CAAb,OAAa,CAAZ,CAAD,IAA2BA,IAAI,CAAJA,OAAI,CAAJA,CAAAA,MAAAA,GAAlC,CAAA;AADK,CAAA;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,SAAA,EAA4C;AAC3E,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAWC,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAX,SAAWA,CAAX,CAAA,EAAA,kBAAA,CAAyCA,KAAK,CAALA,KAAAA,CAAYC,SAAS,GAA9D,CAAyCD,CAAzC,CAAA,CAAA;AADK,CAAA;AAIP;;;;;;;AAMA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAA,MAAA,EAAyC;AAClE,WAAA,aAAA,CAAA,KAAA,EAAqC;AACnC,QAAMD,SAAS,GAAG,KAAK,CAAL,SAAA,CAAgB,UAAA,IAAA,EAAI;AAAA,aAAIH,IAAI,CAAJA,EAAAA,KAAJ,MAAA;AAAtC,KAAkB,CAAlB;;AAEA,QAAIG,SAAS,GAAG,CAAhB,CAAA,EAAoB;AAClB,aAAOF,iBAAiB,CAAA,KAAA,EAAxB,SAAwB,CAAxB;AACD;;AALkC,QAAA,yBAAA,GAAA,IAAA;AAAA,QAAA,iBAAA,GAAA,KAAA;AAAA,QAAA,cAAA,GAAA,SAAA;;AAAA,QAAA;AAOnC,WAAA,IAAA,SAAA,GAAmBC,KAAnB,CAAA,MAAA,CAAA,QAAA,CAAmBA,EAAnB,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAA0B;AAAA,YAAfF,IAAe,GAAA,KAAA,CAAA,KAAA;;AACxB,YAAIA,IAAI,CAAR,KAAA,EAAgB;AACd,cAAMK,MAAM,GAAGC,aAAa,CAACN,IAAI,CAAjC,KAA4B,CAA5B;;AAEA,cAAA,MAAA,EAAY;AACV,mBAAA,MAAA;AACD;AACF;AACF;AAfkC,KAAA,CAAA,OAAA,GAAA,EAAA;AAAA,MAAA,iBAAA,GAAA,IAAA;AAAA,MAAA,cAAA,GAAA,GAAA;AAAA,KAAA,SAAA;AAAA,UAAA;AAAA,YAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AAAA,UAAA,SAAA,CAAA,MAAA;AAAA;AAAA,OAAA,SAAA;AAAA,YAAA,iBAAA,EAAA;AAAA,gBAAA,cAAA;AAAA;AAAA;AAAA;;AAiBnC,WAAA,IAAA;AACD;;AAED,SAAOM,aAAa,CAApB,KAAoB,CAApB;AArBK,CAAA;AA+BP,OAAO,IAAMC,WAAW,GAAG,KAAK,CAAL,aAAA,CAA4C;AACrEC,EAAAA,iBAAiB,EADoD,KAAA;AAErEC,EAAAA,aAAa,EAFwD,KAAA;AAGrEC,EAAAA,gBAAgB,EAHqD,KAAA;AAIrEC,EAAAA,YAAY,EAAA;AAJyD,CAA5C,CAApB","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { TreeItemProps } from '../TreeItem';\nimport { ShorthandValue } from '../../../types';\n\nexport const hasSubtree = (item: TreeItemProps | ShorthandValue<TreeItemProps>): boolean => {\n  return !_.isNil(item['items']) && item['items'].length > 0;\n};\n\nexport const removeItemAtIndex = (items: any[], itemIndex: number): any[] => {\n  return [...items.slice(0, itemIndex), ...items.slice(itemIndex + 1)];\n};\n\n/**\n * Looks for the item inside the nested items array and returns its siblings.\n * @param {any[]} items The nested items array.\n * @param {string} itemId The id of the item to return the children of.\n * @returns {any[]} The item siblings\n */\nexport const getSiblings = (items: any[], itemId: string): any[] => {\n  function getSiblingsFn(items: any[]) {\n    const itemIndex = items.findIndex(item => item.id === itemId);\n\n    if (itemIndex > -1) {\n      return removeItemAtIndex(items, itemIndex);\n    }\n\n    for (const item of items) {\n      if (item.items) {\n        const result = getSiblingsFn(item.items);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  return getSiblingsFn(items);\n};\n\nexport interface TreeRenderContextValue {\n  onFocusFirstChild: (itemId: string) => void;\n  onFocusParent: (itemId: string) => void;\n  onSiblingsExpand: (e: React.SyntheticEvent, itemProps: TreeItemProps) => void;\n  onTitleClick: (e: React.SyntheticEvent, itemProps: TreeItemProps, executeSelection?: boolean) => void;\n}\n\nexport const TreeContext = React.createContext<TreeRenderContextValue>({\n  onFocusFirstChild: _.noop,\n  onFocusParent: _.noop,\n  onSiblingsExpand: _.noop,\n  onTitleClick: _.noop,\n});\n"]},"metadata":{},"sourceType":"module"}