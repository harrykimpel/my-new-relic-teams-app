{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { menuButtonBehavior } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { AutoControlledComponent, applyAccessibilityKeyHandlers, getOrGenerateIdFromShorthand, commonPropTypes } from '../../utils';\nimport { createShorthandFactory } from '../../utils/factories';\nimport Popup from '../Popup/Popup';\nimport Menu from '../Menu/Menu';\nimport { focusMenuItem } from './focusUtils';\nimport { ALIGNMENTS, POSITIONS } from '../../utils/positioner';\nexport var menuButtonClassName = 'ui-menubutton';\nexport var menuButtonSlotClassNames = {\n  menu: \"\".concat(menuButtonClassName, \"__menu\")\n};\n/**\n * A MenuButton displays a menu connected to trigger element.\n * @accessibility\n */\n\nvar MenuButton = /*#__PURE__*/function (_AutoControlledCompon) {\n  _inherits(MenuButton, _AutoControlledCompon);\n\n  function MenuButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"menuRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      closeMenu: function closeMenu(e) {\n        return _this.closeMenu(e);\n      },\n      openAndFocusFirst: function openAndFocusFirst(e) {\n        return _this.openAndFocus(e, 'first');\n      },\n      openAndFocusLast: function openAndFocusLast(e) {\n        return _this.openAndFocus(e, 'last');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenChange\", function (e, open, callback) {\n      _invoke(_this.props, 'onOpenChange', e, Object.assign({}, _this.props, {\n        open: open\n      }));\n\n      _this.setState({\n        open: open\n      }, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuOverrides\", function (predefinedProps) {\n      return {\n        onItemClick: function onItemClick(e, itemProps) {\n          _invoke(predefinedProps, 'onItemClick', e, itemProps);\n\n          _invoke(_this.props, 'onMenuItemClick', e, itemProps);\n\n          if (!itemProps || !itemProps.menu) {\n            // do not close if clicked on item with submenu\n            _this.handleOpenChange(e, false);\n          }\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuButton, [{\n    key: \"closeMenu\",\n    value: function closeMenu(e) {\n      this.handleOpenChange(e, false);\n    }\n  }, {\n    key: \"openAndFocus\",\n    value: function openAndFocus(e, which) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.handleOpenChange(e, true, function () {\n        return focusMenuItem(_this2.menuRef.current, which);\n      });\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var _this3 = this;\n\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          unhandledProps = _ref.unhandledProps,\n          _accessibility = _ref.accessibility,\n          styles = _ref.styles;\n      var _this$props = this.props,\n          contextMenu = _this$props.contextMenu,\n          menu = _this$props.menu,\n          accessibilityProp = _this$props.accessibility,\n          align = _this$props.align,\n          className = _this$props.className,\n          defaultOpen = _this$props.defaultOpen,\n          flipBoundary = _this$props.flipBoundary,\n          mountNode = _this$props.mountNode,\n          mouseLeaveDelay = _this$props.mouseLeaveDelay,\n          offset = _this$props.offset,\n          on = _this$props.on,\n          onOpenChange = _this$props.onOpenChange,\n          open = _this$props.open,\n          overflowBoundary = _this$props.overflowBoundary,\n          pointing = _this$props.pointing,\n          position = _this$props.position,\n          positionFixed = _this$props.positionFixed,\n          tabbableTrigger = _this$props.tabbableTrigger,\n          stylesProp = _this$props.styles,\n          target = _this$props.target,\n          trigger = _this$props.trigger,\n          unstable_pinned = _this$props.unstable_pinned,\n          variables = _this$props.variables;\n      var popupProps = {\n        accessibility: accessibilityProp,\n        align: align,\n        className: className,\n        defaultOpen: defaultOpen,\n        mountNode: mountNode,\n        mouseLeaveDelay: mouseLeaveDelay,\n        flipBoundary: flipBoundary,\n        offset: offset,\n        on: on,\n        onOpenChange: onOpenChange,\n        open: open,\n        overflowBoundary: overflowBoundary,\n        pointing: pointing,\n        position: position,\n        positionFixed: positionFixed,\n        tabbableTrigger: tabbableTrigger,\n        styles: stylesProp,\n        target: target,\n        trigger: trigger,\n        unstable_pinned: unstable_pinned,\n        variables: variables\n      };\n      var content = Menu.create(menu, {\n        defaultProps: function defaultProps() {\n          return Object.assign({}, _accessibility.attributes.menu, {\n            vertical: true,\n            className: menuButtonSlotClassNames.menu\n          });\n        },\n        overrideProps: this.handleMenuOverrides\n      });\n      var overrideProps = Object.assign({\n        accessibility: function accessibility() {\n          return _accessibility;\n        },\n        open: this.state.open,\n        onOpenChange: function onOpenChange(e, _ref2) {\n          var open = _ref2.open;\n\n          _this3.handleOpenChange(e, open);\n        },\n        content: {\n          styles: styles.popupContent,\n          content: content && React.createElement(Ref, {\n            innerRef: this.menuRef\n          }, content)\n        },\n        children: undefined\n      }, contextMenu ? {\n        on: 'context',\n        trapFocus: true,\n        tabbableTrigger: false\n      } : {\n        inline: true,\n        autoFocus: true\n      });\n      var popup = Popup.create(popupProps, {\n        overrideProps: overrideProps\n      });\n\n      if (contextMenu) {\n        return popup;\n      }\n\n      return React.createElement(ElementType, _extends({\n        className: classes.root\n      }, _accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(_accessibility.keyHandlers.root, unhandledProps)), React.createElement(Ref, {\n        innerRef: this.triggerRef\n      }, popup));\n    }\n  }], [{\n    key: \"getAutoControlledStateFromProps\",\n    value: function getAutoControlledStateFromProps(props, state) {\n      return {\n        menuId: getOrGenerateIdFromShorthand('menubutton-menu-', props.menu, state.menuId),\n        triggerId: getOrGenerateIdFromShorthand('menubutton-trigger-', props.trigger, state.triggerId)\n      };\n    }\n  }]);\n\n  return MenuButton;\n}(AutoControlledComponent);\n\n_defineProperty(MenuButton, \"displayName\", 'MenuButton');\n\n_defineProperty(MenuButton, \"deprecated_className\", menuButtonClassName);\n\n_defineProperty(MenuButton, \"create\", void 0);\n\n_defineProperty(MenuButton, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  as: true,\n  content: false\n}), {\n  align: PropTypes.oneOf(ALIGNMENTS),\n  defaultOpen: PropTypes.bool,\n  mountNode: customPropTypes.domNode,\n  mouseLeaveDelay: PropTypes.number,\n  offset: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.number)]),\n  on: PropTypes.oneOfType([PropTypes.oneOf(['hover', 'click', 'focus', 'context']), PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])), PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context']))]),\n  flipBoundary: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object), PropTypes.oneOf(['clippingParents', 'window', 'scrollParent'])]),\n  overflowBoundary: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object), PropTypes.oneOf(['clippingParents', 'window', 'scrollParent'])]),\n  open: PropTypes.bool,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  position: PropTypes.oneOf(POSITIONS),\n  positionFixed: PropTypes.bool,\n  target: PropTypes.any,\n  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),\n  tabbableTrigger: PropTypes.bool,\n  unstable_pinned: PropTypes.bool,\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthandWithoutJSX, PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX)]),\n  contextMenu: PropTypes.bool\n}));\n\n_defineProperty(MenuButton, \"defaultProps\", {\n  accessibility: menuButtonBehavior,\n  align: 'start',\n  position: 'below'\n});\n\n_defineProperty(MenuButton, \"autoControlledProps\", ['open']);\n\nexport { MenuButton as default };\nMenuButton.create = createShorthandFactory({\n  Component: MenuButton,\n  mappedProp: 'menu'\n});","map":{"version":3,"sources":["components/MenuButton/MenuButton.tsx"],"names":["menuButtonClassName","menuButtonSlotClassNames","menu","MenuButton","AutoControlledComponent","as","content","align","PropTypes","defaultOpen","bool","mountNode","customPropTypes","domNode","mouseLeaveDelay","number","offset","on","flipBoundary","overflowBoundary","open","onMenuItemClick","func","onOpenChange","position","positionFixed","target","any","trigger","tabbableTrigger","unstable_pinned","contextMenu","accessibility","props","state","menuId","getOrGenerateIdFromShorthand","triggerId","React","closeMenu","openAndFocusFirst","openAndFocusLast","e","which","focusMenuItem","onItemClick","itemProps","ElementType","classes","unhandledProps","styles","accessibilityProp","className","pointing","stylesProp","variables","popupProps","defaultProps","vertical","overrideProps","handleMenuOverrides","menuRef","children","undefined","trapFocus","inline","autoFocus","popup","root","applyAccessibilityKeyHandlers","triggerRef","createShorthandFactory","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { Accessibility, menuButtonBehavior } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport {\n  AutoControlledComponent,\n  RenderResultConfig,\n  applyAccessibilityKeyHandlers,\n  getOrGenerateIdFromShorthand,\n  commonPropTypes,\n  StyledComponentProps,\n} from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, ShorthandCollection } from '../../types';\n\nimport { createShorthandFactory, ShorthandFactory } from '../../utils/factories';\nimport Popup, { PopupProps, PopupEvents, PopupEventsArray } from '../Popup/Popup';\nimport Menu, { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { focusMenuItem } from './focusUtils';\nimport { ALIGNMENTS, POSITIONS, PositioningProps } from '../../utils/positioner';\n\nexport interface MenuButtonSlotClassNames {\n  menu: string;\n}\n\nexport interface MenuButtonProps extends StyledComponentProps<MenuButtonProps>, PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default menuButtonBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the popup should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the popup will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Events triggering the popup. */\n  on?: PopupEvents | PopupEventsArray;\n\n  /** Defines whether popup is displayed. */\n  open?: boolean;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<PopupProps>;\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as popup's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the popup is defined. */\n  trigger?: JSX.Element;\n\n  /** Whether the trigger should be tabbable */\n  tabbableTrigger?: boolean;\n\n  /** Shorthand for menu configuration */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /** Determines if the MenuButton behaves as context menu */\n  contextMenu?: boolean;\n}\n\nexport interface MenuButtonState {\n  open: boolean;\n  menuId: string;\n  triggerId: string;\n}\n\nexport const menuButtonClassName = 'ui-menubutton';\nexport const menuButtonSlotClassNames: MenuButtonSlotClassNames = {\n  menu: `${menuButtonClassName}__menu`,\n};\n\n/**\n * A MenuButton displays a menu connected to trigger element.\n * @accessibility\n */\nexport default class MenuButton extends AutoControlledComponent<MenuButtonProps, MenuButtonState> {\n  static displayName = 'MenuButton';\n\n  static deprecated_className = menuButtonClassName;\n\n  static create: ShorthandFactory<MenuButtonProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      as: true,\n      content: false,\n    }),\n    align: PropTypes.oneOf(ALIGNMENTS),\n    defaultOpen: PropTypes.bool,\n    mountNode: customPropTypes.domNode,\n    mouseLeaveDelay: PropTypes.number,\n    offset: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n    ]),\n    on: PropTypes.oneOfType([\n      PropTypes.oneOf(['hover', 'click', 'focus', 'context']),\n      PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])),\n      PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context'])),\n    ]),\n    flipBoundary: PropTypes.oneOfType([\n      PropTypes.object as PropTypes.Requireable<HTMLElement>,\n      PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n      PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n    ]),\n    overflowBoundary: PropTypes.oneOfType([\n      PropTypes.object as PropTypes.Requireable<HTMLElement>,\n      PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n      PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n    ]),\n    open: PropTypes.bool,\n    onMenuItemClick: PropTypes.func,\n    onOpenChange: PropTypes.func,\n    position: PropTypes.oneOf(POSITIONS),\n    positionFixed: PropTypes.bool,\n    target: PropTypes.any,\n    trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),\n    tabbableTrigger: PropTypes.bool,\n    unstable_pinned: PropTypes.bool,\n    menu: PropTypes.oneOfType([\n      customPropTypes.itemShorthandWithoutJSX,\n      PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n    ]),\n    contextMenu: PropTypes.bool,\n  };\n\n  static defaultProps: MenuButtonProps = {\n    accessibility: menuButtonBehavior,\n    align: 'start',\n    position: 'below',\n  };\n\n  static autoControlledProps = ['open'];\n\n  static getAutoControlledStateFromProps(props: MenuButtonProps, state: MenuButtonState): Partial<MenuButtonState> {\n    return {\n      menuId: getOrGenerateIdFromShorthand('menubutton-menu-', props.menu, state.menuId),\n      triggerId: getOrGenerateIdFromShorthand('menubutton-trigger-', props.trigger, state.triggerId),\n    };\n  }\n\n  triggerRef = React.createRef<HTMLElement>();\n  menuRef = React.createRef<HTMLElement>();\n\n  actionHandlers = {\n    closeMenu: e => this.closeMenu(e),\n    openAndFocusFirst: e => this.openAndFocus(e, 'first'),\n    openAndFocusLast: e => this.openAndFocus(e, 'last'),\n  };\n\n  closeMenu(e: React.KeyboardEvent) {\n    this.handleOpenChange(e, false);\n  }\n\n  openAndFocus(e: React.KeyboardEvent, which: 'first' | 'last') {\n    e.preventDefault();\n    this.handleOpenChange(e, true, () => focusMenuItem(this.menuRef.current, which));\n  }\n\n  handleOpenChange = (e: React.SyntheticEvent, open: boolean, callback?: () => void) => {\n    _.invoke(this.props, 'onOpenChange', e, { ...this.props, open });\n    this.setState({ open }, callback);\n  };\n\n  handleMenuOverrides = (predefinedProps?: MenuProps) => ({\n    onItemClick: (e: React.SyntheticEvent, itemProps: MenuItemProps) => {\n      _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n      _.invoke(this.props, 'onMenuItemClick', e, itemProps);\n      if (!itemProps || !itemProps.menu) {\n        // do not close if clicked on item with submenu\n        this.handleOpenChange(e, false);\n      }\n    },\n  });\n\n  renderComponent({\n    ElementType,\n    classes,\n    unhandledProps,\n    accessibility,\n    styles,\n  }: RenderResultConfig<MenuButtonProps>): React.ReactNode {\n    const {\n      // MenuButton props:\n      contextMenu,\n      menu,\n      // Popup props:\n      accessibility: accessibilityProp,\n      align,\n      className,\n      defaultOpen,\n      flipBoundary,\n      mountNode,\n      mouseLeaveDelay,\n      offset,\n      on,\n      onOpenChange,\n      open,\n      overflowBoundary,\n      pointing,\n      position,\n      positionFixed,\n      tabbableTrigger,\n      styles: stylesProp,\n      target,\n      trigger,\n      unstable_pinned,\n      variables,\n    } = this.props;\n\n    const popupProps = {\n      accessibility: accessibilityProp,\n      align,\n      className,\n      defaultOpen,\n      mountNode,\n      mouseLeaveDelay,\n      flipBoundary,\n      offset,\n      on,\n      onOpenChange,\n      open,\n      overflowBoundary,\n      pointing,\n      position,\n      positionFixed,\n      tabbableTrigger,\n      styles: stylesProp,\n      target,\n      trigger,\n      unstable_pinned,\n      variables,\n    };\n\n    const content = Menu.create(menu, {\n      defaultProps: () => ({\n        ...accessibility.attributes.menu,\n        vertical: true,\n        className: menuButtonSlotClassNames.menu,\n      }),\n      overrideProps: this.handleMenuOverrides,\n    });\n\n    const overrideProps: PopupProps = {\n      accessibility: () => accessibility,\n      open: this.state.open,\n      onOpenChange: (e, { open }) => {\n        this.handleOpenChange(e, open);\n      },\n      content: {\n        styles: styles.popupContent,\n        content: content && <Ref innerRef={this.menuRef}>{content}</Ref>,\n      },\n      children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger\n      ...(contextMenu\n        ? {\n            on: 'context',\n            trapFocus: true,\n            tabbableTrigger: false,\n          }\n        : {\n            inline: true,\n            autoFocus: true,\n          }),\n    };\n\n    const popup = Popup.create(popupProps, { overrideProps });\n\n    if (contextMenu) {\n      return popup;\n    }\n\n    return (\n      <ElementType\n        className={classes.root}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n      >\n        <Ref innerRef={this.triggerRef}>{popup}</Ref>\n      </ElementType>\n    );\n  }\n}\n\nMenuButton.create = createShorthandFactory({ Component: MenuButton, mappedProp: 'menu' });\n"]},"metadata":{},"sourceType":"module"}