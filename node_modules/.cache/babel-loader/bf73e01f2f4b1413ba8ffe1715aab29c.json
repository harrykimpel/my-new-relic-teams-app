{"ast":null,"code":"import _get from \"lodash/get\";\nimport { pxToRem } from '../../../../utils';\nvar toggleMovementDistance = pxToRem(20);\nvar padding = pxToRem(2);\nvar defaultValue = 'red';\nexport default (function (siteVars) {\n  return {\n    checkboxColor: 'transparent',\n    toggleBackground: 'transparent',\n    toggleBorderColor: siteVars.colors.grey[300],\n    toggleBorderStyle: \"solid\",\n    toggleBorderWidth: pxToRem(1),\n    toggleIndicatorColor: 'inherit',\n    checkboxCheckedColor: siteVars.colors.grey[500],\n    checkboxToggleCheckedBackground: 'transparent',\n    checkboxToggleCheckedBorderColor: siteVars.colors.grey[500],\n    checkboxToggleCheckedColor: 'inherit',\n    disabledColor: siteVars.colors.grey[300],\n    disabledCheckboxColor: siteVars.colors.grey[300],\n    disabledToggleBackground: 'transparent',\n    disabledToggleBorderColor: siteVars.colors.grey[200],\n    textColor: _get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n    background: 'transparent',\n    borderColor: _get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n    borderStyle: 'solid',\n    borderRadius: pxToRem(3),\n    borderWidth: pxToRem(1),\n    indicatorColor: 'transparent',\n    gap: pxToRem(12),\n    margin: \"\".concat(pxToRem(2.8), \" 0 0 0\"),\n    padding: padding,\n    rootPadding: '3px 5px',\n    textColorHover: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    borderColorHover: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    checkedBackgroundHover: _get(siteVars, 'colorScheme.brand.backgroundHover', defaultValue),\n    toggleBorderRadius: pxToRem(999),\n    toggleIndicatorSize: pxToRem(14),\n    toggleMargin: '0',\n    togglePadding: \"\".concat(padding, \" \").concat(toggleMovementDistance, \" \").concat(padding, \" \").concat(padding),\n    toggleWidth: pxToRem(38),\n    toggleHeight: pxToRem(20),\n    checkedTextColor: _get(siteVars, 'colorScheme.default.foreground', defaultValue),\n    checkedBackground: _get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n    checkedBorderColor: _get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n    checkedIndicatorColor: _get(siteVars, 'colorScheme.default.background', defaultValue),\n    toggleCheckedPadding: \"\".concat(padding, \" \").concat(padding, \" \").concat(padding, \" \").concat(toggleMovementDistance),\n    disabledBackground: _get(siteVars, 'colorScheme.default.background', defaultValue),\n    disabledBackgroundChecked: _get(siteVars, 'colorScheme.default.backgroundDisabled', defaultValue),\n    disabledBorderColor: _get(siteVars, 'colorScheme.default.foregroundDisabled1', defaultValue),\n    disabledCheckedIndicatorColor: _get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n    disabledToggleIndicatorColor: _get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue)\n  };\n});","map":{"version":3,"sources":["themes/teams/components/Checkbox/checkboxVariables.ts"],"names":["toggleMovementDistance","pxToRem","padding","defaultValue","checkboxColor","toggleBackground","toggleBorderColor","siteVars","toggleBorderStyle","toggleBorderWidth","toggleIndicatorColor","checkboxCheckedColor","checkboxToggleCheckedBackground","checkboxToggleCheckedBorderColor","checkboxToggleCheckedColor","disabledColor","disabledCheckboxColor","disabledToggleBackground","disabledToggleBorderColor","textColor","background","borderColor","borderStyle","borderRadius","borderWidth","indicatorColor","gap","margin","rootPadding","textColorHover","borderColorHover","checkedBackgroundHover","toggleBorderRadius","toggleIndicatorSize","toggleMargin","togglePadding","toggleWidth","toggleHeight","checkedTextColor","checkedBackground","checkedBorderColor","checkedIndicatorColor","toggleCheckedPadding","disabledBackground","disabledBackgroundChecked","disabledBorderColor","disabledCheckedIndicatorColor","disabledToggleIndicatorColor"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport * as _ from 'lodash';\n\nexport type CheckboxVariables = {\n  rootPadding: string;\n\n  textColor: string;\n  indicatorColor: string;\n\n  textColorHover: string;\n  borderColorHover: string;\n  background: string;\n  borderColor: string;\n  borderStyle: string;\n  borderRadius: string;\n  borderWidth: string;\n  checkboxColor: string;\n  gap: string;\n  margin: string;\n  padding: string;\n\n  toggleBackground: string;\n  toggleBorderColor: string;\n  toggleBorderStyle: string;\n  toggleBorderRadius: string;\n  toggleBorderWidth: string;\n  toggleIndicatorColor: string;\n  toggleMargin: string;\n  togglePadding: string;\n\n  checkedBackground: string;\n  checkedBorderColor: string;\n  checkboxCheckedColor: string;\n  checkedBackgroundHover: string;\n  checkedTextColor: string;\n  checkedIndicatorColor: string;\n  checkboxToggleCheckedColor: string;\n  checkboxToggleCheckedBackground: string;\n  checkboxToggleCheckedBorderColor: string;\n  toggleCheckedPadding: string;\n  toggleIndicatorSize: string;\n  toggleWidth: string;\n  toggleHeight: string;\n\n  disabledColor: string;\n  disabledBackground: string;\n  disabledBorderColor: string;\n  disabledCheckboxColor: string;\n  disabledToggleIndicatorColor: string;\n  disabledToggleBackground: string;\n  disabledToggleBorderColor: string;\n  disabledBackgroundChecked: string;\n  disabledCheckedIndicatorColor: string;\n};\n\nconst toggleMovementDistance = pxToRem(20);\nconst padding = pxToRem(2);\nconst defaultValue = 'red';\n\nexport default (siteVars: any): CheckboxVariables => ({\n  checkboxColor: 'transparent',\n\n  toggleBackground: 'transparent',\n  toggleBorderColor: siteVars.colors.grey[300],\n  toggleBorderStyle: `solid`,\n  toggleBorderWidth: pxToRem(1),\n  toggleIndicatorColor: 'inherit',\n\n  checkboxCheckedColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedBackground: 'transparent',\n  checkboxToggleCheckedBorderColor: siteVars.colors.grey[500],\n  checkboxToggleCheckedColor: 'inherit',\n\n  disabledColor: siteVars.colors.grey[300],\n\n  disabledCheckboxColor: siteVars.colors.grey[300],\n  disabledToggleBackground: 'transparent',\n  disabledToggleBorderColor: siteVars.colors.grey[200],\n  textColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  background: 'transparent',\n  borderColor: _.get(siteVars, 'colorScheme.default.foreground1', defaultValue),\n  borderStyle: 'solid',\n  borderRadius: pxToRem(3),\n  borderWidth: pxToRem(1),\n  indicatorColor: 'transparent',\n  gap: pxToRem(12),\n  margin: `${pxToRem(2.8)} 0 0 0`,\n  padding,\n  rootPadding: '3px 5px',\n\n  textColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  borderColorHover: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackgroundHover: _.get(siteVars, 'colorScheme.brand.backgroundHover', defaultValue),\n\n  toggleBorderRadius: pxToRem(999),\n  toggleIndicatorSize: pxToRem(14),\n  toggleMargin: '0',\n  togglePadding: `${padding} ${toggleMovementDistance} ${padding} ${padding}`,\n  toggleWidth: pxToRem(38),\n  toggleHeight: pxToRem(20),\n\n  checkedTextColor: _.get(siteVars, 'colorScheme.default.foreground', defaultValue),\n  checkedBackground: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedBorderColor: _.get(siteVars, 'colorScheme.brand.backgroundActive1', defaultValue),\n  checkedIndicatorColor: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  toggleCheckedPadding: `${padding} ${padding} ${padding} ${toggleMovementDistance}`,\n\n  disabledBackground: _.get(siteVars, 'colorScheme.default.background', defaultValue),\n  disabledBackgroundChecked: _.get(siteVars, 'colorScheme.default.backgroundDisabled', defaultValue),\n  disabledBorderColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled1', defaultValue),\n  disabledCheckedIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n  disabledToggleIndicatorColor: _.get(siteVars, 'colorScheme.default.foregroundDisabled', defaultValue),\n});\n"]},"metadata":{},"sourceType":"module"}