{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\n/**\n * @description\n * Provides navigation between focusable children of Grid component with arrow keys in horizontal direction (based on DOM order).\n * Right/Down arrow keys move to next item, Up/Left  arrow keys to previous item. Right and Left arrow keys are switched in RTL mode.\n *\n * @specification\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n */\n\nvar gridHorizontalBehavior = function gridHorizontalBehavior() {\n  return {\n    attributes: {},\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.bidirectionalDomOrder\n      }\n    }\n  };\n};\n\nexport default gridHorizontalBehavior;","map":{"version":3,"sources":["behaviors/Grid/gridHorizontalBehavior.ts"],"names":["gridHorizontalBehavior","attributes","focusZone","props","direction","FocusZoneDirection","bidirectionalDomOrder"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AAEA;;;;;;;;;AAQA,IAAMA,sBAAqC,GAAG,SAAxCA,sBAAwC,GAAA;AAAA,SAAO;AACnDC,IAAAA,UAAU,EADyC,EAAA;AAEnDC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AADzB;AADE;AAFwC,GAAP;AAA9C,CAAA;;AASA,eAAA,sBAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Provides navigation between focusable children of Grid component with arrow keys in horizontal direction (based on DOM order).\n * Right/Down arrow keys move to next item, Up/Left  arrow keys to previous item. Right and Left arrow keys are switched in RTL mode.\n *\n * @specification\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n */\nconst gridHorizontalBehavior: Accessibility = () => ({\n  attributes: {},\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n});\n\nexport default gridHorizontalBehavior;\n"]},"metadata":{},"sourceType":"module"}