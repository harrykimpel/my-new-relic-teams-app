{"ast":null,"code":"import { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport Button from '../Button/Button';\nexport var attachmentActionClassName = 'ui-attachment__action';\n/**\n * An AttachmentAction provides a slot for actions in the Attachment.\n */\n\nvar AttachmentAction = compose(Button, {\n  className: attachmentActionClassName,\n  displayName: 'AttachmentAction',\n  overrideStyles: true\n});\nAttachmentAction.defaultProps = {\n  accessibility: buttonBehavior,\n  as: 'button'\n};\nAttachmentAction.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: 'shorthand'\n}), {\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool])\n});\nAttachmentAction.shorthandConfig = {\n  mappedProp: 'content'\n};\nexport default AttachmentAction;","map":{"version":3,"sources":["components/Attachment/AttachmentAction.tsx"],"names":["attachmentActionClassName","AttachmentAction","compose","className","displayName","overrideStyles","accessibility","as","content","disabled","PropTypes","icon","customPropTypes","iconPosition","loader","loading","onClick","onFocus","primary","secondary","mappedProp"],"mappings":"AAAA,SAAA,cAAA,QAAA,yBAAA;AACA,OAAO,KAAP,eAAA,MAAA,2BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,SAAA,OAAA,QAAA,0BAAA;AAEA,SAAA,eAAA,QAAA,aAAA;AACA,OAAA,MAAA,MAAA,kBAAA;AAoBA,OAAO,IAAMA,yBAAyB,GAA/B,uBAAA;AAEP;;;;AAGA,IAAMC,gBAAgB,GAAGC,OAAO,CAAA,MAAA,EAMtB;AACRC,EAAAA,SAAS,EADD,yBAAA;AAERC,EAAAA,WAAW,EAFH,kBAAA;AAGRC,EAAAA,cAAc,EAAE;AAHR,CANsB,CAAhC;AAYAJ,gBAAgB,CAAhBA,YAAAA,GAAgC;AAC9BK,EAAAA,aAAa,EADiB,cAAA;AAE9BC,EAAAA,EAAE,EAAE;AAF0B,CAAhCN;AAIAA,gBAAgB,CAAhBA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EACK,eAAe,CAAf,YAAA,CAA6B;AAC9BO,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADLP,EAAAA;AAIEQ,EAAAA,QAAQ,EAAEC,SAAS,CAJrBT,IAAAA;AAKEU,EAAAA,IAAI,EAAEC,eAAe,CALvBX,yBAAAA;AAMEY,EAAAA,YAAY,EAAEH,SAAS,CAATA,KAAAA,CAAgB,CAAA,QAAA,EANhCT,OAMgC,CAAhBS,CANhBT;AAOEa,EAAAA,MAAM,EAAEF,eAAe,CAPzBX,uBAAAA;AAQEc,EAAAA,OAAO,EAAEL,SAAS,CARpBT,IAAAA;AASEe,EAAAA,OAAO,EAAEN,SAAS,CATpBT,IAAAA;AAUEgB,EAAAA,OAAO,EAAEP,SAAS,CAVpBT,IAAAA;AAWEiB,EAAAA,OAAO,EAAEN,eAAe,CAAfA,KAAAA,CAAsB,CAACA,eAAe,CAAfA,QAAAA,CAAyB,CAA1B,WAA0B,CAAzBA,CAAD,EAA0CF,SAAS,CAXpFT,IAWiC,CAAtBW,CAXXX;AAYEkB,EAAAA,SAAS,EAAEP,eAAe,CAAfA,KAAAA,CAAsB,CAACA,eAAe,CAAfA,QAAAA,CAAyB,CAA1B,SAA0B,CAAzBA,CAAD,EAAwCF,SAAS,CAAvEE,IAAsB,CAAtBA;AAZbX,CAAAA,CAAAA;AAeAA,gBAAgB,CAAhBA,eAAAA,GAAmC;AACjCmB,EAAAA,UAAU,EAAE;AADqB,CAAnCnB;AAIA,eAAA,gBAAA","sourcesContent":["import { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose, ComponentWithAs } from '@fluentui/react-bindings';\n\nimport { commonPropTypes, ShorthandConfig } from '../../utils';\nimport Button, { ButtonProps, ButtonStylesProps } from '../Button/Button';\n\ninterface AttachmentActionOwnProps {}\nexport interface AttachmentActionProps extends AttachmentActionOwnProps, ButtonProps {\n  text?: never;\n  iconOnly?: never;\n  circular?: never;\n  size?: never;\n  fluid?: never;\n  inverted?: never;\n}\n\nexport type AttachmentActionStylesProps = ButtonStylesProps & {\n  text?: never;\n  iconOnly?: never;\n  circular?: never;\n  size?: never;\n  fluid?: never;\n  inverted?: never;\n};\nexport const attachmentActionClassName = 'ui-attachment__action';\n\n/**\n * An AttachmentAction provides a slot for actions in the Attachment.\n */\nconst AttachmentAction = compose<\n  'button',\n  AttachmentActionOwnProps,\n  AttachmentActionStylesProps,\n  ButtonProps,\n  ButtonStylesProps\n>(Button, {\n  className: attachmentActionClassName,\n  displayName: 'AttachmentAction',\n  overrideStyles: true,\n}) as ComponentWithAs<'button', AttachmentActionProps> & { shorthandConfig: ShorthandConfig<AttachmentActionProps> };\n\nAttachmentAction.defaultProps = {\n  accessibility: buttonBehavior,\n  as: 'button',\n};\nAttachmentAction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n};\n\nAttachmentAction.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nexport default AttachmentAction;\n"]},"metadata":{},"sourceType":"module"}