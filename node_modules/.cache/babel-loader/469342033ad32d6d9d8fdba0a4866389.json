{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport { listItemBehavior } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport Box from '../Box/Box';\nimport { withSafeTypeForAs } from '../../types';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ListContext } from './listContext';\nexport var listItemClassName = 'ui-list__item';\nexport var listItemSlotClassNames = {\n  header: \"\".concat(listItemClassName, \"__header\"),\n  headerMedia: \"\".concat(listItemClassName, \"__headerMedia\"),\n  headerWrapper: \"\".concat(listItemClassName, \"__headerWrapper\"),\n  main: \"\".concat(listItemClassName, \"__main\"),\n  content: \"\".concat(listItemClassName, \"__content\"),\n  contentMedia: \"\".concat(listItemClassName, \"__contentMedia\"),\n  contentWrapper: \"\".concat(listItemClassName, \"__contentWrapper\"),\n  media: \"\".concat(listItemClassName, \"__media\"),\n  endMedia: \"\".concat(listItemClassName, \"__endMedia\")\n};\n\nvar ListItem = function ListItem(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(ListItem.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      className = props.className,\n      content = props.content,\n      contentMedia = props.contentMedia,\n      design = props.design,\n      endMedia = props.endMedia,\n      header = props.header,\n      important = props.important,\n      headerMedia = props.headerMedia,\n      media = props.media,\n      styles = props.styles;\n  var parentProps = useContextSelectors(ListContext, {\n    debug: function debug(v) {\n      return v.debug;\n    },\n    navigable: function navigable(v) {\n      return v.navigable;\n    },\n    selectable: function selectable(v) {\n      return v.selectable;\n    },\n    truncateContent: function truncateContent(v) {\n      return v.truncateContent;\n    },\n    truncateHeader: function truncateHeader(v) {\n      return v.truncateHeader;\n    },\n    variables: function variables(v) {\n      return v.variables;\n    },\n    onItemClick: function onItemClick(v) {\n      return v.onItemClick;\n    },\n    selected: function selected(v) {\n      return v.selectedIndex === props.index;\n    }\n  });\n  var _props$debug = props.debug,\n      debug = _props$debug === void 0 ? parentProps.debug : _props$debug,\n      _props$navigable = props.navigable,\n      navigable = _props$navigable === void 0 ? parentProps.navigable : _props$navigable,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? parentProps.selectable : _props$selectable,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? parentProps.selected : _props$selected,\n      _props$truncateConten = props.truncateContent,\n      truncateContent = _props$truncateConten === void 0 ? parentProps.truncateContent : _props$truncateConten,\n      _props$truncateHeader = props.truncateHeader,\n      truncateHeader = _props$truncateHeader === void 0 ? parentProps.truncateHeader : _props$truncateHeader,\n      _props$variables = props.variables,\n      variables = _props$variables === void 0 ? parentProps.variables : _props$variables;\n  var getA11Props = useAccessibility(accessibility, {\n    debugName: ListItem.displayName,\n    actionHandlers: {\n      performClick: function performClick(e) {\n        e.preventDefault();\n        handleClick(e);\n      }\n    },\n    mapPropsToBehavior: function mapPropsToBehavior() {\n      return {\n        navigable: navigable,\n        selectable: selectable,\n        selected: selected\n      };\n    },\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(ListItem.displayName, {\n    className: listItemClassName,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        debug: debug,\n        navigable: navigable,\n        important: important,\n        selectable: selectable,\n        selected: selected,\n        truncateContent: truncateContent,\n        truncateHeader: truncateHeader,\n        hasContent: !!content,\n        hasContentMedia: !!contentMedia,\n        hasHeader: !!header,\n        hasHeaderMedia: !!headerMedia\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes,\n      resolvedStyles = _useStyles.styles;\n\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n  var handleClick = function handleClick(e) {\n    _invoke(props, 'onClick', e, props);\n\n    parentProps.onItemClick(e, props.index);\n  };\n\n  var contentElement = Box.create(content, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.content,\n        styles: resolvedStyles.content\n      };\n    }\n  });\n  var contentMediaElement = Box.create(contentMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.contentMedia,\n        styles: resolvedStyles.contentMedia\n      };\n    }\n  });\n  var headerElement = Box.create(header, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.header,\n        styles: resolvedStyles.header\n      };\n    }\n  });\n  var headerMediaElement = Box.create(headerMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.headerMedia,\n        styles: resolvedStyles.headerMedia\n      };\n    }\n  });\n  var endMediaElement = Box.create(endMedia, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.endMedia,\n        styles: resolvedStyles.endMedia\n      };\n    }\n  });\n  var mediaElement = Box.create(media, {\n    defaultProps: function defaultProps() {\n      return {\n        className: listItemSlotClassNames.media,\n        styles: resolvedStyles.media\n      };\n    }\n  });\n  var element = React.createElement(ElementType, getA11Props('root', Object.assign({\n    className: classes.root,\n    onClick: handleClick\n  }, unhandledProps)), mediaElement, React.createElement(\"div\", {\n    className: cx(listItemSlotClassNames.main, classes.main)\n  }, (headerElement || headerMediaElement) && React.createElement(\"div\", {\n    className: cx(listItemSlotClassNames.headerWrapper, classes.headerWrapper)\n  }, headerElement, headerMediaElement), (contentElement || contentMediaElement) && React.createElement(\"div\", {\n    className: cx(listItemSlotClassNames.contentWrapper, classes.contentWrapper)\n  }, contentElement, contentMediaElement)), endMediaElement);\n  setEnd();\n  return element;\n};\n\nListItem.displayName = 'ListItem';\nListItem.defaultProps = {\n  as: 'li',\n  accessibility: listItemBehavior\n};\nListItem.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n  debug: PropTypes.bool,\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n  important: PropTypes.bool,\n  media: PropTypes.any,\n  selectable: PropTypes.bool,\n  navigable: PropTypes.bool,\n  index: PropTypes.number,\n  selected: PropTypes.bool,\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n  onClick: PropTypes.func\n});\nListItem.handledProps = Object.keys(ListItem.propTypes);\nListItem.create = createShorthandFactory({\n  Component: ListItem,\n  mappedProp: 'content'\n});\n/**\n * A ListItem contains a single piece of content within a List.\n */\n\nexport default withSafeTypeForAs(ListItem);","map":{"version":3,"sources":["components/List/ListItem.tsx"],"names":["listItemClassName","listItemSlotClassNames","header","headerMedia","headerWrapper","main","content","contentMedia","contentWrapper","media","endMedia","ListItem","context","React","setStart","setEnd","useTelemetry","accessibility","className","design","important","styles","props","parentProps","useContextSelectors","debug","v","navigable","selectable","truncateContent","truncateHeader","variables","onItemClick","selected","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","handleClick","mapPropsToBehavior","rtl","classes","resolvedStyles","useStyles","mapPropsToStyles","hasContent","hasContentMedia","hasHeader","hasHeaderMedia","mapPropsToInlineStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","contentElement","defaultProps","contentMediaElement","headerElement","headerMediaElement","endMediaElement","mediaElement","element","onClick","cx","as","listItemBehavior","PropTypes","index","func","Object","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, listItemBehavior, ListItemBehaviorProps } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport Box, { BoxProps } from '../Box/Box';\nimport {\n  ShorthandValue,\n  WithAsProp,\n  ComponentEventHandler,\n  withSafeTypeForAs,\n  ProviderContextPrepared,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes, ContentComponentProps } from '../../utils';\nimport { ListContext, ListContextSubscribedValue } from './listContext';\n\nexport interface ListItemSlotClassNames {\n  header: string;\n  headerMedia: string;\n  headerWrapper: string;\n  content: string;\n  contentMedia: string;\n  contentWrapper: string;\n  main: string;\n  media: string;\n  endMedia: string;\n}\n\nexport interface ListItemProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ListItemBehaviorProps>;\n  contentMedia?: ShorthandValue<BoxProps>;\n  /** Toggle debug mode. */\n  debug?: boolean;\n  header?: ShorthandValue<BoxProps>;\n  endMedia?: ShorthandValue<BoxProps>;\n  headerMedia?: ShorthandValue<BoxProps>;\n\n  /** A list item can appear more important and draw the user's attention. */\n  important?: boolean;\n  media?: ShorthandValue<BoxProps>;\n\n  index?: number;\n  /** A list item can indicate that it can be selected. */\n  selectable?: boolean;\n\n  /** A list item can indicate that it can be navigable. */\n  navigable?: boolean;\n\n  /** Indicates if the current list item is selected. */\n  selected?: boolean;\n  truncateContent?: boolean;\n  truncateHeader?: boolean;\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ListItemProps>;\n}\n\nexport type ListItemStylesProps = Pick<\n  ListItemProps,\n  'debug' | 'important' | 'navigable' | 'selectable' | 'selected' | 'truncateContent' | 'truncateHeader'\n> & {\n  hasContent?: boolean;\n  hasContentMedia?: boolean;\n  hasHeader?: boolean;\n  hasHeaderMedia?: boolean;\n};\n\nexport const listItemClassName = 'ui-list__item';\nexport const listItemSlotClassNames: ListItemSlotClassNames = {\n  header: `${listItemClassName}__header`,\n  headerMedia: `${listItemClassName}__headerMedia`,\n  headerWrapper: `${listItemClassName}__headerWrapper`,\n  main: `${listItemClassName}__main`,\n  content: `${listItemClassName}__content`,\n  contentMedia: `${listItemClassName}__contentMedia`,\n  contentWrapper: `${listItemClassName}__contentWrapper`,\n  media: `${listItemClassName}__media`,\n  endMedia: `${listItemClassName}__endMedia`,\n};\n\nconst ListItem: React.FC<WithAsProp<ListItemProps> & { index: number }> &\n  FluentComponentStaticProps<ListItemProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(ListItem.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    accessibility,\n    className,\n    content,\n    contentMedia,\n    design,\n    endMedia,\n    header,\n    important,\n    headerMedia,\n    media,\n    styles,\n  } = props;\n\n  const parentProps: ListContextSubscribedValue = useContextSelectors(ListContext, {\n    debug: v => v.debug,\n    navigable: v => v.navigable,\n    selectable: v => v.selectable,\n    truncateContent: v => v.truncateContent,\n    truncateHeader: v => v.truncateHeader,\n    variables: v => v.variables,\n    onItemClick: v => v.onItemClick,\n    selected: v => v.selectedIndex === props.index,\n  });\n  const {\n    debug = parentProps.debug,\n    navigable = parentProps.navigable,\n    selectable = parentProps.selectable,\n    selected = parentProps.selected,\n    truncateContent = parentProps.truncateContent,\n    truncateHeader = parentProps.truncateHeader,\n    variables = parentProps.variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: ListItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      navigable,\n      selectable,\n      selected,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ListItemStylesProps>(ListItem.displayName, {\n    className: listItemClassName,\n    mapPropsToStyles: () => ({\n      debug,\n      navigable,\n      important,\n      selectable,\n      selected,\n      truncateContent,\n      truncateHeader,\n\n      hasContent: !!content,\n      hasContentMedia: !!contentMedia,\n      hasHeader: !!header,\n      hasHeaderMedia: !!headerMedia,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ListItem.handledProps, props);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    parentProps.onItemClick(e, props.index);\n  };\n\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n  const contentMediaElement = Box.create(contentMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.contentMedia,\n      styles: resolvedStyles.contentMedia,\n    }),\n  });\n  const headerElement = Box.create(header, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.header,\n      styles: resolvedStyles.header,\n    }),\n  });\n  const headerMediaElement = Box.create(headerMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.headerMedia,\n      styles: resolvedStyles.headerMedia,\n    }),\n  });\n  const endMediaElement = Box.create(endMedia, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.endMedia,\n      styles: resolvedStyles.endMedia,\n    }),\n  });\n  const mediaElement = Box.create(media, {\n    defaultProps: () => ({\n      className: listItemSlotClassNames.media,\n      styles: resolvedStyles.media,\n    }),\n  });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {mediaElement}\n\n      <div className={cx(listItemSlotClassNames.main, classes.main)}>\n        {(headerElement || headerMediaElement) && (\n          <div className={cx(listItemSlotClassNames.headerWrapper, classes.headerWrapper)}>\n            {headerElement}\n            {headerMediaElement}\n          </div>\n        )}\n        {(contentElement || contentMediaElement) && (\n          <div className={cx(listItemSlotClassNames.contentWrapper, classes.contentWrapper)}>\n            {contentElement}\n            {contentMediaElement}\n          </div>\n        )}\n      </div>\n\n      {endMediaElement}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nListItem.displayName = 'ListItem';\n\nListItem.defaultProps = {\n  as: 'li',\n  accessibility: listItemBehavior,\n};\n\nListItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n\n  debug: PropTypes.bool,\n\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n\n  important: PropTypes.bool,\n  media: PropTypes.any,\n\n  selectable: PropTypes.bool,\n  navigable: PropTypes.bool,\n  index: PropTypes.number,\n  selected: PropTypes.bool,\n\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n\n  onClick: PropTypes.func,\n};\nListItem.handledProps = Object.keys(ListItem.propTypes) as any;\n\nListItem.create = createShorthandFactory({ Component: ListItem, mappedProp: 'content' });\n\n/**\n * A ListItem contains a single piece of content within a List.\n */\nexport default withSafeTypeForAs<typeof ListItem, ListItemProps, 'li'>(ListItem);\n"]},"metadata":{},"sourceType":"module"}