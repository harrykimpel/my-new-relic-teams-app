{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport keyboardKey from 'keyboard-key';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\nimport DebugPanel from './DebugPanel';\nimport FiberNavigator from './FiberNavigator';\nimport DebugRect from './DebugRect';\n/* eslint-disable no-console */\n\nvar INITIAL_STATE = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false\n};\n\nvar Debug = /*#__PURE__*/function (_React$Component) {\n  _inherits(Debug, _React$Component);\n\n  function Debug(p, s) {\n    var _this;\n\n    _classCallCheck(this, Debug);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Debug).call(this, p, s));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", INITIAL_STATE);\n\n    _defineProperty(_assertThisInitialized(_this), \"debugReactComponent\", function (r) {\n      if (!r) {\n        console.error(\"No React component selected. Please select a Fluent UI component from the React's Component panel.\");\n        return;\n      }\n\n      if (!r._reactInternalFiber) {\n        console.error('React does not provide data for debugging for this component. Try selecting some Fluent UI component.');\n        return;\n      }\n\n      if (!r.fluentUIDebug) {\n        console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n        return;\n      }\n\n      var fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n\n      _this.setState({\n        fiberNav: fiberNav,\n        isSelecting: false,\n        selectedFiberNav: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"debugDOMNode\", function (domNode) {\n      var fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n      if (!fiberNav) {\n        console.error('No fiber for dom node', domNode);\n        return;\n      }\n\n      fiberNav = fiberNav.findOwner(function (fiber) {\n        return fiber.fluentUIDebug;\n      });\n\n      if (fiberNav !== _this.state.fiberNav) {\n        _this.setState({\n          fiberNav: fiberNav\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      var code = keyboardKey.getCode(e);\n\n      switch (code) {\n        case keyboardKey.Escape:\n          _this.stopSelecting();\n\n          break;\n\n        case keyboardKey.d:\n          if (e.altKey && e.shiftKey) {\n            _this.startSelecting();\n          }\n\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      _this.debugDOMNode(e.target);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDOMNodeClick\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.setState({\n        isSelecting: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startSelecting\", function () {\n      var isSelecting = !_this.state.isSelecting;\n\n      _this.setState(Object.assign({}, !isSelecting && INITIAL_STATE, {\n        isSelecting: isSelecting\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopSelecting\", function () {\n      _this.setState(INITIAL_STATE);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectFiber\", function (selectedFiberNav) {\n      return _this.setState({\n        selectedFiberNav: selectedFiberNav\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeFiber\", function (fiberNav) {\n      return _this.setState({\n        fiberNav: fiberNav\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"positionRight\", function () {\n      return _this.setState({\n        debugPanelPosition: 'right'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"positionLeft\", function () {\n      return _this.setState({\n        debugPanelPosition: 'left'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      return _this.setState(INITIAL_STATE);\n    });\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      window.openDebugPanel = function () {\n        // eslint-disable-next-line no-undef\n        _this.debugReactComponent(window.$r);\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Debug, [{\n    key: \"render\",\n    value: function render() {\n      var mountDocument = this.props.mountDocument;\n      var _this$state = this.state,\n          fiberNav = _this$state.fiberNav,\n          selectedFiberNav = _this$state.selectedFiberNav,\n          isSelecting = _this$state.isSelecting,\n          debugPanelPosition = _this$state.debugPanelPosition;\n\n      if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n        return React.createElement(React.Fragment, null, React.createElement(EventListener, {\n          listener: this.handleKeyDown,\n          target: mountDocument.body,\n          type: \"keydown\"\n        }), isSelecting && React.createElement(EventListener, {\n          listener: this.handleMouseMove,\n          target: mountDocument.body,\n          type: \"mousemove\"\n        }), isSelecting && fiberNav && fiberNav.domNode && React.createElement(EventListener, {\n          listener: this.handleDOMNodeClick,\n          target: fiberNav.domNode,\n          type: \"click\"\n        }), isSelecting && fiberNav && React.createElement(DebugRect, {\n          fiberNav: fiberNav\n        }), selectedFiberNav && React.createElement(DebugRect, {\n          fiberNav: selectedFiberNav\n        }), !isSelecting && fiberNav && fiberNav.instance && React.createElement(DebugPanel, {\n          fiberNav: fiberNav,\n          onActivateDebugSelectorClick: this.startSelecting,\n          onClose: this.close // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n          // cssStyles={stylesForNode(domNode)}\n          ,\n          debugData: fiberNav.fluentUIDebug,\n          position: debugPanelPosition || 'right',\n          onPositionLeft: this.positionLeft,\n          onPositionRight: this.positionRight,\n          onFiberChanged: this.changeFiber,\n          onFiberSelected: this.selectFiber\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Debug;\n}(React.Component);\n\n_defineProperty(Debug, \"defaultProps\", {\n  // eslint-disable-next-line no-undef\n  mountDocument: isBrowser() ? window.document : null\n});\n\n_defineProperty(Debug, \"propTypes\", {\n  mountDocument: PropTypes.object.isRequired\n});\n\nexport default Debug;","map":{"version":3,"sources":["components/Debug/Debug.tsx"],"names":["INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","React","Component","mountDocument","isBrowser","window","PropTypes","isRequired","process","console","r","FiberNavigator","fiber","code","keyboardKey","e","debugPanelPosition","selectFiber"],"mappings":"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","sourcesContent":["import keyboardKey from 'keyboard-key';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport DebugPanel from './DebugPanel';\nimport FiberNavigator from './FiberNavigator';\nimport DebugRect from './DebugRect';\n\n/* eslint-disable no-console */\n\ntype DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\ntype DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nclass Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = keyboardKey.getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Debug;\n"]},"metadata":{},"sourceType":"module"}