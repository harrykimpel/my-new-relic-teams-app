{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport { chatMessageSlotClassNames } from '../../../../components/Chat/ChatMessage';\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { pxToRem } from '../../../../utils';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nvar chatMessageStyles = {\n  root: function root(_ref) {\n    var _ref2, _ref4;\n\n    var p = _ref.props,\n        v = _ref.variables,\n        siteVariables = _ref.theme.siteVariables;\n    return Object.assign({\n      display: 'inline-block',\n      position: 'relative',\n      marginLeft: p.mine ? v.offset : 0,\n      marginRight: !p.mine ? v.offset : 0,\n      maxWidth: \"calc(100% - \".concat(v.offset, \")\"),\n      minWidth: v.offset,\n      paddingLeft: v.padding,\n      paddingRight: v.padding,\n      paddingTop: pxToRem(8),\n      paddingBottom: pxToRem(10),\n      borderRadius: v.borderRadius,\n      border: v.border,\n      outline: 0,\n      color: v.color,\n      backgroundColor: p.mine ? v.backgroundColorMine : v.backgroundColor,\n      wordBreak: 'break-word',\n      wordWrap: 'break-word'\n    }, (v.hasMention || v.isImportant) && {\n      '::before': {\n        content: '\"\"',\n        backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,\n        height: '100%',\n        left: '0',\n        position: 'absolute',\n        top: '0',\n        width: pxToRem(3),\n        borderBottomLeftRadius: 'inherit',\n        borderTopLeftRadius: 'inherit'\n      }\n    }, {}, getBorderFocusStyles({\n      variables: siteVariables\n    }), {}, _isNil(v.showActionMenu) && {\n      ':hover': _defineProperty({}, \"> .\".concat(chatMessageSlotClassNames.actionMenu), {\n        opacity: 1,\n        width: 'auto',\n        '[data-popper-escaped]': {\n          opacity: 0\n        }\n      })\n    }, {}, p.attached === true && (_ref2 = {}, _defineProperty(_ref2, p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius', 0), _defineProperty(_ref2, p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius', 0), _defineProperty(_ref2, \"paddingTop\", pxToRem(5)), _defineProperty(_ref2, \"paddingBottom\", pxToRem(7)), _ref2), {}, p.attached === 'top' && _defineProperty({}, p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius', 0), {}, p.attached === 'bottom' && (_ref4 = {}, _defineProperty(_ref4, p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius', 0), _defineProperty(_ref4, \"paddingTop\", pxToRem(5)), _defineProperty(_ref4, \"paddingBottom\", pxToRem(7)), _ref4));\n  },\n  actionMenu: function actionMenu(_ref5) {\n    var p = _ref5.props,\n        v = _ref5.variables;\n    return Object.assign({\n      backgroundColor: v.backgroundColor,\n      border: '1px solid',\n      borderColor: v.reactionGroupBorderColor,\n      borderRadius: v.borderRadius,\n      boxShadow: v.actionMenuBoxShadow,\n      // we need higher zIndex for the action menu in order to be displayed above the focus border of the chat message\n      zIndex: v.overlayZIndex\n    }, _isNil(v.showActionMenu) && {\n      overflow: p.focused ? 'visible' : 'hidden',\n      // hide and squash actions menu to prevent accidental hovers over its invisible area\n      opacity: p.focused ? 1 : 0,\n      width: p.focused ? 'auto' : 0\n    }, {}, !_isNil(v.showActionMenu) && {\n      overflow: v.showActionMenu ? 'visible' : 'hidden',\n      // opacity should always be preferred over visibility in order to avoid accessibility bugs in\n      // JAWS behavior on Windows\n      opacity: v.showActionMenu ? 1 : 0,\n      width: v.showActionMenu ? 'auto' : 0\n    }, {\n      '[data-popper-escaped]': {\n        opacity: 0\n      }\n    });\n  },\n  author: function author(_ref6) {\n    var p = _ref6.props,\n        v = _ref6.variables;\n    return Object.assign({}, (p.mine || p.attached === 'bottom' || p.attached === true) && screenReaderContainerStyles, {\n      color: v.authorColor,\n      marginRight: v.authorMarginRight,\n      marginBottom: v.headerMarginBottom,\n      fontWeight: v.authorFontWeight\n    });\n  },\n  timestamp: function timestamp(_ref7) {\n    var p = _ref7.props,\n        v = _ref7.variables;\n    return Object.assign({\n      marginBottom: v.headerMarginBottom\n    }, p.mine && {\n      color: v.timestampColorMine\n    }, {}, (p.attached === 'bottom' || p.attached === true) && !p.hasReactionGroup && screenReaderContainerStyles);\n  },\n  content: function content(_ref8) {\n    var p = _ref8.props,\n        v = _ref8.variables;\n    return Object.assign({\n      color: v.contentColor,\n      display: 'block',\n      '& a': {\n        outline: 'none',\n        color: p.mine ? v.linkColorMine : v.linkColor,\n        ':focus': {\n          textDecoration: 'underline'\n        }\n      }\n    }, p.hasBadge && p.badgePosition === 'end' && {\n      marginRight: pxToRem(4)\n    });\n  },\n  badge: function badge(_ref9) {\n    var _ref10;\n\n    var p = _ref9.props,\n        v = _ref9.variables;\n    var sidePosition = p.badgePosition === 'start' ? 'left' : 'right';\n    return _ref10 = {\n      backgroundColor: v.hasMention ? v.hasMentionNubbinColor : v.isImportantColor,\n      color: v.badgeTextColor,\n      boxShadow: v.badgeShadow,\n      position: 'absolute',\n      padding: pxToRem(4),\n      height: 'auto',\n      width: 'auto',\n      borderRadius: '50%',\n      top: pxToRem(4),\n      zIndex: v.zIndex\n    }, _defineProperty(_ref10, sidePosition, 0), _defineProperty(_ref10, \"transform\", p.badgePosition === 'start' ? 'translateX(-50%)' : 'translateX(50%)'), _defineProperty(_ref10, '& > :first-child', {\n      display: 'inline-flex'\n    }), _ref10;\n  },\n  reactionGroup: function reactionGroup(_ref11) {\n    var p = _ref11.props,\n        v = _ref11.variables;\n    return Object.assign({\n      marginLeft: v.reactionGroupMarginLeft\n    }, p.hasBadge && p.badgePosition === 'end' && {\n      marginRight: pxToRem(2)\n    }, {\n      float: 'right'\n    });\n  }\n};\nexport default chatMessageStyles;","map":{"version":3,"sources":["themes/teams/components/Chat/chatMessageStyles.ts"],"names":["chatMessageStyles","root","p","v","siteVariables","display","position","marginLeft","marginRight","maxWidth","minWidth","paddingLeft","paddingRight","paddingTop","pxToRem","paddingBottom","borderRadius","border","outline","color","backgroundColor","wordBreak","wordWrap","content","height","left","top","width","borderBottomLeftRadius","borderTopLeftRadius","getBorderFocusStyles","variables","chatMessageSlotClassNames","opacity","actionMenu","borderColor","boxShadow","zIndex","overlayZIndex","overflow","author","marginBottom","fontWeight","authorFontWeight","timestamp","headerMarginBottom","timestampColorMine","textDecoration","badge","props","sidePosition","padding","reactionGroup","reactionGroupMarginLeft","float"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport { ChatMessageStylesProps, chatMessageSlotClassNames } from '../../../../components/Chat/ChatMessage';\nimport { ChatMessageVariables } from './chatMessageVariables';\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { pxToRem } from '../../../../utils';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\n\nconst chatMessageStyles: ComponentSlotStylesPrepared<ChatMessageStylesProps, ChatMessageVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => ({\n    display: 'inline-block',\n    position: 'relative',\n\n    marginLeft: p.mine ? v.offset : 0,\n    marginRight: !p.mine ? v.offset : 0,\n    maxWidth: `calc(100% - ${v.offset})`,\n    minWidth: v.offset,\n\n    paddingLeft: v.padding,\n    paddingRight: v.padding,\n    paddingTop: pxToRem(8),\n    paddingBottom: pxToRem(10),\n\n    borderRadius: v.borderRadius,\n    border: v.border,\n    outline: 0,\n\n    color: v.color,\n    backgroundColor: p.mine ? v.backgroundColorMine : v.backgroundColor,\n\n    wordBreak: 'break-word',\n    wordWrap: 'break-word',\n\n    ...((v.hasMention || v.isImportant) && {\n      '::before': {\n        content: '\"\"',\n        backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,\n        height: '100%',\n        left: '0',\n        position: 'absolute',\n        top: '0',\n        width: pxToRem(3),\n        borderBottomLeftRadius: 'inherit',\n        borderTopLeftRadius: 'inherit',\n      },\n    }),\n\n    ...getBorderFocusStyles({ variables: siteVariables }),\n\n    // actions menu's appearance can be controlled by the value of showActionMenu variable - in this\n    // case this variable will serve the single source of truth on whether actions menu should be shown.\n    // Otherwise, if the variable is not provided, the default appearance logic will be used for actions menu.\n    ...(_.isNil(v.showActionMenu) && {\n      ':hover': {\n        [`> .${chatMessageSlotClassNames.actionMenu}`]: {\n          opacity: 1,\n          width: 'auto',\n\n          '[data-popper-escaped]': {\n            opacity: 0,\n          },\n        },\n      },\n    }),\n\n    ...(p.attached === true && {\n      [p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius']: 0,\n      [p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius']: 0,\n      paddingTop: pxToRem(5),\n      paddingBottom: pxToRem(7),\n    }),\n    ...(p.attached === 'top' && {\n      [p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius']: 0,\n    }),\n    ...(p.attached === 'bottom' && {\n      [p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius']: 0,\n      paddingTop: pxToRem(5),\n      paddingBottom: pxToRem(7),\n    }),\n  }),\n\n  actionMenu: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    backgroundColor: v.backgroundColor,\n    border: '1px solid',\n    borderColor: v.reactionGroupBorderColor,\n    borderRadius: v.borderRadius,\n    boxShadow: v.actionMenuBoxShadow,\n    // we need higher zIndex for the action menu in order to be displayed above the focus border of the chat message\n    zIndex: v.overlayZIndex,\n\n    ...(_.isNil(v.showActionMenu) && {\n      overflow: p.focused ? 'visible' : 'hidden',\n      // hide and squash actions menu to prevent accidental hovers over its invisible area\n      opacity: p.focused ? 1 : 0,\n      width: p.focused ? 'auto' : 0,\n    }),\n\n    ...(!_.isNil(v.showActionMenu) && {\n      overflow: v.showActionMenu ? 'visible' : 'hidden',\n      // opacity should always be preferred over visibility in order to avoid accessibility bugs in\n      // JAWS behavior on Windows\n      opacity: v.showActionMenu ? 1 : 0,\n      width: v.showActionMenu ? 'auto' : 0,\n    }),\n\n    '[data-popper-escaped]': {\n      opacity: 0,\n    },\n  }),\n  author: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...((p.mine || p.attached === 'bottom' || p.attached === true) && (screenReaderContainerStyles as ICSSInJSStyle)),\n    color: v.authorColor,\n    marginRight: v.authorMarginRight,\n    marginBottom: v.headerMarginBottom,\n    fontWeight: v.authorFontWeight,\n  }),\n\n  timestamp: ({ props: p, variables: v }) => ({\n    marginBottom: v.headerMarginBottom,\n    ...(p.mine && {\n      color: v.timestampColorMine,\n    }),\n    ...((p.attached === 'bottom' || p.attached === true) &&\n      !p.hasReactionGroup &&\n      (screenReaderContainerStyles as ICSSInJSStyle)),\n  }),\n\n  content: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    color: v.contentColor,\n    display: 'block',\n    '& a': {\n      outline: 'none',\n      color: p.mine ? v.linkColorMine : v.linkColor,\n      ':focus': {\n        textDecoration: 'underline',\n      },\n    },\n    ...(p.hasBadge &&\n      p.badgePosition === 'end' && {\n        marginRight: pxToRem(4),\n      }),\n  }),\n  badge: ({ props: p, variables: v }) => {\n    const sidePosition = p.badgePosition === 'start' ? 'left' : 'right';\n    return {\n      backgroundColor: v.hasMention ? v.hasMentionNubbinColor : v.isImportantColor,\n      color: v.badgeTextColor,\n      boxShadow: v.badgeShadow,\n      position: 'absolute',\n      padding: pxToRem(4),\n      height: 'auto',\n      width: 'auto',\n      borderRadius: '50%',\n      top: pxToRem(4),\n      zIndex: v.zIndex,\n      [sidePosition]: 0,\n      transform: p.badgePosition === 'start' ? 'translateX(-50%)' : 'translateX(50%)',\n      '& > :first-child': {\n        display: 'inline-flex',\n      },\n    };\n  },\n  reactionGroup: ({ props: p, variables: v }) => ({\n    marginLeft: v.reactionGroupMarginLeft,\n    ...(p.hasBadge &&\n      p.badgePosition === 'end' && {\n        marginRight: pxToRem(2),\n      }),\n    float: 'right',\n  }),\n};\n\nexport default chatMessageStyles;\n"]},"metadata":{},"sourceType":"module"}