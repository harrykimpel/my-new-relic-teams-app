{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _invoke from \"lodash/invoke\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\nimport keyboardKey from 'keyboard-key';\nimport { withSafeTypeForAs } from '../../types';\nimport { createShorthandFactory, UIComponent, commonPropTypes } from '../../utils';\nimport Image from '../Image/Image';\nimport Label from '../Label/Label';\nimport Box from '../Box/Box';\nexport var dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';\nexport var dropdownSelectedItemSlotClassNames = {\n  header: \"\".concat(dropdownSelectedItemClassName, \"__header\"),\n  icon: \"\".concat(dropdownSelectedItemClassName, \"__icon\"),\n  image: \"\".concat(dropdownSelectedItemClassName, \"__image\")\n};\n\nvar DropdownSelectedItem = /*#__PURE__*/function (_UIComponent) {\n  _inherits(DropdownSelectedItem, _UIComponent);\n\n  function DropdownSelectedItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropdownSelectedItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownSelectedItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"itemRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      _invoke(_this.props, 'onKeyDown', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIconOverrides\", function (props) {\n      return function (predefinedProps) {\n        return Object.assign({}, props, {\n          onClick: function onClick(e, iconProps) {\n            e.stopPropagation();\n\n            _invoke(_this.props, 'onRemove', e, _this.props);\n\n            _invoke(predefinedProps, 'onClick', e, iconProps);\n          },\n          onKeyDown: function onKeyDown(e, iconProps) {\n            e.stopPropagation();\n\n            if (keyboardKey.getCode(e) === keyboardKey.Enter) {\n              _invoke(_this.props, 'onRemove', e, _this.props);\n            }\n\n            _invoke(predefinedProps, 'onKeyDown', e, iconProps);\n          }\n        });\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(DropdownSelectedItem, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.active && this.props.active) {\n        this.itemRef.current.focus();\n      }\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var _this2 = this;\n\n      var unhandledProps = _ref.unhandledProps,\n          classes = _ref.classes,\n          styles = _ref.styles;\n      var _this$props = this.props,\n          active = _this$props.active,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          image = _this$props.image;\n      var contentElement = Box.create(header, {\n        defaultProps: function defaultProps() {\n          return {\n            as: 'span',\n            className: dropdownSelectedItemSlotClassNames.header,\n            styles: styles.header\n          };\n        }\n      });\n      var iconProps = _isNil(icon) ? icon : {\n        name: null,\n        children: function children(ComponentType, props) {\n          return Box.create(icon, {\n            defaultProps: function defaultProps() {\n              return {\n                'aria-label': \"Remove \".concat(header, \" from selection.\"),\n                // TODO: Extract this in a behaviour.\n                className: dropdownSelectedItemSlotClassNames.icon,\n                styles: styles.icon\n              };\n            },\n            overrideProps: _this2.handleIconOverrides(props)\n          });\n        }\n      };\n      var imageProps = _isNil(image) ? image : {\n        children: function children(ComponentType, props) {\n          return Image.create(image, {\n            defaultProps: function defaultProps() {\n              return {\n                avatar: true,\n                className: dropdownSelectedItemSlotClassNames.image,\n                styles: styles.image\n              };\n            },\n            overrideProps: props\n          });\n        }\n      };\n      return React.createElement(Ref, {\n        innerRef: this.itemRef\n      }, React.createElement(Label, _extends({\n        className: classes.root,\n        tabIndex: active ? 0 : -1,\n        styles: styles.root,\n        circular: true,\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        content: contentElement,\n        icon: iconProps,\n        image: imageProps\n      }, unhandledProps)));\n    }\n  }]);\n\n  return DropdownSelectedItem;\n}(UIComponent);\n\n_defineProperty(DropdownSelectedItem, \"displayName\", 'DropdownSelectedItem');\n\n_defineProperty(DropdownSelectedItem, \"create\", void 0);\n\n_defineProperty(DropdownSelectedItem, \"deprecated_className\", dropdownSelectedItemClassName);\n\n_defineProperty(DropdownSelectedItem, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  accessibility: false,\n  children: false\n}), {\n  active: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onRemove: PropTypes.func\n}));\n\n_defineProperty(DropdownSelectedItem, \"defaultProps\", {\n  // TODO: fix me\n  icon: React.createElement(CloseIcon, null)\n});\n\nDropdownSelectedItem.create = createShorthandFactory({\n  Component: DropdownSelectedItem,\n  mappedProp: 'header'\n});\n/**\n * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.\n */\n\nexport default withSafeTypeForAs(DropdownSelectedItem);","map":{"version":3,"sources":["components/Dropdown/DropdownSelectedItem.tsx"],"names":["dropdownSelectedItemClassName","dropdownSelectedItemSlotClassNames","header","icon","image","DropdownSelectedItem","UIComponent","React","accessibility","children","active","PropTypes","bool","customPropTypes","itemShorthand","shorthandAllowingChildren","itemShorthandWithoutJSX","onClick","func","onKeyDown","onRemove","prevProps","e","keyboardKey","unhandledProps","classes","styles","contentElement","defaultProps","as","className","iconProps","name","overrideProps","imageProps","avatar","props","itemRef","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":";;;;;;;;;;AAAA,SAAA,GAAA,QAAA,+BAAA;AACA,OAAO,KAAP,eAAA,MAAA,2BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AAEA,SAAA,SAAA,QAAA,iCAAA;AAEA,OAAA,WAAA,MAAA,cAAA;AACA,SAAA,iBAAA,QAAA,aAAA;AAQA,SAAA,sBAAA,EAAA,WAAA,EAAA,eAAA,QAAA,aAAA;AAOA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,GAAA,MAAA,YAAA;AA8CA,OAAO,IAAMA,6BAA6B,GAAnC,2BAAA;AACP,OAAO,IAAMC,kCAAsE,GAAG;AACpFC,EAAAA,MAAM,EAAA,GAAA,MAAA,CAAA,6BAAA,EAD8E,UAC9E,CAD8E;AAEpFC,EAAAA,IAAI,EAAA,GAAA,MAAA,CAAA,6BAAA,EAFgF,QAEhF,CAFgF;AAGpFC,EAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,6BAAA,EAAA,SAAA;AAH+E,CAA/E;;IAMDC,oB;;;;;;;;;;;;;;;;8DACME,KAAK,CAALA,SAAAA,E;;kEA+BI,UAAA,CAAA,EAA6B;AACzC,MAAA,OAAA,CAAS,KAAA,CAAT,KAAA,EAAA,SAAA,EAAA,CAAA,EAAmC,KAAA,CAAnC,KAAA,CAAA;;;oEAGc,UAAA,CAAA,EAA6B;AAC3C,MAAA,OAAA,CAAS,KAAA,CAAT,KAAA,EAAA,WAAA,EAAA,CAAA,EAAqC,KAAA,CAArC,KAAA,CAAA;;;0EAGoB,UAAA,KAAA,EAAK;AAAA,aAAI,UAAA,eAAA,EAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAE7BU,UAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAA,SAAA,EAAkD;AACzDK,YAAAA,CAAC,CAADA,eAAAA;;AACA,YAAA,OAAA,CAAS,KAAA,CAAT,KAAA,EAAA,UAAA,EAAA,CAAA,EAAoC,KAAA,CAApC,KAAA,CAAA;;AACA,YAAA,OAAA,CAAA,eAAA,EAAA,SAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AAL2B,WAAA;AAO7BH,UAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,CAAA,EAAA,SAAA,EAAkD;AAC3DG,YAAAA,CAAC,CAADA,eAAAA;;AACA,gBAAIC,WAAW,CAAXA,OAAAA,CAAAA,CAAAA,MAA2BA,WAAW,CAA1C,KAAA,EAAkD;AAChD,cAAA,OAAA,CAAS,KAAA,CAAT,KAAA,EAAA,UAAA,EAAA,CAAA,EAAoC,KAAA,CAApC,KAAA,CAAA;AACD;;AACD,YAAA,OAAA,CAAA,eAAA,EAAA,WAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AACD;AAb4B,SAAA,CAAA;AAAJ,OAAA;;;;;;;;uCAdRF,S,EAAsC;AACvD,UAAI,CAACA,SAAS,CAAV,MAAA,IAAqB,KAAA,KAAA,CAAzB,MAAA,EAA4C;AAC1C,aAAA,OAAA,CAAA,OAAA,CAAA,KAAA;AACD;AACF;;;0CA0BmG;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAlFG,cAAkF,GAAA,IAAA,CAAlFA,cAAkF;AAAA,UAAlEC,OAAkE,GAAA,IAAA,CAAlEA,OAAkE;AAAA,UAAzDC,MAAyD,GAAA,IAAA,CAAzDA,MAAyD;AAAA,UAAA,WAAA,GAC1D,KAD0D,KAAA;AAAA,UAC1FhB,MAD0F,GAAA,WAAA,CAAA,MAAA;AAAA,UAClFR,MADkF,GAAA,WAAA,CAAA,MAAA;AAAA,UAC1EC,IAD0E,GAAA,WAAA,CAAA,IAAA;AAAA,UACpEC,KADoE,GAAA,WAAA,CAAA,KAAA;AAGlG,UAAMuB,cAAc,GAAG,GAAG,CAAH,MAAA,CAAA,MAAA,EAAmB;AACxCC,QAAAA,YAAY,EAAE,SAAA,YAAA,GAAA;AAAA,iBAAO;AACnBC,YAAAA,EAAE,EADiB,MAAA;AAEnBC,YAAAA,SAAS,EAAE7B,kCAAkC,CAF1B,MAAA;AAGnByB,YAAAA,MAAM,EAAEA,MAAM,CAACxB;AAHI,WAAP;AAAA;AAD0B,OAAnB,CAAvB;AAOA,UAAM6B,SAAS,GAAG,MAAA,CAAA,IAAA,CAAA,GAAA,IAAA,GAEd;AACEC,QAAAA,IAAI,EADN,IAAA;AAEEvB,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,aAAA,EAAA,KAAA,EAAA;AAAA,iBACR,GAAG,CAAH,MAAA,CAAA,IAAA,EAAiB;AACfmB,YAAAA,YAAY,EAAE,SAAA,YAAA,GAAA;AAAA,qBAAO;AACnB,8BAAA,UAAA,MAAA,CAAA,MAAA,EADmB,kBACnB,CADmB;AAC+B;AAClDE,gBAAAA,SAAS,EAAE7B,kCAAkC,CAF1B,IAAA;AAGnByB,gBAAAA,MAAM,EAAEA,MAAM,CAACvB;AAHI,eAAP;AADC,aAAA;AAMf8B,YAAAA,aAAa,EAAE,MAAI,CAAJ,mBAAA,CAAA,KAAA;AANA,WAAjB,CADQ;AAAA;AAFZ,OAFJ;AAcA,UAAMC,UAAU,GAAG,MAAA,CAAA,KAAA,CAAA,GAAA,KAAA,GAEf;AACEzB,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,aAAA,EAAA,KAAA,EAAA;AAAA,iBACR,KAAK,CAAL,MAAA,CAAA,KAAA,EAAoB;AAClBmB,YAAAA,YAAY,EAAE,SAAA,YAAA,GAAA;AAAA,qBAAO;AACnBO,gBAAAA,MAAM,EADa,IAAA;AAEnBL,gBAAAA,SAAS,EAAE7B,kCAAkC,CAF1B,KAAA;AAGnByB,gBAAAA,MAAM,EAAEA,MAAM,CAACtB;AAHI,eAAP;AADI,aAAA;AAMlB6B,YAAAA,aAAa,EAAEG;AANG,WAApB,CADQ;AAAA;AADZ,OAFJ;AAcA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAK,QAAA,QAAQ,EAAE,KAAKC;AAApB,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,QAAA,SAAS,EAAEZ,OAAO,CADpB,IAAA;AAEE,QAAA,QAAQ,EAAEf,MAAM,GAAA,CAAA,GAAO,CAFzB,CAAA;AAGE,QAAA,MAAM,EAAEgB,MAAM,CAHhB,IAAA;AAIE,QAAA,QAAQ,EAJV,IAAA;AAKE,QAAA,OAAO,EAAE,KALX,WAAA;AAME,QAAA,SAAS,EAAE,KANb,aAAA;AAOE,QAAA,OAAO,EAPT,cAAA;AAQE,QAAA,IAAI,EARN,SAAA;AASE,QAAA,KAAK,EAAEQ;AATT,OAAA,EAFJ,cAEI,CAAA,CADF,CADF;AAgBD;;;;EA9GgC5B,W;;gBAA7BD,oB,iBAGiB,sB;;gBAHjBA,oB;;gBAAAA,oB,0BAK0BL,6B;;gBAL1BK,oB,iCAQC,eAAe,CAAf,YAAA,CAA6B;AAC9BG,EAAAA,aAAa,EADiB,KAAA;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAA7B,C;AAIHC,EAAAA,MAAM,EAAEC,SAAS,CAACC,I;AAClBV,EAAAA,MAAM,EAAEW,eAAe,CAACC,a;AACxBX,EAAAA,IAAI,EAAEU,eAAe,CAACE,yB;AACtBX,EAAAA,KAAK,EAAES,eAAe,CAACG,uB;AACvBC,EAAAA,OAAO,EAAEN,SAAS,CAACO,I;AACnBC,EAAAA,SAAS,EAAER,SAAS,CAACO,I;AACrBE,EAAAA,QAAQ,EAAET,SAAS,CAACO;;;gBAlBlBb,oB,kBAqBkB;AACpB;AACAF,EAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA;AAFc,C;;AA4FxBE,oBAAoB,CAApBA,MAAAA,GAA8BiC,sBAAsB,CAAC;AACnDC,EAAAA,SAAS,EAD0C,oBAAA;AAEnDC,EAAAA,UAAU,EAAE;AAFuC,CAAD,CAApDnC;AAKA;;;;AAGA,eAAeoC,iBAAiB,CAAhC,oBAAgC,CAAhC","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\n\nimport keyboardKey from 'keyboard-key';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  WithAsProp,\n  ComponentKeyboardEventHandler,\n  withSafeTypeForAs,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport {\n  createShorthandFactory,\n  UIComponent,\n  RenderResultConfig,\n  commonPropTypes,\n  ShorthandFactory,\n} from '../../utils';\nimport Image, { ImageProps } from '../Image/Image';\nimport Label from '../Label/Label';\nimport Box, { BoxProps } from '../Box/Box';\n\nexport interface DropdownSelectedItemSlotClassNames {\n  header: string;\n  icon: string;\n  image: string;\n}\n\nexport interface DropdownSelectedItemProps extends UIComponentProps<DropdownSelectedItemProps> {\n  /** A selected item can be active. */\n  active?: boolean;\n\n  /** Header of the selected item. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Icon of the selected item. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** Image of the selected item. */\n  image?: ShorthandValue<ImageProps>;\n\n  /**\n   * Called on selected item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called on selected item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called when item is removed from the selection list.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onRemove?: ComponentEventHandler<DropdownSelectedItemProps>;\n}\n\nexport const dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';\nexport const dropdownSelectedItemSlotClassNames: DropdownSelectedItemSlotClassNames = {\n  header: `${dropdownSelectedItemClassName}__header`,\n  icon: `${dropdownSelectedItemClassName}__icon`,\n  image: `${dropdownSelectedItemClassName}__image`,\n};\n\nclass DropdownSelectedItem extends UIComponent<WithAsProp<DropdownSelectedItemProps>, any> {\n  itemRef = React.createRef<HTMLElement>();\n\n  static displayName = 'DropdownSelectedItem';\n  static create: ShorthandFactory<DropdownSelectedItemProps>;\n  static deprecated_className = dropdownSelectedItemClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      accessibility: false,\n      children: false,\n    }),\n    active: PropTypes.bool,\n    header: customPropTypes.itemShorthand,\n    icon: customPropTypes.shorthandAllowingChildren,\n    image: customPropTypes.itemShorthandWithoutJSX,\n    onClick: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onRemove: PropTypes.func,\n  };\n\n  static defaultProps = {\n    // TODO: fix me\n    icon: <CloseIcon />,\n  };\n\n  componentDidUpdate(prevProps: DropdownSelectedItemProps) {\n    if (!prevProps.active && this.props.active) {\n      this.itemRef.current.focus();\n    }\n  }\n\n  handleClick = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  handleKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(this.props, 'onKeyDown', e, this.props);\n  };\n\n  handleIconOverrides = props => (predefinedProps: BoxProps) => ({\n    ...props,\n    onClick: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      _.invoke(this.props, 'onRemove', e, this.props);\n      _.invoke(predefinedProps, 'onClick', e, iconProps);\n    },\n    onKeyDown: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      if (keyboardKey.getCode(e) === keyboardKey.Enter) {\n        _.invoke(this.props, 'onRemove', e, this.props);\n      }\n      _.invoke(predefinedProps, 'onKeyDown', e, iconProps);\n    },\n  });\n\n  renderComponent({ unhandledProps, classes, styles }: RenderResultConfig<DropdownSelectedItemProps>) {\n    const { active, header, icon, image } = this.props;\n\n    const contentElement = Box.create(header, {\n      defaultProps: () => ({\n        as: 'span',\n        className: dropdownSelectedItemSlotClassNames.header,\n        styles: styles.header,\n      }),\n    });\n    const iconProps = _.isNil(icon)\n      ? icon\n      : {\n          name: null,\n          children: (ComponentType, props) =>\n            Box.create(icon, {\n              defaultProps: () => ({\n                'aria-label': `Remove ${header} from selection.`, // TODO: Extract this in a behaviour.\n                className: dropdownSelectedItemSlotClassNames.icon,\n                styles: styles.icon,\n              }),\n              overrideProps: this.handleIconOverrides(props),\n            }),\n        };\n    const imageProps = _.isNil(image)\n      ? image\n      : {\n          children: (ComponentType, props) =>\n            Image.create(image, {\n              defaultProps: () => ({\n                avatar: true,\n                className: dropdownSelectedItemSlotClassNames.image,\n                styles: styles.image,\n              }),\n              overrideProps: props,\n            }),\n        };\n\n    return (\n      <Ref innerRef={this.itemRef}>\n        <Label\n          className={classes.root}\n          tabIndex={active ? 0 : -1}\n          styles={styles.root}\n          circular\n          onClick={this.handleClick}\n          onKeyDown={this.handleKeyDown}\n          content={contentElement}\n          icon={iconProps}\n          image={imageProps}\n          {...unhandledProps}\n        />\n      </Ref>\n    );\n  }\n}\n\nDropdownSelectedItem.create = createShorthandFactory({\n  Component: DropdownSelectedItem,\n  mappedProp: 'header',\n});\n\n/**\n * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.\n */\nexport default withSafeTypeForAs<typeof DropdownSelectedItem, DropdownSelectedItemProps>(DropdownSelectedItem);\n"]},"metadata":{},"sourceType":"module"}