{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport { tabListBehavior } from '@fluentui/accessibility';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport CarouselNavigationItem from './CarouselNavigationItem'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nexport var carouselNavigationClassName = 'ui-carousel__navigation';\nexport var CarouselNavigation = function CarouselNavigation(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(CarouselNavigation.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      variables = props.variables,\n      children = props.children,\n      className = props.className,\n      design = props.design,\n      activeIndex = props.activeIndex,\n      iconOnly = props.iconOnly,\n      items = props.items,\n      primary = props.primary,\n      secondary = props.secondary,\n      vertical = props.vertical,\n      thumbnails = props.thumbnails,\n      styles = props.styles;\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n  var getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        activeIndex: activeIndex,\n        iconOnly: iconOnly,\n        primary: primary,\n        vertical: vertical,\n        thumbnails: thumbnails\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes;\n\n  var handleItemOverrides = function handleItemOverrides(variables) {\n    return function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(props, 'onItemClick', e, itemProps);\n\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n        },\n        variables: mergeComponentVariables(variables, predefinedProps.variables)\n      };\n    };\n  };\n\n  var renderItems = function renderItems() {\n    return _map(items, function (item, index) {\n      return CarouselNavigationItem.create(item, {\n        defaultProps: function defaultProps() {\n          return getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly: iconOnly,\n            index: index,\n            primary: primary,\n            secondary: secondary,\n            vertical: vertical,\n            thumbnails: thumbnails\n          });\n        },\n        overrideProps: handleItemOverrides(variables)\n      });\n    });\n  };\n\n  var element = React.createElement(ElementType, _extends({}, getA11yProps('root', Object.assign({\n    className: classes.root\n  }, unhandledProps)), rtlTextContainer.getAttributes({\n    forElements: [children]\n  })), childrenExist(children) ? children : renderItems());\n  setEnd();\n  return element;\n};\nCarouselNavigation.displayName = 'CarouselNavigation';\nCarouselNavigation.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool\n});\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul'\n};\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes);\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items'\n});\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\n\nexport default withSafeTypeForAs(CarouselNavigation);","map":{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["carouselNavigationClassName","CarouselNavigation","context","React","setStart","setEnd","useTelemetry","accessibility","variables","children","className","design","activeIndex","iconOnly","items","primary","secondary","vertical","thumbnails","styles","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","handleItemOverrides","onClick","mergeComponentVariables","predefinedProps","renderItems","defaultProps","active","index","overrideProps","element","root","forElements","childrenExist","content","PropTypes","customPropTypes","onItemClick","bool","as","Object","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { tabListBehavior, Accessibility } from '@fluentui/accessibility';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  withSafeTypeForAs,\n  WithAsProp,\n  ShorthandCollection,\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport CarouselNavigationItem, { CarouselNavigationItemProps } from './CarouselNavigationItem';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** A navigation may have thumbnails. */\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport type CarouselNavigationStylesProps = Required<\n  Pick<CarouselNavigationProps, 'activeIndex' | 'iconOnly' | 'primary' | 'vertical' | 'thumbnails'>\n>;\n\nexport const carouselNavigationClassName = 'ui-carousel__navigation';\n\nexport const CarouselNavigation: React.FC<WithAsProp<CarouselNavigationProps>> &\n  FluentComponentStaticProps<CarouselNavigationProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CarouselNavigation.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    variables,\n    children,\n    className,\n    design,\n    activeIndex,\n    iconOnly,\n    items,\n    primary,\n    secondary,\n    vertical,\n    thumbnails,\n    styles,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CarouselNavigationStylesProps>(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: () => ({\n      activeIndex,\n      iconOnly,\n      primary,\n      vertical,\n      thumbnails,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  const renderItems = () => {\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly,\n            index,\n            primary,\n            secondary,\n            vertical,\n            thumbnails,\n          }),\n        overrideProps: handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderItems()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nCarouselNavigation.displayName = 'CarouselNavigation';\n\nCarouselNavigation.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n};\n\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul',\n};\n\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes) as any;\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport default withSafeTypeForAs<typeof CarouselNavigation, CarouselNavigationProps, 'ul'>(CarouselNavigation);\n"]},"metadata":{},"sourceType":"module"}