{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _filter from \"lodash/filter\";\nimport _invoke from \"lodash/invoke\";\nimport { menuBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { mergeComponentVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { AutoControlledComponent, childrenExist, createShorthandFactory, commonPropTypes, getKindProp, rtlTextContainer } from '../../utils';\nimport MenuItem from './MenuItem';\nimport { withSafeTypeForAs } from '../../types';\nimport MenuDivider from './MenuDivider';\nexport var menuClassName = 'ui-menu';\n\nvar Menu = /*#__PURE__*/function (_AutoControlledCompon) {\n  _inherits(Menu, _AutoControlledCompon);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setActiveIndex\", function (e, activeIndex) {\n      _invoke(_this.props, 'onActiveIndexChange', e, Object.assign({}, _this.props, {\n        activeIndex: activeIndex\n      }));\n\n      _this.setState({\n        activeIndex: activeIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (variables) {\n      return function (predefinedProps) {\n        return {\n          onClick: function onClick(e, itemProps) {\n            var index = itemProps.index;\n\n            _this.setActiveIndex(e, index);\n\n            _invoke(_this.props, 'onItemClick', e, itemProps);\n\n            _invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n          onActiveChanged: function onActiveChanged(e, props) {\n            var index = props.index,\n                active = props.active;\n\n            if (active) {\n              _this.setActiveIndex(e, index);\n            } else if (_this.state.activeIndex === index) {\n              _this.setActiveIndex(e, null);\n            }\n\n            _invoke(predefinedProps, 'onActiveChanged', e, props);\n          },\n          variables: mergeComponentVariables(variables, predefinedProps.variables)\n        };\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDividerOverrides\", function (variables) {\n      return function (predefinedProps) {\n        return {\n          variables: mergeComponentVariables(variables, predefinedProps.variables)\n        };\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItems\", function (styles, variables, accessibility) {\n      var _this$props = _this.props,\n          iconOnly = _this$props.iconOnly,\n          items = _this$props.items,\n          pills = _this$props.pills,\n          pointing = _this$props.pointing,\n          primary = _this$props.primary,\n          secondary = _this$props.secondary,\n          underlined = _this$props.underlined,\n          vertical = _this$props.vertical,\n          submenu = _this$props.submenu,\n          indicator = _this$props.indicator;\n      var activeIndex = _this.state.activeIndex;\n\n      var itemsCount = _filter(items, function (item) {\n        return getKindProp(item, 'item') !== 'divider';\n      }).length;\n\n      var itemPosition = 0;\n\n      var overrideItemProps = _this.handleItemOverrides(variables);\n\n      var overrideDividerProps = _this.handleDividerOverrides(variables);\n\n      return _map(items, function (item, index) {\n        var active = (typeof activeIndex === 'string' ? parseInt(activeIndex, 10) : activeIndex) === index;\n        var kind = getKindProp(item, 'item');\n\n        if (kind === 'divider') {\n          return MenuDivider.create(item, {\n            defaultProps: function defaultProps() {\n              return {\n                primary: primary,\n                secondary: secondary,\n                vertical: vertical,\n                styles: styles.divider,\n                inSubmenu: submenu,\n                accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.divider : undefined\n              };\n            },\n            overrideProps: overrideDividerProps\n          });\n        }\n\n        itemPosition++;\n        return MenuItem.create(item, {\n          defaultProps: function defaultProps() {\n            return {\n              iconOnly: iconOnly,\n              pills: pills,\n              pointing: pointing,\n              primary: primary,\n              secondary: secondary,\n              underlined: underlined,\n              vertical: vertical,\n              index: index,\n              itemPosition: itemPosition,\n              itemsCount: itemsCount,\n              active: active,\n              inSubmenu: submenu,\n              indicator: indicator,\n              accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined\n            };\n          },\n          overrideProps: overrideItemProps\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          accessibility = _ref.accessibility,\n          styles = _ref.styles,\n          variables = _ref.variables,\n          unhandledProps = _ref.unhandledProps;\n      var children = this.props.children;\n      return React.createElement(ElementType, _extends({}, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children]\n      }), unhandledProps, {\n        className: classes.root\n      }), childrenExist(children) ? children : this.renderItems(styles, variables, accessibility));\n    }\n  }]);\n\n  return Menu;\n}(AutoControlledComponent);\n\n_defineProperty(Menu, \"displayName\", 'Menu');\n\n_defineProperty(Menu, \"deprecated_className\", menuClassName);\n\n_defineProperty(Menu, \"create\", void 0);\n\n_defineProperty(Menu, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  fluid: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n  onItemClick: PropTypes.func,\n  onActiveIndexChange: PropTypes.func,\n  pills: PropTypes.bool,\n  pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['start', 'end'])]),\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  underlined: PropTypes.bool,\n  vertical: PropTypes.bool,\n  submenu: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren\n}));\n\n_defineProperty(Menu, \"defaultProps\", {\n  as: 'ul',\n  accessibility: menuBehavior\n});\n\n_defineProperty(Menu, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Menu, \"Item\", MenuItem);\n\n_defineProperty(Menu, \"Divider\", MenuDivider);\n\nMenu.create = createShorthandFactory({\n  Component: Menu,\n  mappedArrayProp: 'items'\n});\n/**\n * A Menu is a component that offers a grouped list of choices to the user.\n *\n * @accessibility\n * Implements ARIA [Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu), [Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) or [Tabs](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) design pattern, depending on the behavior used.\n * @accessibilityIssues\n * [JAWS - navigation instruction for menubar](https://github.com/FreedomScientific/VFO-standards-support/issues/203)\n * [JAWS - navigation instruction for menu with aria-orientation=\"horizontal\"](https://github.com/FreedomScientific/VFO-standards-support/issues/204)\n * [JAWS [VC] doesn't narrate menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/324)\n * [JAWS [app mode] focus moves to second menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/325)\n * [Enter into a tablist JAWS narrates: To switch pages, press Control+PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/337)\n * 51114083 VoiceOver+Web narrate wrong position in menu / total count of menu items, when pseudo element ::after or ::before is used\n */\n\nexport default withSafeTypeForAs(Menu);","map":{"version":3,"sources":["components/Menu/Menu.tsx"],"names":["menuClassName","Menu","AutoControlledComponent","content","activeIndex","PropTypes","defaultActiveIndex","fluid","bool","iconOnly","items","customPropTypes","onItemClick","func","onActiveIndexChange","pills","pointing","primary","secondary","underlined","vertical","submenu","indicator","shorthandAllowingChildren","as","accessibility","menuBehavior","MenuItem","MenuDivider","onClick","index","itemProps","onActiveChanged","active","props","variables","mergeComponentVariables","predefinedProps","itemsCount","getKindProp","itemPosition","overrideItemProps","overrideDividerProps","parseInt","kind","defaultProps","styles","inSubmenu","undefined","overrideProps","ElementType","classes","unhandledProps","children","forElements","root","childrenExist","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { Accessibility, menuBehavior } from '@fluentui/accessibility';\nimport { ReactAccessibilityBehavior } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { ComponentVariablesObject, ComponentSlotStylesPrepared, mergeComponentVariables } from '@fluentui/styles';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  AutoControlledComponent,\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  getKindProp,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\n\nimport MenuItem, { MenuItemProps } from './MenuItem';\nimport { WithAsProp, ShorthandCollection, ShorthandValue, withSafeTypeForAs, ComponentEventHandler } from '../../types';\nimport MenuDivider from './MenuDivider';\nimport { BoxProps } from '../Box/Box';\n\nexport type MenuShorthandKinds = 'divider' | 'item';\n\nexport interface MenuProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number | string;\n\n  /** A vertical menu may take the size of its container. */\n  fluid?: boolean;\n\n  /** A menu may have just icons. */\n  iconOnly?: boolean;\n\n  /** Shorthand array of props for Menu. */\n  items?: ShorthandCollection<MenuItemProps, MenuShorthandKinds>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Called when the active index of the Menu changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<MenuProps>;\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu can have primary type. */\n  primary?: boolean;\n\n  /** The menu can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Indicates whether the menu is submenu. */\n  submenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n}\n\nexport interface MenuState {\n  activeIndex?: number | string;\n}\n\nexport const menuClassName = 'ui-menu';\n\nclass Menu extends AutoControlledComponent<WithAsProp<MenuProps>, MenuState> {\n  static displayName = 'Menu';\n\n  static deprecated_className = menuClassName;\n\n  static create: ShorthandFactory<MenuProps>;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    fluid: PropTypes.bool,\n    iconOnly: PropTypes.bool,\n    items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n    onItemClick: PropTypes.func,\n    onActiveIndexChange: PropTypes.func,\n    pills: PropTypes.bool,\n    pointing: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['start', 'end'])]),\n    primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n    secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n    underlined: PropTypes.bool,\n    vertical: PropTypes.bool,\n    submenu: PropTypes.bool,\n    indicator: customPropTypes.shorthandAllowingChildren,\n  };\n\n  static defaultProps = {\n    as: 'ul',\n    accessibility: menuBehavior as Accessibility,\n  };\n\n  static autoControlledProps = ['activeIndex'];\n\n  static Item = MenuItem;\n  static Divider = MenuDivider;\n\n  setActiveIndex = (e: React.SyntheticEvent, activeIndex: number) => {\n    _.invoke(this.props, 'onActiveIndexChange', e, { ...this.props, activeIndex });\n    this.setState({ activeIndex });\n  };\n\n  handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      const { index } = itemProps;\n\n      this.setActiveIndex(e, index);\n\n      _.invoke(this.props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    onActiveChanged: (e, props) => {\n      const { index, active } = props;\n      if (active) {\n        this.setActiveIndex(e, index);\n      } else if (this.state.activeIndex === index) {\n        this.setActiveIndex(e, null);\n      }\n      _.invoke(predefinedProps, 'onActiveChanged', e, props);\n    },\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  handleDividerOverrides = variables => predefinedProps => ({\n    variables: mergeComponentVariables(variables, predefinedProps.variables),\n  });\n\n  renderItems = (\n    styles: ComponentSlotStylesPrepared,\n    variables: ComponentVariablesObject,\n    accessibility: ReactAccessibilityBehavior,\n  ) => {\n    const {\n      iconOnly,\n      items,\n      pills,\n      pointing,\n      primary,\n      secondary,\n      underlined,\n      vertical,\n      submenu,\n      indicator,\n    } = this.props;\n    const { activeIndex } = this.state;\n    const itemsCount = _.filter(items, item => getKindProp(item, 'item') !== 'divider').length;\n    let itemPosition = 0;\n\n    const overrideItemProps = this.handleItemOverrides(variables);\n    const overrideDividerProps = this.handleDividerOverrides(variables);\n\n    return _.map(items, (item, index) => {\n      const active = (typeof activeIndex === 'string' ? parseInt(activeIndex, 10) : activeIndex) === index;\n      const kind = getKindProp(item, 'item');\n\n      if (kind === 'divider') {\n        return MenuDivider.create(item, {\n          defaultProps: () => ({\n            primary,\n            secondary,\n            vertical,\n            styles: styles.divider,\n            inSubmenu: submenu,\n            accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.divider : undefined,\n          }),\n          overrideProps: overrideDividerProps,\n        });\n      }\n\n      itemPosition++;\n\n      return MenuItem.create(item, {\n        defaultProps: () => ({\n          iconOnly,\n          pills,\n          pointing,\n          primary,\n          secondary,\n          underlined,\n          vertical,\n          index,\n          itemPosition,\n          itemsCount,\n          active,\n          inSubmenu: submenu,\n          indicator,\n          accessibility: accessibility.childBehaviors ? accessibility.childBehaviors.item : undefined,\n        }),\n        overrideProps: overrideItemProps,\n      });\n    });\n  };\n\n  renderComponent({ ElementType, classes, accessibility, styles, variables, unhandledProps }) {\n    const { children } = this.props;\n    return (\n      <ElementType\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : this.renderItems(styles, variables, accessibility)}\n      </ElementType>\n    );\n  }\n}\n\nMenu.create = createShorthandFactory({ Component: Menu, mappedArrayProp: 'items' });\n\n/**\n * A Menu is a component that offers a grouped list of choices to the user.\n *\n * @accessibility\n * Implements ARIA [Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu), [Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) or [Tabs](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) design pattern, depending on the behavior used.\n * @accessibilityIssues\n * [JAWS - navigation instruction for menubar](https://github.com/FreedomScientific/VFO-standards-support/issues/203)\n * [JAWS - navigation instruction for menu with aria-orientation=\"horizontal\"](https://github.com/FreedomScientific/VFO-standards-support/issues/204)\n * [JAWS [VC] doesn't narrate menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/324)\n * [JAWS [app mode] focus moves to second menu item, when it is open from menu button](https://github.com/FreedomScientific/VFO-standards-support/issues/325)\n * [Enter into a tablist JAWS narrates: To switch pages, press Control+PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/337)\n * 51114083 VoiceOver+Web narrate wrong position in menu / total count of menu items, when pseudo element ::after or ::before is used\n */\nexport default withSafeTypeForAs<typeof Menu, MenuProps, 'ul'>(Menu);\n"]},"metadata":{},"sourceType":"module"}