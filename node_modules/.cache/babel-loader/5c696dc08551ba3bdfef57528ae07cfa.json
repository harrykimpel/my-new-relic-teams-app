{"ast":null,"code":"import _invoke from \"lodash/invoke\";\nimport _debounce from \"lodash/debounce\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { carouselBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport Animation from '../Animation/Animation'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport { createShorthandFactory, commonPropTypes, childrenExist, isFromKeyboard as isEventFromKeyboard } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport CarouselItem from './CarouselItem';\nimport Text from '../Text/Text';\nimport CarouselNavigation from './CarouselNavigation';\nimport CarouselNavigationItem from './CarouselNavigationItem';\nimport CarouselPaddle from './CarouselPaddle';\nimport { getElementType, useAccessibility, useStyles, useTelemetry, useUnhandledProps, useStateManager } from '@fluentui/react-bindings';\nimport { createCarouselManager } from '@fluentui/state';\nexport var carouselClassName = 'ui-carousel';\nexport var carouselSlotClassNames = {\n  itemsContainer: \"\".concat(carouselClassName, \"__itemscontainer\"),\n  paddleNext: \"\".concat(carouselClassName, \"__paddlenext\"),\n  paddlePrevious: \"\".concat(carouselClassName, \"__paddleprevious\"),\n  pagination: \"\".concat(carouselClassName, \"__pagination\"),\n  navigation: \"\".concat(carouselClassName, \"__navigation\")\n};\nexport var Carousel = function Carousel(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(Carousel.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var accessibility = props.accessibility,\n      items = props.items,\n      circular = props.circular,\n      getItemPositionText = props.getItemPositionText,\n      paddlePrevious = props.paddlePrevious,\n      paddleNext = props.paddleNext,\n      navigation = props.navigation,\n      thumbnails = props.thumbnails,\n      children = props.children,\n      ariaRoleDescription = props.ariaRoleDescription,\n      ariaLabel = props.ariaLabel,\n      className = props.className,\n      design = props.design,\n      styles = props.styles,\n      variables = props.variables;\n  var ElementType = getElementType(props);\n\n  var _useStateManager = useStateManager(createCarouselManager, {\n    mapPropsToInitialState: function mapPropsToInitialState() {\n      return {\n        activeIndex: props.defaultActiveIndex\n      };\n    },\n    mapPropsToState: function mapPropsToState() {\n      return {\n        activeIndex: props.activeIndex\n      };\n    }\n  }),\n      state = _useStateManager.state,\n      actions = _useStateManager.actions;\n\n  var prevActiveIndex = state.prevActiveIndex,\n      ariaLiveOn = state.ariaLiveOn,\n      shouldFocusContainer = state.shouldFocusContainer,\n      isFromKeyboard = state.isFromKeyboard,\n      activeIndex = state.activeIndex;\n  var itemRefs = React.useMemo(function () {\n    return Array.from({\n      length: items === null || items === void 0 ? void 0 : items.length\n    }, function () {\n      return React.createRef();\n    });\n  }, [items === null || items === void 0 ? void 0 : items.length]);\n  var unhandledProps = useUnhandledProps(Carousel.handledProps, props);\n  var getA11yProps = useAccessibility(accessibility, {\n    debugName: Carousel.displayName,\n    actionHandlers: {\n      showNextSlideByKeyboardNavigation: function showNextSlideByKeyboardNavigation(e) {\n        e.preventDefault();\n        showNextSlide(e, true);\n      },\n      showPreviousSlideByKeyboardNavigation: function showPreviousSlideByKeyboardNavigation(e) {\n        e.preventDefault();\n        showPreviousSlide(e, true);\n      },\n      showNextSlideByPaddlePress: function showNextSlideByPaddlePress(e) {\n        e.preventDefault();\n        showNextSlide(e, false);\n        handleNextPaddleFocus();\n      },\n      showPreviousSlideByPaddlePress: function showPreviousSlideByPaddlePress(e) {\n        e.preventDefault();\n        showPreviousSlide(e, false);\n        handlePreviousPaddleFocus();\n      }\n    },\n    mapPropsToBehavior: function mapPropsToBehavior() {\n      return {\n        navigation: navigation,\n        ariaLiveOn: ariaLiveOn,\n        ariaRoleDescription: ariaRoleDescription,\n        ariaLabel: ariaLabel\n      };\n    }\n  });\n\n  var _useStyles = useStyles(Carousel.displayName, {\n    className: carouselClassName,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        shouldFocusContainer: shouldFocusContainer,\n        isFromKeyboard: isFromKeyboard\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes;\n\n  var paddleNextRef = React.createRef();\n  var paddlePreviousRef = React.createRef();\n\n  var focusItemAtIndex = _debounce(function (index) {\n    var _itemRefs$index$curre;\n\n    (_itemRefs$index$curre = itemRefs[index].current) === null || _itemRefs$index$curre === void 0 ? void 0 : _itemRefs$index$curre.focus();\n  }, 400);\n\n  React.useEffect(function () {\n    return function () {\n      focusItemAtIndex.cancel();\n    };\n  }, [items]);\n\n  var setActiveIndex = function setActiveIndex(e, index, focusItem) {\n    var lastItemIndex = items.length - 1;\n    var nextActiveIndex = index;\n    var lastActiveIndex = state.activeIndex;\n\n    if (index < 0) {\n      if (!circular) {\n        return;\n      }\n\n      nextActiveIndex = lastItemIndex;\n    }\n\n    if (index > lastItemIndex) {\n      if (!circular) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    actions.setIndexes(nextActiveIndex, lastActiveIndex);\n\n    _invoke(props, 'onActiveIndexChange', e, props);\n\n    if (focusItem) {\n      focusItemAtIndex(nextActiveIndex);\n    }\n  };\n\n  var overrideItemProps = function overrideItemProps(predefinedProps) {\n    return {\n      onFocus: function onFocus(e, itemProps) {\n        actions.setShouldFocusContainer(e.currentTarget === e.target);\n        actions.setIsFromKeyboard(isEventFromKeyboard());\n\n        _invoke(predefinedProps, 'onFocus', e, itemProps);\n      },\n      onBlur: function onBlur(e, itemProps) {\n        actions.setShouldFocusContainer(e.currentTarget.contains(e.relatedTarget));\n        actions.setIsFromKeyboard(false);\n\n        _invoke(predefinedProps, 'onBlur', e, itemProps);\n      }\n    };\n  };\n\n  var renderContent = function renderContent() {\n    return React.createElement(\"div\", getA11yProps('itemsContainerWrapper', {\n      className: classes.itemsContainerWrapper\n    }), React.createElement(\"div\", getA11yProps('itemsContainer', {\n      className: cx(carouselSlotClassNames.itemsContainer, classes.itemsContainer)\n    }), items && items.map(function (item, index) {\n      var itemRef = itemRefs[index];\n      var active = activeIndex === index;\n      var slideToNext = prevActiveIndex < activeIndex;\n      var initialMounting = prevActiveIndex === -1;\n\n      if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n        slideToNext = true;\n      } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n        slideToNext = false;\n      }\n\n      return React.createElement(Animation, {\n        key: item['key'] || index,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        visible: active,\n        name: initialMounting || !active ? '' : slideToNext ? 'carousel-slide-to-next-enter' : 'carousel-slide-to-previous-enter'\n      }, React.createElement(Ref, {\n        innerRef: itemRef\n      }, CarouselItem.create(item, {\n        defaultProps: function defaultProps() {\n          return Object.assign({\n            active: active,\n            navigation: !!navigation\n          }, getItemPositionText && {\n            itemPositionText: getItemPositionText(index, items.length)\n          });\n        },\n        overrideProps: overrideItemProps\n      })));\n    })));\n  };\n\n  var handleNextPaddleFocus = function handleNextPaddleFocus() {\n    // if 'next' paddle will disappear, will focus 'previous' one.\n    if (!navigation && activeIndex >= props.items.length - 2 && !circular) {\n      paddlePreviousRef.current.focus();\n    }\n  };\n\n  var handlePreviousPaddleFocus = function handlePreviousPaddleFocus() {\n    // if 'previous' paddle will disappear, will focus 'next' one.\n    if (!navigation && activeIndex <= 1 && !circular) {\n      paddleNextRef.current.focus();\n    }\n  };\n\n  var showPreviousSlide = function showPreviousSlide(e, focusItem) {\n    setActiveIndex(e, +activeIndex - 1, focusItem);\n  };\n\n  var showNextSlide = function showNextSlide(e, focusItem) {\n    setActiveIndex(e, +activeIndex + 1, focusItem);\n  };\n\n  var handlePaddleOverrides = function handlePaddleOverrides(predefinedProps, paddleName) {\n    return {\n      onClick: function onClick(e, paddleProps) {\n        _invoke(predefinedProps, 'onClick', e, paddleProps);\n\n        if (paddleName === 'paddleNext') {\n          showNextSlide(e, false);\n          handleNextPaddleFocus();\n        } else if (paddleName === 'paddlePrevious') {\n          showPreviousSlide(e, false);\n          handlePreviousPaddleFocus();\n        }\n      },\n      onBlur: function onBlur(e, paddleProps) {\n        if (e.relatedTarget !== paddleNextRef.current) {\n          actions.setAriaLiveOn(false);\n        }\n      },\n      onFocus: function onFocus(e, paddleProps) {\n        _invoke(predefinedProps, 'onFocus', e, paddleProps);\n\n        actions.setAriaLiveOn(true);\n      }\n    };\n  };\n\n  var renderPaddles = function renderPaddles() {\n    return React.createElement(React.Fragment, null, React.createElement(Ref, {\n      innerRef: paddlePreviousRef\n    }, CarouselPaddle.create(paddlePrevious, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('paddlePrevious', {\n          className: carouselSlotClassNames.paddlePrevious,\n          previous: true,\n          hidden: items !== undefined && !circular && activeIndex === 0\n        });\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return handlePaddleOverrides(predefinedProps, 'paddlePrevious');\n      }\n    })), React.createElement(Ref, {\n      innerRef: paddleNextRef\n    }, CarouselPaddle.create(paddleNext, {\n      defaultProps: function defaultProps() {\n        return getA11yProps('paddleNext', {\n          className: carouselSlotClassNames.paddleNext,\n          next: true,\n          hidden: items !== undefined && !circular && activeIndex === items.length - 1\n        });\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return handlePaddleOverrides(predefinedProps, 'paddleNext');\n      }\n    })));\n  };\n\n  var renderNavigation = function renderNavigation() {\n    if (!items || !items.length) {\n      return null;\n    }\n\n    return navigation ? CarouselNavigation.create(navigation, {\n      defaultProps: function defaultProps() {\n        return {\n          className: carouselSlotClassNames.navigation,\n          iconOnly: true,\n          activeIndex: activeIndex,\n          thumbnails: thumbnails\n        };\n      },\n      overrideProps: function overrideProps(predefinedProps) {\n        return {\n          onItemClick: function onItemClick(e, itemProps) {\n            var index = itemProps.index;\n            setActiveIndex(e, index, true);\n\n            _invoke(predefinedProps, 'onClick', e, itemProps);\n          }\n        };\n      }\n    }) : getItemPositionText ? React.createElement(Text, {\n      \"aria-hidden\": \"true\",\n      className: carouselSlotClassNames.pagination,\n      content: getItemPositionText(+activeIndex, items.length)\n    }) : null;\n  };\n\n  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({\n    className: classes.root\n  }, unhandledProps)), childrenExist(children) ? children : React.createElement(React.Fragment, null, renderContent(), renderPaddles(), renderNavigation()));\n  setEnd();\n  return element;\n};\nCarousel.displayName = 'Carousel';\nCarousel.propTypes = Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  activeIndex: PropTypes.number,\n  ariaRoleDescription: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  circular: PropTypes.bool,\n  defaultActiveIndex: PropTypes.number,\n  getItemPositionText: PropTypes.func,\n  items: customPropTypes.collectionShorthand,\n  navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  navigationPosition: PropTypes.oneOf(['below', 'above', 'start', 'end']),\n  onActiveIndexChange: PropTypes.func,\n  paddleNext: customPropTypes.itemShorthand,\n  paddlesPosition: PropTypes.oneOf(['inside', 'outside', 'inline']),\n  paddlePrevious: customPropTypes.itemShorthand,\n  thumbnails: PropTypes.bool\n});\nCarousel.defaultProps = {\n  accessibility: carouselBehavior,\n  paddlePrevious: {},\n  paddleNext: {}\n};\nCarousel.Item = CarouselItem;\nCarousel.Navigation = CarouselNavigation;\nCarousel.NavigationItem = CarouselNavigationItem;\nCarousel.Paddle = CarouselPaddle;\nCarousel.handledProps = Object.keys(Carousel.propTypes);\nCarousel.create = createShorthandFactory({\n  Component: Carousel,\n  mappedArrayProp: 'items'\n});\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\n\nexport default withSafeTypeForAs(Carousel);","map":{"version":3,"sources":["components/Carousel/Carousel.tsx"],"names":["isFromKeyboard","carouselClassName","carouselSlotClassNames","itemsContainer","paddleNext","paddlePrevious","pagination","navigation","Carousel","context","React","setStart","setEnd","useTelemetry","accessibility","items","circular","getItemPositionText","thumbnails","children","ariaRoleDescription","ariaLabel","className","design","styles","variables","props","ElementType","getElementType","state","actions","useStateManager","mapPropsToInitialState","activeIndex","defaultActiveIndex","mapPropsToState","prevActiveIndex","ariaLiveOn","shouldFocusContainer","itemRefs","length","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","actionHandlers","showNextSlideByKeyboardNavigation","e","showNextSlide","showPreviousSlideByKeyboardNavigation","showPreviousSlide","showNextSlideByPaddlePress","handleNextPaddleFocus","showPreviousSlideByPaddlePress","handlePreviousPaddleFocus","mapPropsToBehavior","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","paddleNextRef","paddlePreviousRef","focusItemAtIndex","setActiveIndex","lastItemIndex","nextActiveIndex","lastActiveIndex","index","overrideItemProps","onFocus","isEventFromKeyboard","onBlur","renderContent","itemsContainerWrapper","cx","itemRef","active","slideToNext","initialMounting","item","defaultProps","itemPositionText","overrideProps","handlePaddleOverrides","onClick","paddleName","renderPaddles","previous","hidden","next","renderNavigation","iconOnly","onItemClick","itemProps","element","root","childrenExist","content","PropTypes","customPropTypes","navigationPosition","onActiveIndexChange","paddlesPosition","bool","Object","createShorthandFactory","Component","mappedArrayProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { Accessibility, carouselBehavior, CarouselBehaviorProps } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Ref } from '@fluentui/react-component-ref';\nimport Animation from '../Animation/Animation';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  UIComponentProps,\n  createShorthandFactory,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  isFromKeyboard as isEventFromKeyboard,\n} from '../../utils';\nimport {\n  WithAsProp,\n  withSafeTypeForAs,\n  ShorthandCollection,\n  ShorthandValue,\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n  ProviderContextPrepared,\n} from '../../types';\nimport CarouselItem, { CarouselItemProps } from './CarouselItem';\nimport Text from '../Text/Text';\nimport CarouselNavigation, { CarouselNavigationProps } from './CarouselNavigation';\nimport CarouselNavigationItem, { CarouselNavigationItemProps } from './CarouselNavigationItem';\nimport CarouselPaddle, { CarouselPaddleProps } from './CarouselPaddle';\nimport {\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useStateManager,\n} from '@fluentui/react-bindings';\nimport { createCarouselManager, CarouselState, CarouselActions } from '@fluentui/state';\n\nexport interface CarouselSlotClassNames {\n  itemsContainer: string;\n  paddleNext: string;\n  paddlePrevious: string;\n  pagination: string;\n  navigation: string;\n}\n\nexport interface CarouselProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available menuAsToolbarBehavior, tabListBehavior, tabBehavior\n   */\n  accessibility?: Accessibility<CarouselBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /**\n   * Sets the aria-roledescription attribute.\n   */\n  ariaRoleDescription?: string;\n\n  /**\n   * Sets the aria-label attribute for carousel.\n   */\n  ariaLabel?: string;\n\n  /** Specifies if the process of switching slides is circular. */\n  circular?: boolean;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number;\n\n  /**\n   * Message generator for item position in the carousel. Used to generate the\n   * text for pagination. Also generates invisible text content for each item\n   * which is added along with the slide content. These are used by the screen\n   * reader to narrate position when active item is changed.\n   */\n  getItemPositionText?: (index: number, size: number) => string;\n\n  /** Shorthand array of props for CarouselItem. */\n  items?: ShorthandCollection<CarouselItemProps>;\n\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for the buttons of the CarouselNavigation. */\n  navigation?: ShorthandValue<CarouselNavigationProps> | ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * A Carousel can position its navigation below the content by default,\n   * above the content, to the start or to the end of the content.\n   */\n  navigationPosition?: 'below' | 'above' | 'start' | 'end';\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All Carousel props.\n   */\n  onActiveIndexChange?: ComponentEventHandler<CarouselProps>;\n\n  /** Shorthand for the paddle that navigates to the next item. */\n  paddleNext?: ShorthandValue<CarouselPaddleProps>;\n\n  /**\n   * A Carousel can position its paddels inside the content, outside or inline\n   * with the navigation component.\n   */\n  paddlesPosition?: 'inside' | 'outside' | 'inline';\n\n  /** Shorthand for the paddle that navigates to the previous item. */\n  paddlePrevious?: ShorthandValue<CarouselPaddleProps>;\n}\n\nexport type CarouselStylesProps = { isFromKeyboard: boolean; shouldFocusContainer: boolean };\n\nexport const carouselClassName = 'ui-carousel';\nexport const carouselSlotClassNames: CarouselSlotClassNames = {\n  itemsContainer: `${carouselClassName}__itemscontainer`,\n  paddleNext: `${carouselClassName}__paddlenext`,\n  paddlePrevious: `${carouselClassName}__paddleprevious`,\n  pagination: `${carouselClassName}__pagination`,\n  navigation: `${carouselClassName}__navigation`,\n};\n\nexport const Carousel: React.FC<WithAsProp<CarouselProps>> &\n  FluentComponentStaticProps<CarouselProps> & {\n    Item: typeof CarouselItem;\n    Navigation: typeof CarouselNavigation;\n    NavigationItem: typeof CarouselNavigationItem;\n    Paddle: typeof CarouselPaddle;\n  } = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(Carousel.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    items,\n    circular,\n    getItemPositionText,\n    paddlePrevious,\n    paddleNext,\n    navigation,\n    thumbnails,\n    children,\n    ariaRoleDescription,\n    ariaLabel,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const ElementType = getElementType(props);\n\n  const { state, actions } = useStateManager<CarouselState, CarouselActions>(createCarouselManager, {\n    mapPropsToInitialState: () => ({\n      activeIndex: props.defaultActiveIndex,\n    }),\n    mapPropsToState: () => ({\n      activeIndex: props.activeIndex,\n    }),\n  });\n\n  const { prevActiveIndex, ariaLiveOn, shouldFocusContainer, isFromKeyboard, activeIndex } = state;\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: items?.length }, () => React.createRef()),\n    [items?.length],\n  );\n\n  const unhandledProps = useUnhandledProps(Carousel.handledProps, props);\n  const getA11yProps = useAccessibility<CarouselBehaviorProps>(accessibility, {\n    debugName: Carousel.displayName,\n    actionHandlers: {\n      showNextSlideByKeyboardNavigation: e => {\n        e.preventDefault();\n        showNextSlide(e, true);\n      },\n      showPreviousSlideByKeyboardNavigation: e => {\n        e.preventDefault();\n        showPreviousSlide(e, true);\n      },\n      showNextSlideByPaddlePress: e => {\n        e.preventDefault();\n        showNextSlide(e, false);\n        handleNextPaddleFocus();\n      },\n      showPreviousSlideByPaddlePress: e => {\n        e.preventDefault();\n        showPreviousSlide(e, false);\n        handlePreviousPaddleFocus();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      navigation,\n      ariaLiveOn,\n      ariaRoleDescription,\n      ariaLabel,\n    }),\n  });\n\n  const { classes } = useStyles<CarouselStylesProps>(Carousel.displayName, {\n    className: carouselClassName,\n    mapPropsToStyles: () => ({\n      shouldFocusContainer,\n      isFromKeyboard,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const paddleNextRef = React.createRef<HTMLElement>();\n  const paddlePreviousRef = React.createRef<HTMLElement>();\n\n  const focusItemAtIndex = _.debounce((index: number) => {\n    itemRefs[index].current?.focus();\n  }, 400);\n\n  React.useEffect(() => {\n    return () => {\n      focusItemAtIndex.cancel();\n    };\n  }, [items]);\n\n  const setActiveIndex = (e: React.SyntheticEvent, index: number, focusItem: boolean): void => {\n    const lastItemIndex = items.length - 1;\n    let nextActiveIndex = index;\n    const lastActiveIndex = state.activeIndex;\n\n    if (index < 0) {\n      if (!circular) {\n        return;\n      }\n      nextActiveIndex = lastItemIndex;\n    }\n\n    if (index > lastItemIndex) {\n      if (!circular) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n\n    actions.setIndexes(nextActiveIndex, lastActiveIndex);\n\n    _.invoke(props, 'onActiveIndexChange', e, props);\n\n    if (focusItem) {\n      focusItemAtIndex(nextActiveIndex);\n    }\n  };\n\n  const overrideItemProps = predefinedProps => ({\n    onFocus: (e, itemProps) => {\n      actions.setShouldFocusContainer(e.currentTarget === e.target);\n      actions.setIsFromKeyboard(isEventFromKeyboard());\n      _.invoke(predefinedProps, 'onFocus', e, itemProps);\n    },\n    onBlur: (e, itemProps) => {\n      actions.setShouldFocusContainer(e.currentTarget.contains(e.relatedTarget));\n      actions.setIsFromKeyboard(false);\n      _.invoke(predefinedProps, 'onBlur', e, itemProps);\n    },\n  });\n\n  const renderContent = () => {\n    return (\n      <div\n        {...getA11yProps('itemsContainerWrapper', {\n          className: classes.itemsContainerWrapper,\n        })}\n      >\n        <div\n          {...getA11yProps('itemsContainer', {\n            className: cx(carouselSlotClassNames.itemsContainer, classes.itemsContainer),\n          })}\n        >\n          {items &&\n            items.map((item, index) => {\n              const itemRef = itemRefs[index];\n              const active = activeIndex === index;\n              let slideToNext = prevActiveIndex < activeIndex;\n\n              const initialMounting = prevActiveIndex === -1;\n\n              if (circular && prevActiveIndex === items.length - 1 && activeIndex === 0) {\n                slideToNext = true;\n              } else if (circular && prevActiveIndex === 0 && activeIndex === items.length - 1) {\n                slideToNext = false;\n              }\n\n              return (\n                <Animation\n                  key={item['key'] || index}\n                  mountOnEnter\n                  unmountOnExit\n                  visible={active}\n                  name={\n                    initialMounting || !active\n                      ? ''\n                      : slideToNext\n                      ? 'carousel-slide-to-next-enter'\n                      : 'carousel-slide-to-previous-enter'\n                  }\n                >\n                  <Ref innerRef={itemRef}>\n                    {CarouselItem.create(item, {\n                      defaultProps: () => ({\n                        active,\n                        navigation: !!navigation,\n                        ...(getItemPositionText && {\n                          itemPositionText: getItemPositionText(index, items.length),\n                        }),\n                      }),\n                      overrideProps: overrideItemProps,\n                    })}\n                  </Ref>\n                </Animation>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n\n  const handleNextPaddleFocus = () => {\n    // if 'next' paddle will disappear, will focus 'previous' one.\n    if (!navigation && activeIndex >= props.items.length - 2 && !circular) {\n      paddlePreviousRef.current.focus();\n    }\n  };\n\n  const handlePreviousPaddleFocus = () => {\n    // if 'previous' paddle will disappear, will focus 'next' one.\n    if (!navigation && activeIndex <= 1 && !circular) {\n      paddleNextRef.current.focus();\n    }\n  };\n\n  const showPreviousSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    setActiveIndex(e, +activeIndex - 1, focusItem);\n  };\n\n  const showNextSlide = (e: React.SyntheticEvent, focusItem: boolean) => {\n    setActiveIndex(e, +activeIndex + 1, focusItem);\n  };\n\n  const handlePaddleOverrides = (predefinedProps: CarouselPaddleProps, paddleName: string) => ({\n    onClick: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onClick', e, paddleProps);\n      if (paddleName === 'paddleNext') {\n        showNextSlide(e, false);\n        handleNextPaddleFocus();\n      } else if (paddleName === 'paddlePrevious') {\n        showPreviousSlide(e, false);\n        handlePreviousPaddleFocus();\n      }\n    },\n    onBlur: (e: React.FocusEvent, paddleProps: CarouselPaddleProps) => {\n      if (e.relatedTarget !== paddleNextRef.current) {\n        actions.setAriaLiveOn(false);\n      }\n    },\n    onFocus: (e: React.SyntheticEvent, paddleProps: CarouselPaddleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, paddleProps);\n      actions.setAriaLiveOn(true);\n    },\n  });\n\n  const renderPaddles = () => {\n    return (\n      <>\n        <Ref innerRef={paddlePreviousRef}>\n          {CarouselPaddle.create(paddlePrevious, {\n            defaultProps: () =>\n              getA11yProps('paddlePrevious', {\n                className: carouselSlotClassNames.paddlePrevious,\n                previous: true,\n                hidden: items !== undefined && !circular && activeIndex === 0,\n              }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              handlePaddleOverrides(predefinedProps, 'paddlePrevious'),\n          })}\n        </Ref>\n        <Ref innerRef={paddleNextRef}>\n          {CarouselPaddle.create(paddleNext, {\n            defaultProps: () =>\n              getA11yProps('paddleNext', {\n                className: carouselSlotClassNames.paddleNext,\n                next: true,\n                hidden: items !== undefined && !circular && activeIndex === items.length - 1,\n              }),\n            overrideProps: (predefinedProps: CarouselPaddleProps) =>\n              handlePaddleOverrides(predefinedProps, 'paddleNext'),\n          })}\n        </Ref>\n      </>\n    );\n  };\n\n  const renderNavigation = () => {\n    if (!items || !items.length) {\n      return null;\n    }\n\n    return navigation ? (\n      CarouselNavigation.create(navigation, {\n        defaultProps: () => ({\n          className: carouselSlotClassNames.navigation,\n          iconOnly: true,\n          activeIndex,\n          thumbnails,\n        }),\n        overrideProps: (predefinedProps: CarouselNavigationItemProps) => ({\n          onItemClick: (e: React.SyntheticEvent, itemProps: CarouselNavigationItemProps) => {\n            const { index } = itemProps;\n\n            setActiveIndex(e, index, true);\n\n            _.invoke(predefinedProps, 'onClick', e, itemProps);\n          },\n        }),\n      })\n    ) : getItemPositionText ? (\n      <Text\n        aria-hidden=\"true\"\n        className={carouselSlotClassNames.pagination}\n        content={getItemPositionText(+activeIndex, items.length)}\n      />\n    ) : null;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? (\n        children\n      ) : (\n        <>\n          {renderContent()}\n          {renderPaddles()}\n          {renderNavigation()}\n        </>\n      )}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCarousel.displayName = 'Carousel';\n\nCarousel.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.number,\n  ariaRoleDescription: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  circular: PropTypes.bool,\n  defaultActiveIndex: PropTypes.number,\n  getItemPositionText: PropTypes.func,\n  items: customPropTypes.collectionShorthand,\n  navigation: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  navigationPosition: PropTypes.oneOf(['below', 'above', 'start', 'end']),\n  onActiveIndexChange: PropTypes.func,\n  paddleNext: customPropTypes.itemShorthand,\n  paddlesPosition: PropTypes.oneOf(['inside', 'outside', 'inline']),\n  paddlePrevious: customPropTypes.itemShorthand,\n  thumbnails: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  accessibility: carouselBehavior,\n  paddlePrevious: {},\n  paddleNext: {},\n};\n\nCarousel.Item = CarouselItem;\nCarousel.Navigation = CarouselNavigation;\nCarousel.NavigationItem = CarouselNavigationItem;\nCarousel.Paddle = CarouselPaddle;\n\nCarousel.handledProps = Object.keys(Carousel.propTypes) as any;\n\nCarousel.create = createShorthandFactory({\n  Component: Carousel,\n  mappedArrayProp: 'items',\n});\n\n/**\n * A Carousel displays data organised as a gallery.\n *\n * @accessibility\n * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.\n * @accessibilityIssues\n * [VoiceOver doens't narrate label referenced by aria-labelledby attribute, when role is \"tabpanel\"](https://bugs.chromium.org/p/chromium/issues/detail?id=1040924)\n */\nexport default withSafeTypeForAs<typeof Carousel, CarouselProps, 'div'>(Carousel);\n"]},"metadata":{},"sourceType":"module"}