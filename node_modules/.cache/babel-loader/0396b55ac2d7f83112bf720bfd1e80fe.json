{"ast":null,"code":"/**\n * Tests if children are nil in React and Preact.\n *\n * @param children - The children prop of a component.\n */\nvar childrenExist = function childrenExist(children) {\n  if (children === null || children === undefined) return false;\n  if (typeof children === 'number') return !isNaN(children);\n  if (Array.isArray(children)) return children.length > 0;\n  return !!children;\n};\n\nexport default childrenExist;","map":{"version":3,"sources":["utils/childrenExist.ts"],"names":["childrenExist","children","isNaN","Array"],"mappings":"AAEA;;;;;AAKA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,QAAA,EAAwC;AAC5D,MAAIC,QAAQ,KAARA,IAAAA,IAAqBA,QAAQ,KAAjC,SAAA,EAAiD,OAAA,KAAA;AAEjD,MAAI,OAAA,QAAA,KAAJ,QAAA,EAAkC,OAAO,CAACC,KAAK,CAAb,QAAa,CAAb;AAElC,MAAIC,KAAK,CAALA,OAAAA,CAAJ,QAAIA,CAAJ,EAA6B,OAAOF,QAAQ,CAARA,MAAAA,GAAP,CAAA;AAE7B,SAAO,CAAC,CAAR,QAAA;AAPF,CAAA;;AAUA,eAAA,aAAA","sourcesContent":["import * as React from 'react';\n\n/**\n * Tests if children are nil in React and Preact.\n *\n * @param children - The children prop of a component.\n */\nconst childrenExist = (children: React.ReactNode): boolean => {\n  if (children === null || children === undefined) return false;\n\n  if (typeof children === 'number') return !isNaN(children);\n\n  if (Array.isArray(children)) return children.length > 0;\n\n  return !!children;\n};\n\nexport default childrenExist;\n"]},"metadata":{},"sourceType":"module"}