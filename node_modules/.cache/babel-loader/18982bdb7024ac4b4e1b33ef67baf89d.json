{"ast":null,"code":"import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nexport var createCommon = function createCommon() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$accessibility = config.accessibility,\n      accessibility = _config$accessibility === void 0 ? true : _config$accessibility,\n      _config$as = config.as,\n      as = _config$as === void 0 ? true : _config$as,\n      _config$children = config.children,\n      children = _config$children === void 0 ? 'node' : _config$children,\n      _config$className = config.className,\n      className = _config$className === void 0 ? true : _config$className,\n      _config$color = config.color,\n      color = _config$color === void 0 ? false : _config$color,\n      _config$content = config.content,\n      content = _config$content === void 0 ? 'node' : _config$content,\n      _config$styled = config.styled,\n      styled = _config$styled === void 0 ? true : _config$styled;\n  return Object.assign({}, accessibility && {\n    accessibility: customPropTypes.accessibility\n  }, {}, as && {\n    as: PropTypes.elementType\n  }, {}, children && {\n    children: children === 'element' ? PropTypes.element : PropTypes.node\n  }, {}, className && {\n    className: PropTypes.string\n  }, {}, color && {\n    color: PropTypes.string\n  }, {}, content && {\n    content: content === 'shorthand' ? customPropTypes.itemShorthand : customPropTypes.nodeContent\n  }, {}, styled && {\n    styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    design: customPropTypes.design\n  });\n};","map":{"version":3,"sources":["utils/commonPropTypes.ts"],"names":["createCommon","config","accessibility","as","children","className","color","content","styled","customPropTypes","PropTypes","elementType","node","string","nodeContent","styles","variables","design"],"mappings":"AAAA,OAAO,KAAP,eAAA,MAAA,2BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AAYA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAqC;AAAA,MAApCC,MAAoC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;AAAA,MAAA,qBAAA,GAS3DA,MAT2D,CAAA,aAAA;AAAA,MAE7DC,aAF6D,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,qBAAA;AAAA,MAAA,UAAA,GAS3DD,MAT2D,CAAA,EAAA;AAAA,MAG7DE,EAH6D,GAAA,UAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,UAAA;AAAA,MAAA,gBAAA,GAS3DF,MAT2D,CAAA,QAAA;AAAA,MAI7DG,QAJ6D,GAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,MAAA,GAAA,gBAAA;AAAA,MAAA,iBAAA,GAS3DH,MAT2D,CAAA,SAAA;AAAA,MAK7DI,SAL6D,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,iBAAA;AAAA,MAAA,aAAA,GAS3DJ,MAT2D,CAAA,KAAA;AAAA,MAM7DK,KAN6D,GAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,aAAA;AAAA,MAAA,eAAA,GAS3DL,MAT2D,CAAA,OAAA;AAAA,MAO7DM,OAP6D,GAAA,eAAA,KAAA,KAAA,CAAA,GAAA,MAAA,GAAA,eAAA;AAAA,MAAA,cAAA,GAS3DN,MAT2D,CAAA,MAAA;AAAA,MAQ7DO,MAR6D,GAAA,cAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,cAAA;AAU/D,SAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMN,aAAa,IAAI;AACnBA,IAAAA,aAAa,EAAEO,eAAe,CAACP;AADZ,GADvB,EAAA,EAAA,EAIMC,EAAE,IAAI;AACRA,IAAAA,EAAE,EAAEO,SAAS,CAACC;AADN,GAJZ,EAAA,EAAA,EAOMP,QAAQ,IAAI;AACdA,IAAAA,QAAQ,EAAEA,QAAQ,KAARA,SAAAA,GAAyBM,SAAS,CAAlCN,OAAAA,GAA6CM,SAAS,CAACE;AADnD,GAPlB,EAAA,EAAA,EAUMP,SAAS,IAAI;AACfA,IAAAA,SAAS,EAAEK,SAAS,CAACG;AADN,GAVnB,EAAA,EAAA,EAaMP,KAAK,IAAI;AACXA,IAAAA,KAAK,EAAEI,SAAS,CAACG;AADN,GAbf,EAAA,EAAA,EAgBMN,OAAO,IAAI;AACbA,IAAAA,OAAO,EAAEA,OAAO,KAAPA,WAAAA,GAA0BE,eAAe,CAAzCF,aAAAA,GAA0DE,eAAe,CAACK;AADtE,GAhBjB,EAAA,EAAA,EAmBMN,MAAM,IAAI;AACZO,IAAAA,MAAM,EAAEL,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAD5C,IACgB,CAApBA,CADI;AAEZM,IAAAA,SAAS,EAAEN,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAF/C,IAEmB,CAApBA,CAFC;AAGZO,IAAAA,MAAM,EAAER,eAAe,CAACQ;AAHZ,GAnBhB,CAAA;AAVK,CAAA","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\n\nexport interface CreateCommonConfig {\n  accessibility?: boolean;\n  children?: boolean | 'node' | 'element';\n  as?: boolean;\n  className?: boolean;\n  color?: boolean;\n  content?: boolean | 'node' | 'shorthand';\n  styled?: boolean;\n}\n\nexport const createCommon = (config: CreateCommonConfig = {}) => {\n  const {\n    accessibility = true,\n    as = true,\n    children = 'node',\n    className = true,\n    color = false,\n    content = 'node',\n    styled = true,\n  } = config;\n  return {\n    ...(accessibility && {\n      accessibility: customPropTypes.accessibility,\n    }),\n    ...(as && {\n      as: PropTypes.elementType,\n    }),\n    ...(children && {\n      children: children === 'element' ? PropTypes.element : PropTypes.node,\n    }),\n    ...(className && {\n      className: PropTypes.string,\n    }),\n    ...(color && {\n      color: PropTypes.string,\n    }),\n    ...(content && {\n      content: content === 'shorthand' ? customPropTypes.itemShorthand : customPropTypes.nodeContent,\n    }),\n    ...(styled && {\n      styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      design: customPropTypes.design,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}