{"ast":null,"code":"import { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport { withSafeTypeForAs } from '../../types';\nimport { commonPropTypes, createShorthandFactory } from '../../utils';\nexport var cardFooterClassName = 'ui-card__footer';\n\nvar CardFooter = function CardFooter(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(CardFooter.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var className = props.className,\n      design = props.design,\n      styles = props.styles,\n      variables = props.variables,\n      children = props.children,\n      fitted = props.fitted;\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(CardFooter.handledProps, props);\n  var getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardFooter.displayName,\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(CardFooter.displayName, {\n    className: cardFooterClassName,\n    mapPropsToStyles: function mapPropsToStyles() {\n      return {\n        fitted: fitted\n      };\n    },\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes;\n\n  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({\n    className: classes.root\n  }, unhandledProps)), children);\n  setEnd();\n  return element;\n};\n\nCardFooter.displayName = 'CardFooter';\nCardFooter.propTypes = Object.assign({}, commonPropTypes.createCommon(), {\n  fitted: PropTypes.bool\n});\nCardFooter.handledProps = Object.keys(CardFooter.propTypes);\nCardFooter.create = createShorthandFactory({\n  Component: CardFooter\n});\n/**\n * A CardFooter is used to display data in Card component footer\n */\n\nexport default withSafeTypeForAs(CardFooter);","map":{"version":3,"sources":["components/Card/CardFooter.tsx"],"names":["cardFooterClassName","CardFooter","context","React","setStart","setEnd","useTelemetry","className","design","styles","variables","children","fitted","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToStyles","mapPropsToInlineStyles","element","root","commonPropTypes","PropTypes","bool","Object","createShorthandFactory","Component","withSafeTypeForAs"],"mappings":"AACA,SAAA,cAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,YAAA,QAAA,0BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA,C,CACA;;AACA,SAAA,YAAA,QAAA,YAAA;AACA,SAAA,iBAAA,QAAA,aAAA;AACA,SAAA,eAAA,EAAA,sBAAA,QAAA,aAAA;AAaA,OAAO,IAAMA,mBAAmB,GAAzB,iBAAA;;AAEP,IAAMC,UAA+F,GAAG,SAAlGA,UAAkG,CAAA,KAAA,EAAS;AAC/G,MAAMC,OAAgC,GAAGC,KAAK,CAALA,UAAAA,CAAzC,YAAyCA,CAAzC;;AAD+G,MAAA,aAAA,GAElFG,YAAY,CAACL,UAAU,CAAX,WAAA,EAAyBC,OAAO,CAFsC,SAEtE,CAFsE;AAAA,MAEvGE,QAFuG,GAAA,aAAA,CAAA,QAAA;AAAA,MAE7FC,MAF6F,GAAA,aAAA,CAAA,MAAA;;AAG/GD,EAAAA,QAAQ;AAHuG,MAKvGG,SALuG,GAK5CM,KAL4C,CAAA,SAAA;AAAA,MAK5FL,MAL4F,GAK5CK,KAL4C,CAAA,MAAA;AAAA,MAKpFJ,MALoF,GAK5CI,KAL4C,CAAA,MAAA;AAAA,MAK5EH,SAL4E,GAK5CG,KAL4C,CAAA,SAAA;AAAA,MAKjEF,QALiE,GAK5CE,KAL4C,CAAA,QAAA;AAAA,MAKvDD,MALuD,GAK5CC,KAL4C,CAAA,MAAA;AAM/G,MAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,MAAMC,cAAc,GAAGC,iBAAiB,CAAChB,UAAU,CAAX,YAAA,EAAxC,KAAwC,CAAxC;AACA,MAAMiB,YAAY,GAAGC,gBAAgB,CAACN,KAAK,CAAN,aAAA,EAAsB;AACzDO,IAAAA,SAAS,EAAEnB,UAAU,CADoC,WAAA;AAEzDoB,IAAAA,GAAG,EAAEnB,OAAO,CAACmB;AAF4C,GAAtB,CAArC;;AAR+G,MAAA,UAAA,GAa3FE,SAAS,CAAwBtB,UAAU,CAAlC,WAAA,EAAgD;AAC3EM,IAAAA,SAAS,EADkE,mBAAA;AAE3EiB,IAAAA,gBAAgB,EAAE,SAAA,gBAAA,GAAA;AAAA,aAAO;AAAEZ,QAAAA,MAAM,EAANA;AAAF,OAAP;AAFyD,KAAA;AAG3Ea,IAAAA,sBAAsB,EAAE,SAAA,sBAAA,GAAA;AAAA,aAAO;AAC7BlB,QAAAA,SAAS,EADoB,SAAA;AAE7BC,QAAAA,MAAM,EAFuB,MAAA;AAG7BC,QAAAA,MAAM,EAHuB,MAAA;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAHmD,KAAA;AAS3EW,IAAAA,GAAG,EAAEnB,OAAO,CAACmB;AAT8D,GAAhD,CAbkF;AAAA,MAavGC,OAbuG,GAAA,UAAA,CAAA,OAAA;;AAyB/G,MAAMI,OAAO,GACX,KAAA,CAAA,aAAA,CAAA,WAAA,EACMR,YAAY,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACdX,IAAAA,SAAS,EAAEe,OAAO,CAACK;AADL,GAAA,EADlB,cACkB,CAAA,CADlB,EADF,QACE,CADF;AAUAtB,EAAAA,MAAM;AACN,SAAA,OAAA;AApCF,CAAA;;AAuCAJ,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEAA,UAAU,CAAVA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EACK2B,eAAe,CADpB3B,YACK2B,EADL3B,EAAAA;AAEEW,EAAAA,MAAM,EAAEiB,SAAS,CAACC;AAFpB7B,CAAAA,CAAAA;AAKAA,UAAU,CAAVA,YAAAA,GAA0B8B,MAAM,CAANA,IAAAA,CAAY9B,UAAU,CAAhDA,SAA0B8B,CAA1B9B;AAEAA,UAAU,CAAVA,MAAAA,GAAoB+B,sBAAsB,CAAC;AAAEC,EAAAA,SAAS,EAAEhC;AAAb,CAAD,CAA1CA;AAEA;;;;AAGA,eAAeiC,iBAAiB,CAAhC,UAAgC,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport { getElementType, useUnhandledProps, useAccessibility, useStyles, useTelemetry } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport { FluentComponentStaticProps, ProviderContextPrepared, WithAsProp, withSafeTypeForAs } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardFooterProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardFooterStylesProps = Pick<CardFooterProps, 'fitted'>;\nexport const cardFooterClassName = 'ui-card__footer';\n\nconst CardFooter: React.FC<WithAsProp<CardFooterProps>> & FluentComponentStaticProps<CardFooterProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(CardFooter.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardFooter.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardFooter.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardFooterStylesProps>(CardFooter.displayName, {\n    className: cardFooterClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardFooter.displayName = 'CardFooter';\n\nCardFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardFooter.handledProps = Object.keys(CardFooter.propTypes) as any;\n\nCardFooter.create = createShorthandFactory({ Component: CardFooter });\n\n/**\n * A CardFooter is used to display data in Card component footer\n */\nexport default withSafeTypeForAs<typeof CardFooter, CardFooterProps, 'div'>(CardFooter);\n"]},"metadata":{},"sourceType":"module"}