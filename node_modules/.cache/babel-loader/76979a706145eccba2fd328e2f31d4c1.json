{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport { hierarchicalTreeTitleBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponent, childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer, applyAccessibilityKeyHandlers } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nexport var hierarchicalTreeTitleClassName = 'ui-hierarchicaltree__title';\n\nvar HierarchicalTreeTitle = /*#__PURE__*/function (_UIComponent) {\n  _inherits(HierarchicalTreeTitle, _UIComponent);\n\n  function HierarchicalTreeTitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HierarchicalTreeTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HierarchicalTreeTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"actionHandlers\", {\n      performClick: function performClick(e) {\n        e.preventDefault();\n\n        _this.handleClick(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(HierarchicalTreeTitle, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          accessibility = _ref.accessibility,\n          unhandledProps = _ref.unhandledProps,\n          styles = _ref.styles,\n          variables = _ref.variables;\n      var _this$props = this.props,\n          children = _this$props.children,\n          content = _this$props.content;\n      return React.createElement(ElementType, _extends({\n        className: classes.root,\n        onClick: this.handleClick\n      }, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children, content]\n      }), unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), childrenExist(children) ? children : content);\n    }\n  }]);\n\n  return HierarchicalTreeTitle;\n}(UIComponent);\n\n_defineProperty(HierarchicalTreeTitle, \"create\", void 0);\n\n_defineProperty(HierarchicalTreeTitle, \"deprecated_className\", hierarchicalTreeTitleClassName);\n\n_defineProperty(HierarchicalTreeTitle, \"displayName\", 'HierarchicalTreeTitle');\n\n_defineProperty(HierarchicalTreeTitle, \"propTypes\", Object.assign({}, commonPropTypes.createCommon(), {\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  hasSubtree: PropTypes.bool\n}));\n\n_defineProperty(HierarchicalTreeTitle, \"defaultProps\", {\n  as: 'a',\n  accessibility: hierarchicalTreeTitleBehavior\n});\n\nHierarchicalTreeTitle.create = createShorthandFactory({\n  Component: HierarchicalTreeTitle,\n  mappedProp: 'content'\n});\n/**\n * A TreeTitle renders a title of TreeItem.\n */\n\nexport default withSafeTypeForAs(HierarchicalTreeTitle);","map":{"version":3,"sources":["components/HierarchicalTree/HierarchicalTreeTitle.tsx"],"names":["hierarchicalTreeTitleClassName","HierarchicalTreeTitle","UIComponent","commonPropTypes","onClick","PropTypes","func","open","bool","hasSubtree","as","accessibility","hierarchicalTreeTitleBehavior","performClick","e","ElementType","classes","unhandledProps","styles","variables","children","content","handleClick","forElements","applyAccessibilityKeyHandlers","childrenExist","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":";;;;;;;;;AAAA,SAAA,6BAAA,QAAA,yBAAA;AAEA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,WAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,6BAAA,QAAA,aAAA;AAYA,SAAA,iBAAA,QAAA,aAAA;AAqBA,OAAO,IAAMA,8BAA8B,GAApC,4BAAA;;IAEDC,qB;;;;;;;;;;;;;;;;qEAmBa;AACfY,MAAAA,YAAY,EAAE,SAAA,YAAA,CAAA,CAAA,EAAK;AACjBC,QAAAA,CAAC,CAADA,cAAAA;;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,CAAA;AACD;AAJc,K;;kEAOH,UAAA,CAAA,EAAK;AACjB,MAAA,OAAA,CAAS,KAAA,CAAT,KAAA,EAAA,SAAA,EAAA,CAAA,EAAmC,KAAA,CAAnC,KAAA,CAAA;;;;;;;;0CAG0F;AAAA,UAA1EC,WAA0E,GAAA,IAAA,CAA1EA,WAA0E;AAAA,UAA7DC,OAA6D,GAAA,IAAA,CAA7DA,OAA6D;AAAA,UAApDL,aAAoD,GAAA,IAAA,CAApDA,aAAoD;AAAA,UAArCM,cAAqC,GAAA,IAAA,CAArCA,cAAqC;AAAA,UAArBC,MAAqB,GAAA,IAAA,CAArBA,MAAqB;AAAA,UAAbC,SAAa,GAAA,IAAA,CAAbA,SAAa;AAAA,UAAA,WAAA,GAC5D,KAD4D,KAAA;AAAA,UAClFC,QADkF,GAAA,WAAA,CAAA,QAAA;AAAA,UACxEC,OADwE,GAAA,WAAA,CAAA,OAAA;AAG1F,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,QAAA,SAAS,EAAEL,OAAO,CADpB,IAAA;AAEE,QAAA,OAAO,EAAE,KAAKM;AAFhB,OAAA,EAGMX,aAAa,CAAbA,UAAAA,CAHN,IAAA,EAIM,gBAAgB,CAAhB,aAAA,CAA+B;AAAEY,QAAAA,WAAW,EAAE,CAAA,QAAA,EAAA,OAAA;AAAf,OAA/B,CAJN,EAAA,cAAA,EAMMC,6BAA6B,CAACb,aAAa,CAAbA,WAAAA,CAAD,IAAA,EANnC,cAMmC,CANnC,CAAA,EAQGc,aAAa,CAAbA,QAAa,CAAbA,GAAAA,QAAAA,GATL,OACE,CADF;AAYD;;;;EA7CiCvB,W;;gBAA9BD,qB;;gBAAAA,qB,0BAG0BD,8B;;gBAH1BC,qB,iBAKiB,uB;;gBALjBA,qB,iCAQCE,eAAe,CAAfA,YAAAA,E;AACHC,EAAAA,OAAO,EAAEC,SAAS,CAACC,I;AACnBC,EAAAA,IAAI,EAAEF,SAAS,CAACG,I;AAChBC,EAAAA,UAAU,EAAEJ,SAAS,CAACG;;;gBAXpBP,qB,kBAckB;AACpBS,EAAAA,EAAE,EADkB,GAAA;AAEpBC,EAAAA,aAAa,EAAEC;AAFK,C;;AAkCxBX,qBAAqB,CAArBA,MAAAA,GAA+ByB,sBAAsB,CAAC;AACpDC,EAAAA,SAAS,EAD2C,qBAAA;AAEpDC,EAAAA,UAAU,EAAE;AAFwC,CAAD,CAArD3B;AAKA;;;;AAGA,eAAe4B,iBAAiB,CAAhC,qBAAgC,CAAhC","sourcesContent":["import { Accessibility, hierarchicalTreeTitleBehavior } from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  UIComponent,\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  applyAccessibilityKeyHandlers,\n  ShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface HierarchicalTreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<HierarchicalTreeTitleProps>;\n\n  /** Whether or not the subtree of the item is in the open state. */\n  open?: boolean;\n\n  /** Whether or not the item has a subtree. */\n  hasSubtree?: boolean;\n}\n\nexport const hierarchicalTreeTitleClassName = 'ui-hierarchicaltree__title';\n\nclass HierarchicalTreeTitle extends UIComponent<WithAsProp<HierarchicalTreeTitleProps>> {\n  static create: ShorthandFactory<HierarchicalTreeTitleProps>;\n\n  static deprecated_className = hierarchicalTreeTitleClassName;\n\n  static displayName = 'HierarchicalTreeTitle';\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    onClick: PropTypes.func,\n    open: PropTypes.bool,\n    hasSubtree: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    as: 'a',\n    accessibility: hierarchicalTreeTitleBehavior,\n  };\n\n  actionHandlers = {\n    performClick: e => {\n      e.preventDefault();\n      this.handleClick(e);\n    },\n  };\n\n  handleClick = e => {\n    _.invoke(this.props, 'onClick', e, this.props);\n  };\n\n  renderComponent({ ElementType, classes, accessibility, unhandledProps, styles, variables }) {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        className={classes.root}\n        onClick={this.handleClick}\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...unhandledProps}\n        {...applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nHierarchicalTreeTitle.create = createShorthandFactory({\n  Component: HierarchicalTreeTitle,\n  mappedProp: 'content',\n});\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport default withSafeTypeForAs<typeof HierarchicalTreeTitle, HierarchicalTreeTitleProps, 'a'>(HierarchicalTreeTitle);\n"]},"metadata":{},"sourceType":"module"}