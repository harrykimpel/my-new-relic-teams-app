{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\nimport toolbarMenuItemBehavior from './toolbarMenuItemBehavior';\nimport * as keyboardKey from 'keyboard-key';\n/**\n * @description\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Component will get focus when mounted.\n */\n\nvar toolbarMenuBehavior = function toolbarMenuBehavior() {\n  return {\n    attributes: {\n      root: {\n        role: 'menu'\n      }\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: keyboardKey.Spacebar\n          }]\n        }\n      }\n    },\n    focusZone: {\n      props: {\n        isCircularNavigation: true,\n        shouldFocusOnMount: true,\n        direction: FocusZoneDirection.vertical\n      }\n    },\n    childBehaviors: {\n      item: toolbarMenuItemBehavior\n    }\n  };\n};\n\nexport default toolbarMenuBehavior;","map":{"version":3,"sources":["behaviors/Toolbar/toolbarMenuBehavior.ts"],"names":["toolbarMenuBehavior","attributes","root","role","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar","focusZone","props","isCircularNavigation","shouldFocusOnMount","direction","FocusZoneDirection","vertical","childBehaviors","item","toolbarMenuItemBehavior"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,OAAA,uBAAA,MAAA,2BAAA;AACA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA;;;;;;;;;;;AAUA,IAAMA,mBAA4D,GAAG,SAA/DA,mBAA+D,GAAA;AAAA,SAAO;AAC1EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD8D;AAO1EC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI,KAP8D;AAc1EC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EADf,IAAA;AAELC,QAAAA,kBAAkB,EAFb,IAAA;AAGLC,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AAHzB;AADE,KAd+D;AAqB1EC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAEC;AAAR;AArB0D,GAAP;AAArE,CAAA;;AA0BA,eAAA,mBAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport toolbarMenuItemBehavior from './toolbarMenuItemBehavior';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @description\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Component will get focus when mounted.\n */\nconst toolbarMenuBehavior: Accessibility<ToolbarMenuBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n  focusZone: {\n    props: {\n      isCircularNavigation: true,\n      shouldFocusOnMount: true,\n      direction: FocusZoneDirection.vertical,\n    },\n  },\n  childBehaviors: { item: toolbarMenuItemBehavior },\n});\n\nexport type ToolbarMenuBehaviorProps = never;\n\nexport default toolbarMenuBehavior;\n"]},"metadata":{},"sourceType":"module"}