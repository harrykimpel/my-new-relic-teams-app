{"ast":null,"code":"import _keys from \"lodash/keys\";\nimport * as React from 'react'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport renderComponent from './renderComponent';\nimport { createShorthandFactory } from './factories';\n\nvar createComponentInternal = function createComponentInternal(_ref) {\n  var _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? 'FluentUIComponent' : _ref$displayName,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'fluent-ui-component' : _ref$className,\n      _ref$shorthandPropNam = _ref.shorthandPropName,\n      shorthandPropName = _ref$shorthandPropNam === void 0 ? 'children' : _ref$shorthandPropNam,\n      _ref$defaultProps = _ref.defaultProps,\n      defaultProps = _ref$defaultProps === void 0 ? {} : _ref$defaultProps,\n      _ref$handledProps = _ref.handledProps,\n      handledProps = _ref$handledProps === void 0 ? [] : _ref$handledProps,\n      propTypes = _ref.propTypes,\n      actionHandlers = _ref.actionHandlers,\n      _render = _ref.render;\n  var mergedDefaultProps = Object.assign({\n    as: 'div'\n  }, defaultProps);\n\n  var FluentComponent = function FluentComponent(props) {\n    // Stores debug information for component.\n    // Note that this ref should go as the first one, to be discoverable by debug utils.\n    var ref = React.useRef(null);\n    var context = React.useContext(ThemeContext);\n    return renderComponent({\n      className: className,\n      displayName: displayName,\n      handledProps: _keys(propTypes).concat(handledProps),\n      props: props,\n      state: {},\n      actionHandlers: actionHandlers,\n      render: function render(config) {\n        return _render(config, props);\n      },\n      saveDebug: function saveDebug(fluentUIDebug) {\n        return ref.current = {\n          fluentUIDebug: fluentUIDebug\n        };\n      }\n    }, context);\n  };\n\n  FluentComponent.deprecated_className = className;\n  FluentComponent.create = createShorthandFactory({\n    Component: mergedDefaultProps.as,\n    mappedProp: shorthandPropName\n  });\n  FluentComponent.displayName = displayName;\n  FluentComponent.propTypes = propTypes; // TODO: generate prop types\n\n  FluentComponent.defaultProps = mergedDefaultProps;\n  return FluentComponent;\n};\n\nexport default createComponentInternal;","map":{"version":3,"sources":["utils/createComponentInternal.ts"],"names":["createComponentInternal","displayName","className","shorthandPropName","defaultProps","handledProps","propTypes","actionHandlers","render","mergedDefaultProps","as","FluentComponent","ref","React","context","renderComponent","props","state","saveDebug","fluentUIDebug","createShorthandFactory","Component","mappedProp"],"mappings":";AACA,OAAO,KAAP,KAAA,MAAA,OAAA,C,CAEA;;AACA,SAAA,YAAA,QAAA,YAAA;AAEA,OAAA,eAAA,MAAA,mBAAA;AACA,SAAA,sBAAA,QAAA,aAAA;;AAmBA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,IAAA,EAS8B;AAAA,MAAA,gBAAA,GAAA,IAAA,CAR5DC,WAQ4D;AAAA,MAR5DA,WAQ4D,GAAA,gBAAA,KAAA,KAAA,CAAA,GAR9C,mBAQ8C,GAAA,gBAAA;AAAA,MAAA,cAAA,GAAA,IAAA,CAP5DC,SAO4D;AAAA,MAP5DA,SAO4D,GAAA,cAAA,KAAA,KAAA,CAAA,GAPhD,qBAOgD,GAAA,cAAA;AAAA,MAAA,qBAAA,GAAA,IAAA,CAN5DC,iBAM4D;AAAA,MAN5DA,iBAM4D,GAAA,qBAAA,KAAA,KAAA,CAAA,GANxC,UAMwC,GAAA,qBAAA;AAAA,MAAA,iBAAA,GAAA,IAAA,CAL5DC,YAK4D;AAAA,MAL5DA,YAK4D,GAAA,iBAAA,KAAA,KAAA,CAAA,GAL7C,EAK6C,GAAA,iBAAA;AAAA,MAAA,iBAAA,GAAA,IAAA,CAJ5DC,YAI4D;AAAA,MAJ5DA,YAI4D,GAAA,iBAAA,KAAA,KAAA,CAAA,GAJ7C,EAI6C,GAAA,iBAAA;AAAA,MAH5DC,SAG4D,GAAA,IAAA,CAH5DA,SAG4D;AAAA,MAF5DC,cAE4D,GAAA,IAAA,CAF5DA,cAE4D;AAAA,MAD5DC,OAC4D,GAAA,IAAA,CAD5DA,MAC4D;AAC5D,MAAMC,kBAAkB,GAAA,MAAA,CAAA,MAAA,CAAA;AACtBC,IAAAA,EAAE,EAAE;AADkB,GAAA,EAAxB,YAAwB,CAAxB;;AAKA,MAAMC,eAA6C,GAAG,SAAhDA,eAAgD,CAAA,KAAA,EAAkC;AACtF;AACA;AACA,QAAMC,GAAG,GAAGC,KAAK,CAALA,MAAAA,CAAZ,IAAYA,CAAZ;AAEA,QAAMC,OAAgC,GAAGD,KAAK,CAALA,UAAAA,CAAzC,YAAyCA,CAAzC;AAEA,WAAOE,eAAe,CACpB;AACEb,MAAAA,SAAS,EADX,SAAA;AAEED,MAAAA,WAAW,EAFb,WAAA;AAGEI,MAAAA,YAAY,EAAE,KAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAHhB,YAGgB,CAHhB;AAIEW,MAAAA,KAAK,EAJP,KAAA;AAKEC,MAAAA,KAAK,EALP,EAAA;AAMEV,MAAAA,cAAc,EANhB,cAAA;AAOEC,MAAAA,MAAM,EAAE,SAAA,MAAA,CAAA,MAAA,EAAM;AAAA,eAAIA,OAAM,CAAA,MAAA,EAAV,KAAU,CAAV;AAPhB,OAAA;AAQEU,MAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,aAAA,EAAa;AAAA,eAAKN,GAAG,CAAHA,OAAAA,GAAc;AAAEO,UAAAA,aAAa,EAAbA;AAAF,SAAnB;AAAA;AAR1B,KADoB,EAAtB,OAAsB,CAAtB;AAPF,GAAA;;AAsBAR,EAAAA,eAAe,CAAfA,oBAAAA,GAAAA,SAAAA;AAEAA,EAAAA,eAAe,CAAfA,MAAAA,GAAyBS,sBAAsB,CAAC;AAC9CC,IAAAA,SAAS,EAAEZ,kBAAkB,CADiB,EAAA;AAE9Ca,IAAAA,UAAU,EAAEnB;AAFkC,GAAD,CAA/CQ;AAKAA,EAAAA,eAAe,CAAfA,WAAAA,GAAAA,WAAAA;AAEAA,EAAAA,eAAe,CAAfA,SAAAA,GArC4D,SAqC5DA,CArC4D,CAqCrB;;AAEvCA,EAAAA,eAAe,CAAfA,YAAAA,GAAAA,kBAAAA;AAEA,SAAA,eAAA;AAlDF,CAAA;;AAqDA,eAAA,uBAAA","sourcesContent":["import { AccessibilityActionHandlers } from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\n\nimport renderComponent, { RenderResultConfig } from './renderComponent';\nimport { createShorthandFactory, ShorthandFactory } from './factories';\nimport { ObjectOf, ProviderContextPrepared } from '../types';\n\nexport interface CreateComponentConfig<P> {\n  displayName: string;\n  className?: string;\n  shorthandPropName?: string;\n  defaultProps?: Partial<P>;\n  handledProps?: string[];\n  propTypes?: React.WeakValidationMap<P>;\n  actionHandlers?: AccessibilityActionHandlers;\n  render: (config: RenderResultConfig<P>, props: P) => React.ReactNode;\n}\n\nexport type CreateComponentReturnType<P> = React.FunctionComponent<P> & {\n  deprecated_className: string;\n  create: ShorthandFactory<P>;\n};\n\nconst createComponentInternal = <P extends ObjectOf<any> = any>({\n  displayName = 'FluentUIComponent',\n  className = 'fluent-ui-component',\n  shorthandPropName = 'children',\n  defaultProps = {},\n  handledProps = [],\n  propTypes,\n  actionHandlers,\n  render,\n}: CreateComponentConfig<P>): CreateComponentReturnType<P> => {\n  const mergedDefaultProps = {\n    as: 'div',\n    ...(defaultProps as any),\n  };\n\n  const FluentComponent: CreateComponentReturnType<P> = (props): React.ReactElement<P> => {\n    // Stores debug information for component.\n    // Note that this ref should go as the first one, to be discoverable by debug utils.\n    const ref = React.useRef(null);\n\n    const context: ProviderContextPrepared = React.useContext(ThemeContext);\n\n    return renderComponent(\n      {\n        className,\n        displayName,\n        handledProps: _.keys(propTypes).concat(handledProps),\n        props,\n        state: {},\n        actionHandlers,\n        render: config => render(config, props),\n        saveDebug: fluentUIDebug => (ref.current = { fluentUIDebug }),\n      },\n      context,\n    );\n  };\n\n  FluentComponent.deprecated_className = className;\n\n  FluentComponent.create = createShorthandFactory({\n    Component: mergedDefaultProps.as,\n    mappedProp: shorthandPropName,\n  });\n\n  FluentComponent.displayName = displayName;\n\n  FluentComponent.propTypes = propTypes; // TODO: generate prop types\n\n  FluentComponent.defaultProps = mergedDefaultProps;\n\n  return FluentComponent;\n};\n\nexport default createComponentInternal;\n"]},"metadata":{},"sourceType":"module"}