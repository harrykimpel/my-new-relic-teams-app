{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as keyboardKey from 'keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @specification\n *  Adds attribute 'aria-checked=true' based on the property 'active'.\n *  Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n *  Adds role='menuitemradio'.\n */\n\nvar toolbarMenuItemRadioBehavior = function toolbarMenuItemRadioBehavior(props) {\n  var _root;\n\n  return {\n    attributes: {\n      root: (_root = {}, _defineProperty(_root, IS_FOCUSABLE_ATTRIBUTE, true), _defineProperty(_root, 'aria-checked', props.active), _defineProperty(_root, 'aria-disabled', props.disabled), _defineProperty(_root, \"role\", 'menuitemradio'), _root)\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: keyboardKey.Spacebar\n          }]\n        }\n      }\n    }\n  };\n};\n\nexport default toolbarMenuItemRadioBehavior;","map":{"version":3,"sources":["behaviors/Toolbar/toolbarMenuItemRadioBehavior.ts"],"names":["toolbarMenuItemRadioBehavior","attributes","root","props","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar"],"mappings":";AAAA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAGA;;;;;;;AAMA,IAAMA,4BAA8E,GAAG,SAAjFA,4BAAiF,CAAA,KAAA,EAAK;AAAA,MAAA,KAAA;;AAAA,SAAK;AAC/FC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,sBAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,cAAA,EAEcC,KAAK,CAFnB,MAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,eAAA,EAGeA,KAAK,CAHpB,QAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,MAAA,EAAA,eAAA,CAAA,EAAA,KAAA;AADM,KADmF;AAS/FC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI;AATmF,GAAL;AAA5F,CAAA;;AAkBA,eAAA,4BAAA","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @specification\n *  Adds attribute 'aria-checked=true' based on the property 'active'.\n *  Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n *  Adds role='menuitemradio'.\n */\nconst toolbarMenuItemRadioBehavior: Accessibility<ToolbarMenuItemRadioBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      'aria-checked': props.active,\n      'aria-disabled': props.disabled,\n      role: 'menuitemradio',\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default toolbarMenuItemRadioBehavior;\n\ntype ToolbarMenuItemRadioBehaviorProps = {\n  active?: boolean;\n  disabled?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}