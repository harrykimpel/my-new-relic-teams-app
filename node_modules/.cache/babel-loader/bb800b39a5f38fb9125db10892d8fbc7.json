{"ast":null,"code":"import { pxToRem } from '../../../../utils';\nvar formFieldStyles = {\n  root: function root(_ref) {\n    var props = _ref.props,\n        variables = _ref.variables;\n    return {};\n  },\n  label: function label(_ref2) {\n    var props = _ref2.props;\n    var type = props.type,\n        inline = props.inline,\n        required = props.required;\n    return Object.assign({}, (!type || type !== 'radio' && type !== 'checkbox') && {\n      display: 'block'\n    }, {}, inline && {\n      marginRight: pxToRem(10),\n      display: 'inline'\n    }, {}, required && {\n      '::after': {\n        content: '\"*\"'\n      }\n    });\n  },\n  control: function control(_ref3) {\n    var props = _ref3.props;\n    var type = props.type;\n    return Object.assign({}, type && (type === 'radio' || type === 'checkbox') && {\n      marginRight: pxToRem(10)\n    });\n  },\n  message: function message() {\n    return {\n      display: 'block'\n    };\n  }\n};\nexport default formFieldStyles;","map":{"version":3,"sources":["themes/teams/components/Form/formFieldStyles.ts"],"names":["formFieldStyles","root","props","variables","label","type","inline","required","display","marginRight","pxToRem","content","control","message"],"mappings":"AAEA,SAAA,OAAA,QAAA,mBAAA;AAEA,IAAMA,eAA4D,GAAG;AACnEC,EAAAA,IAAI,EAAE,SAAA,IAAA,CAAA,IAAA,EAAA;AAAA,QAAGC,KAAH,GAAA,IAAA,CAAA,KAAA;AAAA,QAAUC,SAAV,GAAA,IAAA,CAAA,SAAA;AAAA,WAAA,EAAA;AAD6D,GAAA;AAEnEC,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAA8B;AAAA,QAA3BF,KAA2B,GAAA,KAAA,CAA3BA,KAA2B;AAAA,QAC3BG,IAD2B,GACAH,KADA,CAAA,IAAA;AAAA,QACrBI,MADqB,GACAJ,KADA,CAAA,MAAA;AAAA,QACbK,QADa,GACAL,KADA,CAAA,QAAA;AAEnC,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,CAAC,CAAA,IAAA,IAAUG,IAAI,KAAJA,OAAAA,IAAoBA,IAAI,KAAnC,UAAA,KAAwD;AAC1DG,MAAAA,OAAO,EAAE;AADiD,KAD9D,EAAA,EAAA,EAIMF,MAAM,IAAI;AAAEG,MAAAA,WAAW,EAAEC,OAAO,CAAtB,EAAsB,CAAtB;AAA4BF,MAAAA,OAAO,EAAE;AAArC,KAJhB,EAAA,EAAA,EAKMD,QAAQ,IAAI;AACd,iBAAW;AACTI,QAAAA,OAAO,EAAE;AADA;AADG,KALlB,CAAA;AAJiE,GAAA;AAgBnEC,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAA8B;AAAA,QAA3BV,KAA2B,GAAA,KAAA,CAA3BA,KAA2B;AAAA,QAC7BG,IAD6B,GACpBH,KADoB,CAAA,IAAA;AAErC,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMG,IAAI,KACLA,IAAI,KAAJA,OAAAA,IAAoBA,IAAI,KADvBA,UAAI,CAAJA,IAC2C;AAC3CI,MAAAA,WAAW,EAAEC,OAAO,CAAA,EAAA;AADuB,KAFjD,CAAA;AAlBiE,GAAA;AAyBnEG,EAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,WAAsB;AAC7BL,MAAAA,OAAO,EAAE;AADoB,KAAtB;AAAA;AAzB0D,CAArE;AA8BA,eAAA,eAAA","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { FormFieldProps } from '../../../../components/Form/FormField';\nimport { pxToRem } from '../../../../utils';\n\nconst formFieldStyles: ComponentSlotStylesPrepared<FormFieldProps> = {\n  root: ({ props, variables }): ICSSInJSStyle => ({}),\n  label: ({ props }): ICSSInJSStyle => {\n    const { type, inline, required } = props;\n    return {\n      ...((!type || (type !== 'radio' && type !== 'checkbox')) && {\n        display: 'block',\n      }),\n      ...(inline && { marginRight: pxToRem(10), display: 'inline' }),\n      ...(required && {\n        '::after': {\n          content: '\"*\"',\n        },\n      }),\n    };\n  },\n  control: ({ props }): ICSSInJSStyle => {\n    const { type } = props;\n    return {\n      ...(type &&\n        (type === 'radio' || type === 'checkbox') && {\n          marginRight: pxToRem(10),\n        }),\n    };\n  },\n  message: (): ICSSInJSStyle => ({\n    display: 'block',\n  }),\n};\n\nexport default formFieldStyles;\n"]},"metadata":{},"sourceType":"module"}