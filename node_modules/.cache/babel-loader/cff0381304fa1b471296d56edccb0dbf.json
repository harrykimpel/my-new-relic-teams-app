{"ast":null,"code":"import * as React from 'react'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport { createShorthandFactory, commonPropTypes, childrenExist } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nexport var dialogFooterClassName = 'ui-dialog__footer';\nexport var DialogFooter = function DialogFooter(props) {\n  var context = React.useContext(ThemeContext);\n\n  var _useTelemetry = useTelemetry(DialogFooter.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n\n  setStart();\n  var children = props.children,\n      content = props.content,\n      className = props.className,\n      design = props.design,\n      styles = props.styles,\n      variables = props.variables,\n      accessibility = props.accessibility;\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n  var getA11yProps = useAccessibility(accessibility, {\n    debugName: DialogFooter.displayName,\n    rtl: context.rtl\n  });\n\n  var _useStyles = useStyles(DialogFooter.displayName, {\n    className: dialogFooterClassName,\n    mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n      return {\n        className: className,\n        design: design,\n        styles: styles,\n        variables: variables\n      };\n    },\n    rtl: context.rtl\n  }),\n      classes = _useStyles.classes;\n\n  var element = React.createElement(ElementType, getA11yProps('root', Object.assign({\n    className: classes.root\n  }, unhandledProps)), childrenExist(children) ? children : content);\n  setEnd();\n  return element;\n};\nDialogFooter.displayName = 'DialogFooter';\nDialogFooter.propTypes = Object.assign({}, commonPropTypes.createCommon());\nDialogFooter.handledProps = Object.keys(DialogFooter.propTypes);\nDialogFooter.create = createShorthandFactory({\n  Component: DialogFooter,\n  mappedProp: 'content'\n});\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\n\nexport default withSafeTypeForAs(DialogFooter);","map":{"version":3,"sources":["components/Dialog/DialogFooter.tsx"],"names":["dialogFooterClassName","DialogFooter","context","React","setStart","setEnd","useTelemetry","children","content","className","design","styles","variables","accessibility","props","ElementType","getElementType","unhandledProps","useUnhandledProps","getA11yProps","useAccessibility","debugName","rtl","classes","useStyles","mapPropsToInlineStyles","element","root","childrenExist","commonPropTypes","Object","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import * as React from 'react';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\n\nimport { WithAsProp, withSafeTypeForAs, FluentComponentStaticProps, ProviderContextPrepared } from '../../types';\nimport { useTelemetry, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface DialogFooterProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\nexport const dialogFooterClassName = 'ui-dialog__footer';\n\nexport type DialogFooterStylesProps = never;\n\nexport const DialogFooter: React.FC<WithAsProp<DialogFooterProps>> &\n  FluentComponentStaticProps<DialogFooterProps> = props => {\n  const context: ProviderContextPrepared = React.useContext(ThemeContext);\n  const { setStart, setEnd } = useTelemetry(DialogFooter.displayName, context.telemetry);\n  setStart();\n  const { children, content, className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DialogFooter.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: DialogFooter.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<DialogFooterStylesProps>(DialogFooter.displayName, {\n    className: dialogFooterClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const element = (\n    <ElementType {...getA11yProps('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDialogFooter.displayName = 'DialogFooter';\n\nDialogFooter.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nDialogFooter.handledProps = Object.keys(DialogFooter.propTypes) as any;\n\nDialogFooter.create = createShorthandFactory({ Component: DialogFooter, mappedProp: 'content' });\n\n/**\n * A DialogFooter represents footer content in Dialog, usually shows dialog actions.\n */\nexport default withSafeTypeForAs<typeof DialogFooter, DialogFooterProps>(DialogFooter);\n"]},"metadata":{},"sourceType":"module"}