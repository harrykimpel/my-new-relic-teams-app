{"ast":null,"code":"import * as customPropTypes from '@fluentui/react-proptypes'; // @ts-ignore\n\nimport { ThemeContext } from 'react-fela';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n/**\n * The Design component provides a theme safe subset of CSS for designing layouts.\n */\n\nfunction Design(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var context = React.useContext(ThemeContext);\n  var getConfig = React.useCallback(function () {\n    return config;\n  }, [config]); // Heads Up! Keep in sync with renderComponent.tsx\n\n  var styleParam = {\n    displayName: Design.displayName,\n    disableAnimations: context.disableAnimations,\n    theme: {\n      direction: context.rtl ? 'rtl' : 'ltr'\n    },\n    sanitizeCss: context.performance.enableSanitizeCssPlugin\n  };\n  var className = context.renderer.renderRule(getConfig, styleParam);\n  return children({\n    className: className\n  });\n}\n\nDesign.displayName = 'Design';\nDesign.propTypes = {\n  children: PropTypes.func.isRequired,\n  config: customPropTypes.design.isRequired\n};\nexport default Design;","map":{"version":3,"sources":["components/Design/Design.tsx"],"names":["config","children","context","React","getConfig","styleParam","displayName","Design","disableAnimations","theme","direction","sanitizeCss","enableSanitizeCssPlugin","className","PropTypes","customPropTypes","isRequired"],"mappings":"AACA,OAAO,KAAP,eAAA,MAAA,2BAAA,C,CACA;;AACA,SAAA,YAAA,QAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AAYA;;;;AAGA,SAAA,MAAA,CAAA,IAAA,EAAmD;AAAA,MAApBA,MAAoB,GAAA,IAAA,CAApBA,MAAoB;AAAA,MAAZC,QAAY,GAAA,IAAA,CAAZA,QAAY;AACjD,MAAMC,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,YAAgBA,CAAhB;AACA,MAAMC,SAAS,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAA;AAAA,WAAA,MAAA;AAAlB,GAAA,EAAgC,CAFD,MAEC,CAAhC,CAAlB,CAFiD,CAIjD;;AACA,MAAMC,UAAyB,GAAG;AAChCC,IAAAA,WAAW,EAAEC,MAAM,CADa,WAAA;AAEhCC,IAAAA,iBAAiB,EAAEN,OAAO,CAFM,iBAAA;AAGhCO,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAER,OAAO,CAAPA,GAAAA,GAAAA,KAAAA,GAAsB;AAAnC,KAHyB;AAIhCS,IAAAA,WAAW,EAAET,OAAO,CAAPA,WAAAA,CAAoBU;AAJD,GAAlC;AAOA,MAAMC,SAAS,GAAGX,OAAO,CAAPA,QAAAA,CAAAA,UAAAA,CAAAA,SAAAA,EAAlB,UAAkBA,CAAlB;AAEA,SAAOD,QAAQ,CAAC;AAAEY,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAf;AACD;;AAEDN,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AAEAA,MAAM,CAANA,SAAAA,GAAmB;AACjBN,EAAAA,QAAQ,EAAEa,SAAS,CAATA,IAAAA,CADO,UAAA;AAGjBd,EAAAA,MAAM,EAAEe,eAAe,CAAfA,MAAAA,CAAuBC;AAHd,CAAnBT;AAMA,eAAA,MAAA","sourcesContent":["import { ComponentDesignProp, RendererParam } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n// @ts-ignore\nimport { ThemeContext } from 'react-fela';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { ProviderContextPrepared, ReactChildren } from '../../types';\n\nexport type DesignProps = {\n  /** A render function that receives the generated className as its only argument */\n  children: ({ className: string }) => ReactChildren;\n\n  /** Design config takes a limited set of layout and position CSS properties. */\n  config: ComponentDesignProp;\n};\n\n/**\n * The Design component provides a theme safe subset of CSS for designing layouts.\n */\nfunction Design<DesignProps>({ config, children }) {\n  const context = React.useContext<ProviderContextPrepared>(ThemeContext);\n  const getConfig = React.useCallback(() => config, [config]);\n\n  // Heads Up! Keep in sync with renderComponent.tsx\n  const styleParam: RendererParam = {\n    displayName: Design.displayName,\n    disableAnimations: context.disableAnimations,\n    theme: { direction: context.rtl ? 'rtl' : 'ltr' },\n    sanitizeCss: context.performance.enableSanitizeCssPlugin,\n  };\n\n  const className = context.renderer.renderRule(getConfig, styleParam);\n\n  return children({ className });\n}\n\nDesign.displayName = 'Design';\n\nDesign.propTypes = {\n  children: PropTypes.func.isRequired,\n\n  config: customPropTypes.design.isRequired,\n};\n\nexport default Design;\n"]},"metadata":{},"sourceType":"module"}