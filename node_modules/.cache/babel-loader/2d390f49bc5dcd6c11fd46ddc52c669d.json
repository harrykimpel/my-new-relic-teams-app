{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponent, childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport FormField from './FormField';\nexport var formClassName = 'ui-form';\n\nvar Form = /*#__PURE__*/function (_UIComponent) {\n  _inherits(Form, _UIComponent);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n      // method.\n\n      if (!action) _invoke(e, 'preventDefault');\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFields\", function () {\n      var fields = _this.props.fields;\n      return _map(fields, function (field) {\n        return FormField.create(field);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var accessibility = _ref.accessibility,\n          ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          unhandledProps = _ref.unhandledProps;\n      var _this$props = this.props,\n          action = _this$props.action,\n          children = _this$props.children;\n      return React.createElement(ElementType, _extends({\n        className: classes.root,\n        action: action,\n        onSubmit: this.handleSubmit\n      }, rtlTextContainer.getAttributes({\n        forElements: [children]\n      }), accessibility.attributes.root, unhandledProps), childrenExist(children) ? children : this.renderFields());\n    }\n  }]);\n\n  return Form;\n}(UIComponent);\n/**\n * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.\n */\n\n\n_defineProperty(Form, \"create\", void 0);\n\n_defineProperty(Form, \"displayName\", 'Form');\n\n_defineProperty(Form, \"deprecated_className\", formClassName);\n\n_defineProperty(Form, \"propTypes\", Object.assign({}, commonPropTypes.createCommon({\n  content: false\n}), {\n  action: PropTypes.string,\n  fields: customPropTypes.collectionShorthand,\n  onSubmit: PropTypes.func\n}));\n\n_defineProperty(Form, \"defaultProps\", {\n  as: 'form'\n});\n\n_defineProperty(Form, \"Field\", FormField);\n\nexport default withSafeTypeForAs(Form);","map":{"version":3,"sources":["components/Form/Form.tsx"],"names":["formClassName","Form","UIComponent","content","action","PropTypes","string","fields","customPropTypes","collectionShorthand","onSubmit","func","as","FormField","accessibility","ElementType","classes","unhandledProps","children","handleSubmit","forElements","childrenExist","args","withSafeTypeForAs"],"mappings":";;;;;;;;;;AACA,OAAO,KAAP,eAAA,MAAA,2BAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAGA,SAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,QAAA,aAAA;AASA,SAAA,iBAAA,QAAA,aAAA;AACA,OAAA,SAAA,MAAA,aAAA;AAsBA,OAAO,IAAMA,aAAa,GAAnB,SAAA;;IAEDC,I;;;;;;;;;;;;;;;;mEAsCW,UAAA,CAAA,EAAgB;AAAA,UACrBG,MADqB,GACV,KAAA,CADU,KACV,CADU,MAAA,CAAA,CAG7B;AACA;;AACA,UAAI,CAAJ,MAAA,EAAa,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA;;AALgB,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAATkB,IAAS,GAAA,IAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAATA,QAAAA,IAAS,CAAA,KAAA,GAAA,CAAA,CAATA,GAAS,SAAA,CAAA,KAAA,CAATA;AAAS;;AAM7B,MAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAS,KAAA,CAAT,KAAA,EAAA,UAAA,EAAA,CAAA,EAAoC,KAAA,CAApC,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA;;;mEAGa,YAAM;AAAA,UACXf,MADW,GACA,KAAA,CADA,KACA,CADA,MAAA;AAEnB,aAAO,IAAA,CAAA,MAAA,EAAc,UAAA,KAAA,EAAK;AAAA,eAAIM,SAAS,CAATA,MAAAA,CAAJ,KAAIA,CAAJ;AAA1B,OAAO,CAAP;;;;;;;;0CA3BwF;AAAA,UAAxEC,aAAwE,GAAA,IAAA,CAAxEA,aAAwE;AAAA,UAAzDC,WAAyD,GAAA,IAAA,CAAzDA,WAAyD;AAAA,UAA5CC,OAA4C,GAAA,IAAA,CAA5CA,OAA4C;AAAA,UAAnCC,cAAmC,GAAA,IAAA,CAAnCA,cAAmC;AAAA,UAAA,WAAA,GAC3D,KAD2D,KAAA;AAAA,UAChFb,MADgF,GAAA,WAAA,CAAA,MAAA;AAAA,UACxEc,QADwE,GAAA,WAAA,CAAA,QAAA;AAExF,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,QAAA,SAAS,EAAEF,OAAO,CADpB,IAAA;AAEE,QAAA,MAAM,EAFR,MAAA;AAGE,QAAA,QAAQ,EAAE,KAAKG;AAHjB,OAAA,EAIM,gBAAgB,CAAhB,aAAA,CAA+B;AAAEC,QAAAA,WAAW,EAAE,CAAA,QAAA;AAAf,OAA/B,CAJN,EAKMN,aAAa,CAAbA,UAAAA,CALN,IAAA,EAAA,cAAA,CAAA,EAQGO,aAAa,CAAbA,QAAa,CAAbA,GAAAA,QAAAA,GAAqC,KAT1C,YAS0C,EARxC,CADF;AAYD;;;;EApCgBnB,W;AAqDnB;;;;;gBArDMD,I;;gBAAAA,I,iBAGiB,M;;gBAHjBA,I,0BAK0BD,a;;gBAL1BC,I,iCAQC,eAAe,CAAf,YAAA,CAA6B;AAC9BE,EAAAA,OAAO,EAAE;AADqB,CAA7B,C;AAGHC,EAAAA,MAAM,EAAEC,SAAS,CAACC,M;AAClBC,EAAAA,MAAM,EAAEC,eAAe,CAACC,mB;AACxBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM;;;gBAblBV,I,kBAgBkB;AACpBW,EAAAA,EAAE,EAAE;AADgB,C;;gBAhBlBX,I,WAoBWY,S;;AAoCjB,eAAeU,iBAAiB,CAAhC,IAAgC,CAAhC","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  UIComponent,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, WithAsProp, ShorthandCollection, withSafeTypeForAs } from '../../types';\nimport FormField, { FormFieldProps } from './FormField';\n\nexport interface FormProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility;\n\n  /** The HTML form action. */\n  action?: string;\n\n  /** Shorthand array of props for the Form.Fields inside the Form. */\n  fields?: ShorthandCollection<FormFieldProps>;\n\n  /**\n   * The HTML form submit handler.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onSubmit?: ComponentEventHandler<FormProps>;\n}\n\nexport const formClassName = 'ui-form';\n\nclass Form extends UIComponent<WithAsProp<FormProps>, any> {\n  static create: ShorthandFactory<FormProps>;\n\n  static displayName = 'Form';\n\n  static deprecated_className = formClassName;\n\n  static propTypes = {\n    ...commonPropTypes.createCommon({\n      content: false,\n    }),\n    action: PropTypes.string,\n    fields: customPropTypes.collectionShorthand,\n    onSubmit: PropTypes.func,\n  };\n\n  static defaultProps = {\n    as: 'form',\n  };\n\n  static Field = FormField;\n\n  renderComponent({ accessibility, ElementType, classes, unhandledProps }): React.ReactNode {\n    const { action, children } = this.props;\n    return (\n      <ElementType\n        className={classes.root}\n        action={action}\n        onSubmit={this.handleSubmit}\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...accessibility.attributes.root}\n        {...unhandledProps}\n      >\n        {childrenExist(children) ? children : this.renderFields()}\n      </ElementType>\n    );\n  }\n\n  handleSubmit = (e, ...args) => {\n    const { action } = this.props;\n\n    // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n    // method.\n    if (!action) _.invoke(e, 'preventDefault');\n    _.invoke(this.props, 'onSubmit', e, this.props, ...args);\n  };\n\n  renderFields = () => {\n    const { fields } = this.props;\n    return _.map(fields, field => FormField.create(field));\n  };\n}\n\n/**\n * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.\n */\nexport default withSafeTypeForAs<typeof Form, FormProps, 'form'>(Form);\n"]},"metadata":{},"sourceType":"module"}