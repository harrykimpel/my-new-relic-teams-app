{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as keyboardKey from 'keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n * Adds 'tabIndex' as '-1' if the title is a leaf node inside the tree.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\n\nvar hierarchicalTreeTitleBehavior = function hierarchicalTreeTitleBehavior(props) {\n  var _ref;\n\n  return {\n    attributes: {\n      root: Object.assign({}, !props.hasSubtree && (_ref = {\n        tabIndex: -1\n      }, _defineProperty(_ref, IS_FOCUSABLE_ATTRIBUTE, true), _defineProperty(_ref, \"role\", 'treeitem'), _ref))\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Enter\n          }, {\n            keyCode: keyboardKey.Spacebar\n          }]\n        }\n      }\n    }\n  };\n};\n\nexport default hierarchicalTreeTitleBehavior;","map":{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeTitleBehavior.ts"],"names":["hierarchicalTreeTitleBehavior","attributes","root","props","tabIndex","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","Spacebar"],"mappings":";AAAA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAGA;;;;;;;;;AAQA,IAAMA,6BAA+D,GAAG,SAAlEA,6BAAkE,CAAA,KAAA,EAAK;AAAA,MAAA,IAAA;;AAAA,SAAK;AAChFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,CAACC,KAAK,CAAN,UAAA,KAAA,IAAA,GAAA;AACFC,QAAAA,QAAQ,EAAE,CAAC;AADT,OAAA,EAAA,eAAA,CAAA,IAAA,EAAA,sBAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EADF,IACE,CADF;AADM,KADoE;AAUhFC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAE;AACJI,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD,EAAiC;AAAEF,YAAAA,OAAO,EAAEC,WAAW,CAACE;AAAvB,WAAjC;AADL;AADV;AADI;AAVoE,GAAL;AAA7E,CAAA;;AAmBA,eAAA,6BAAA","sourcesContent":["import * as keyboardKey from 'keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n * Adds 'tabIndex' as '-1' if the title is a leaf node inside the tree.\n *\n * @specification\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nconst hierarchicalTreeTitleBehavior: Accessibility<TreeTitleBehavior> = props => ({\n  attributes: {\n    root: {\n      ...(!props.hasSubtree && {\n        tabIndex: -1,\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        role: 'treeitem',\n      }),\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default hierarchicalTreeTitleBehavior;\n\ntype TreeTitleBehavior = {\n  /** Indicated if tree title has a subtree */\n  hasSubtree?: boolean;\n  /** If subtree is opened. */\n  open?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}