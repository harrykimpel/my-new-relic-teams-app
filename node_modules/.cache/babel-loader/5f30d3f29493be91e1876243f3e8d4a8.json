{"ast":null,"code":"import _toNumber from \"lodash/toNumber\";\nimport _endsWith from \"lodash/endsWith\";\nimport _isNil from \"lodash/isNil\";\n\nvar convertCssTimeToNumber = function convertCssTimeToNumber(time) {\n  if (_isNil(time) || time === 'initial' || time === 'inherit') {\n    return 0;\n  }\n\n  if (!_endsWith(time, 'ms') && !_endsWith(time, 's')) {\n    return 0;\n  }\n\n  var multiplier = _endsWith(time, 'ms') ? 1 : 1000;\n  var stringNumber = _endsWith(time, 'ms') ? time.substring(0, time.length - 2) : time.substring(0, time.length - 1);\n  return isNaN(_toNumber(stringNumber)) ? 0 : multiplier * _toNumber(stringNumber);\n};\n\nexport default convertCssTimeToNumber;","map":{"version":3,"sources":["styles/convertCssTimeToNumber.ts"],"names":["convertCssTimeToNumber","time","multiplier","stringNumber","isNaN"],"mappings":";;;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,IAAA,EAAsC;AACnE,MAAI,MAAA,CAAA,IAAA,CAAA,IAAiBC,IAAI,KAArB,SAAA,IAAuCA,IAAI,KAA/C,SAAA,EAA+D;AAC7D,WAAA,CAAA;AACD;;AAED,MAAI,CAAC,SAAA,CAAA,IAAA,EAAD,IAAC,CAAD,IAA2B,CAAC,SAAA,CAAA,IAAA,EAAhC,GAAgC,CAAhC,EAAuD;AACrD,WAAA,CAAA;AACD;;AAED,MAAMC,UAAU,GAAG,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAAA,GAAnB,IAAA;AACA,MAAMC,YAAY,GAAG,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAyBF,IAAI,CAAJA,SAAAA,CAAAA,CAAAA,EAAkBA,IAAI,CAAJA,MAAAA,GAA3C,CAAyBA,CAAzB,GAA8DA,IAAI,CAAJA,SAAAA,CAAAA,CAAAA,EAAkBA,IAAI,CAAJA,MAAAA,GAArG,CAAmFA,CAAnF;AAEA,SAAOG,KAAK,CAAC,SAAA,CAANA,YAAM,CAAD,CAALA,GAAAA,CAAAA,GAAsCF,UAAU,GAAG,SAAA,CAA1D,YAA0D,CAA1D;AAZF,CAAA;;AAeA,eAAA,sBAAA","sourcesContent":["import * as _ from 'lodash';\n\nconst convertCssTimeToNumber = (time: string | undefined): number => {\n  if (_.isNil(time) || time === 'initial' || time === 'inherit') {\n    return 0;\n  }\n\n  if (!_.endsWith(time, 'ms') && !_.endsWith(time, 's')) {\n    return 0;\n  }\n\n  const multiplier = _.endsWith(time, 'ms') ? 1 : 1000;\n  const stringNumber = _.endsWith(time, 'ms') ? time.substring(0, time.length - 2) : time.substring(0, time.length - 1);\n\n  return isNaN(_.toNumber(stringNumber)) ? 0 : multiplier * _.toNumber(stringNumber);\n};\n\nexport default convertCssTimeToNumber;\n"]},"metadata":{},"sourceType":"module"}