{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as keyboardKey from 'keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n/**\n * @specification\n * Adds role='checkbox'. This allows screen readers to handle the component as a checkbox button.\n * Adds attribute 'aria-checked=true' based on the property 'checked'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\n\nvar checkboxBehavior = function checkboxBehavior(props) {\n  return {\n    attributes: {\n      root: _defineProperty({\n        'aria-checked': !!props.checked,\n        'aria-disabled': props.disabled,\n        role: 'checkbox',\n        tabIndex: 0\n      }, IS_FOCUSABLE_ATTRIBUTE, true)\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Spacebar\n          }]\n        }\n      }\n    }\n  };\n};\n\nexport default checkboxBehavior;","map":{"version":3,"sources":["behaviors/Checkbox/checkboxBehavior.ts"],"names":["checkboxBehavior","attributes","root","props","role","tabIndex","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Spacebar"],"mappings":";AAAA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA,SAAA,sBAAA,QAAA,kBAAA;AAEA;;;;;;;;;AAQA,IAAMA,gBAAsD,GAAG,SAAzDA,gBAAyD,CAAA,KAAA,EAAK;AAAA,SAAK;AACvEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,eAAA,CAAA;AACF,wBAAgB,CAAC,CAACC,KAAK,CADrB,OAAA;AAEF,yBAAiBA,KAAK,CAFpB,QAAA;AAGFC,QAAAA,IAAI,EAHF,UAAA;AAIFC,QAAAA,QAAQ,EAAE;AAJR,OAAA,EAAA,sBAAA,EAAA,IAAA;AADM,KAD2D;AAUvEC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD;AADL;AADV;AADI;AAV2D,GAAL;AAApE,CAAA;;AAmBA,eAAA,gBAAA","sourcesContent":["import * as keyboardKey from 'keyboard-key';\nimport { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n\n/**\n * @specification\n * Adds role='checkbox'. This allows screen readers to handle the component as a checkbox button.\n * Adds attribute 'aria-checked=true' based on the property 'checked'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\nconst checkboxBehavior: Accessibility<CheckboxBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-checked': !!props.checked,\n      'aria-disabled': props.disabled,\n      role: 'checkbox',\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Spacebar }],\n      },\n    },\n  },\n});\n\nexport default checkboxBehavior;\n\nexport type CheckboxBehaviorProps = {\n  /** Whether or not item is checked. */\n  checked?: boolean;\n  /** If the checkbox is in disabled state. */\n  disabled?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}