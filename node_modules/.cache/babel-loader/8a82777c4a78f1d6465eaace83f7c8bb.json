{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport { callable } from '@fluentui/styles';\n/**\n * Fela plugin for invoking keyframes with params. The keyframes, defined in the animationName prop,\n * are called with the params object, if defined in the animationName prop.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\n\nexport default (function () {\n  var invokeKeyframes = function invokeKeyframes(styles) {\n    return Object.keys(styles).reduce(function (acc, cssPropertyName) {\n      var cssPropertyValue = styles[cssPropertyName];\n\n      if (_isPlainObject(cssPropertyValue)) {\n        if (cssPropertyName === 'animationName') {\n          if (cssPropertyValue.keyframe) {\n            styles[cssPropertyName] = callable(cssPropertyValue.keyframe)(cssPropertyValue.params || {});\n          }\n\n          return Object.assign({}, acc, _defineProperty({}, cssPropertyName, styles[cssPropertyName]));\n        }\n\n        return Object.assign({}, acc, _defineProperty({}, cssPropertyName, invokeKeyframes(cssPropertyValue)));\n      }\n\n      return Object.assign({}, acc, _defineProperty({}, cssPropertyName, styles[cssPropertyName]));\n    }, {});\n  };\n\n  return invokeKeyframes;\n});","map":{"version":3,"sources":["utils/felaInvokeKeyframesPlugin.ts"],"names":["invokeKeyframes","cssPropertyValue","styles","cssPropertyName","callable"],"mappings":";;AAAA,SAAA,QAAA,QAAA,kBAAA;AAGA;;;;;;;;AAOA,gBAAe,YAAM;AACnB,MAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,MAAA,EAAoB;AAC1C,WAAO,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,MAAA,CAA2B,UAAA,GAAA,EAAA,eAAA,EAA0B;AAC1D,UAAMC,gBAAgB,GAAGC,MAAM,CAA/B,eAA+B,CAA/B;;AAEA,UAAI,cAAA,CAAJ,gBAAI,CAAJ,EAAuC;AACrC,YAAIC,eAAe,KAAnB,eAAA,EAAyC;AACvC,cAAIF,gBAAgB,CAApB,QAAA,EAA+B;AAC7BC,YAAAA,MAAM,CAANA,eAAM,CAANA,GAA0BE,QAAQ,CAACH,gBAAgB,CAAzBG,QAAQ,CAARA,CAAoCH,gBAAgB,CAAhBA,MAAAA,IAA9DC,EAA0BE,CAA1BF;AACD;;AAED,iBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,EAEqBA,MAAM,CAF3B,eAE2B,CAF3B,CAAA,CAAA;AAID;;AAED,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,EAEqBF,eAAe,CAFpC,gBAEoC,CAFpC,CAAA,CAAA;AAID;;AAED,aAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,EAAoCE,MAAM,CAA1C,eAA0C,CAA1C,CAAA,CAAA;AArBK,KAAA,EAAP,EAAO,CAAP;AADF,GAAA;;AA0BA,SAAA,eAAA;AA3BF,CAAA","sourcesContent":["import { callable } from '@fluentui/styles';\nimport * as _ from 'lodash';\n\n/**\n * Fela plugin for invoking keyframes with params. The keyframes, defined in the animationName prop,\n * are called with the params object, if defined in the animationName prop.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\nexport default () => {\n  const invokeKeyframes = (styles: Object) => {\n    return Object.keys(styles).reduce((acc, cssPropertyName) => {\n      const cssPropertyValue = styles[cssPropertyName];\n\n      if (_.isPlainObject(cssPropertyValue)) {\n        if (cssPropertyName === 'animationName') {\n          if (cssPropertyValue.keyframe) {\n            styles[cssPropertyName] = callable(cssPropertyValue.keyframe)(cssPropertyValue.params || {});\n          }\n\n          return {\n            ...acc,\n            [cssPropertyName]: styles[cssPropertyName],\n          };\n        }\n\n        return {\n          ...acc,\n          [cssPropertyName]: invokeKeyframes(cssPropertyValue),\n        };\n      }\n\n      return { ...acc, [cssPropertyName]: styles[cssPropertyName] };\n    }, {});\n  };\n\n  return invokeKeyframes;\n};\n"]},"metadata":{},"sourceType":"module"}