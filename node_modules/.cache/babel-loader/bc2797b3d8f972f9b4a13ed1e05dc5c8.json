{"ast":null,"code":"/**\n * @description\n * Behavior for a card component - semantic grouping of objects\n * @specification\n * Adds role='group'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n */\nvar cardBehavior = function cardBehavior(props) {\n  return {\n    attributes: {\n      root: {\n        role: 'group',\n        'aria-disabled': props.disabled\n      }\n    }\n  };\n};\n\nexport default cardBehavior;","map":{"version":3,"sources":["behaviors/Card/cardBehavior.ts"],"names":["cardBehavior","attributes","root","role","props","disabled"],"mappings":"AACA;;;;;;;AAOA,IAAMA,YAA8C,GAAG,SAAjDA,YAAiD,CAAA,KAAA,EAAK;AAAA,SAAK;AAC/DC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EADA,OAAA;AAEJ,yBAAiBC,KAAK,CAACC;AAFnB;AADI;AADmD,GAAL;AAA5D,CAAA;;AASA,eAAA,YAAA","sourcesContent":["import { Accessibility } from '../../types';\n/**\n * @description\n * Behavior for a card component - semantic grouping of objects\n * @specification\n * Adds role='group'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n */\nconst cardBehavior: Accessibility<CardBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'group',\n      'aria-disabled': props.disabled,\n    },\n  },\n});\n\nexport default cardBehavior;\n\nexport type CardBehaviorProps = {\n  /** A card can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}