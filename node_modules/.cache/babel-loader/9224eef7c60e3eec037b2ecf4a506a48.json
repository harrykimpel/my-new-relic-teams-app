{"ast":null,"code":"import _merge from \"lodash/merge\";\nimport treeTitleBehavior from './treeTitleBehavior';\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n */\n\nvar treeTitleAsListItemTitleBehavior = function treeTitleAsListItemTitleBehavior(props) {\n  var behavior = treeTitleBehavior(props);\n  return _merge(behavior, {\n    attributes: {\n      root: Object.assign({}, !props.hasSubtree && {\n        role: 'listitem'\n      })\n    }\n  });\n};\n\nexport default treeTitleAsListItemTitleBehavior;","map":{"version":3,"sources":["behaviors/Tree/treeTitleAsListItemTitleBehavior.ts"],"names":["treeTitleAsListItemTitleBehavior","behavior","treeTitleBehavior","attributes","root","props","role"],"mappings":";AAGA,OAAA,iBAAA,MAAA,qBAAA;AAEA;;;;;AAIA,IAAMA,gCAAkE,GAAG,SAArEA,gCAAqE,CAAA,KAAA,EAAS;AAClF,MAAMC,QAAQ,GAAGC,iBAAiB,CAAlC,KAAkC,CAAlC;AACA,SAAO,MAAA,CAAA,QAAA,EAAkB;AACvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,CAACC,KAAK,CAAN,UAAA,IAAqB;AACvBC,QAAAA,IAAI,EAAE;AADiB,OADvB;AADM;AADW,GAAlB,CAAP;AAFF,CAAA;;AAaA,eAAA,gCAAA","sourcesContent":["import * as _ from 'lodash';\n\nimport { Accessibility } from '../../types';\nimport treeTitleBehavior from './treeTitleBehavior';\n\n/**\n * @description\n * Adds role 'treeitem' if the title is a leaf node inside the tree.\n */\nconst treeTitleAsListItemTitleBehavior: Accessibility<TreeTitleBehavior> = props => {\n  const behavior = treeTitleBehavior(props);\n  return _.merge(behavior, {\n    attributes: {\n      root: {\n        ...(!props.hasSubtree && {\n          role: 'listitem',\n        }),\n      },\n    },\n  });\n};\n\nexport default treeTitleAsListItemTitleBehavior;\n\ntype TreeTitleBehavior = {\n  /** Indicates whether `TreeTitle` has a subtree. */\n  hasSubtree?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}