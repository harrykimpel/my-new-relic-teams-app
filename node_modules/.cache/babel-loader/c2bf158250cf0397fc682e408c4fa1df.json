{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\n/**\n * @specification\n * Adds role='gridcell'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in bidirectional direction.\n * Triggers 'focusCell' action with 'Escape' on 'root'.\n */\n\nvar gridCellMultipleFocusableBehavior = function gridCellMultipleFocusableBehavior(props) {\n  return {\n    attributes: {\n      root: _defineProperty({\n        role: 'gridcell'\n      }, IS_FOCUSABLE_ATTRIBUTE, true)\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.bidirectional\n      }\n    },\n    keyActions: {\n      root: {\n        focusCell: {\n          keyCombinations: [{\n            keyCode: keyboardKey.Escape\n          }]\n        }\n      }\n    }\n  };\n};\n\nexport default gridCellMultipleFocusableBehavior;","map":{"version":3,"sources":["behaviors/Table/gridCellMultipleFocusableBehavior.ts"],"names":["gridCellMultipleFocusableBehavior","attributes","root","role","focusZone","props","direction","FocusZoneDirection","bidirectional","keyActions","focusCell","keyCombinations","keyCode","keyboardKey","Escape"],"mappings":";AACA,SAAA,sBAAA,QAAA,kBAAA;AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,OAAO,KAAP,WAAA,MAAA,cAAA;AAEA;;;;;;;;AAOA,IAAMA,iCAAgD,GAAG,SAAnDA,iCAAmD,CAAA,KAAA,EAAK;AAAA,SAAK;AACjEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,eAAA,CAAA;AACFC,QAAAA,IAAI,EAAE;AADJ,OAAA,EAAA,sBAAA,EAAA,IAAA;AADM,KADqD;AAOjEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AADzB;AADE,KAPsD;AAYjEC,IAAAA,UAAU,EAAE;AACVP,MAAAA,IAAI,EAAE;AACJQ,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,WAAW,CAACC;AAAvB,WAAD;AADR;AADP;AADI;AAZqD,GAAL;AAA9D,CAAA;;AAqBA,eAAA,iCAAA","sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport * as keyboardKey from 'keyboard-key';\n\n/**\n * @specification\n * Adds role='gridcell'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in bidirectional direction.\n * Triggers 'focusCell' action with 'Escape' on 'root'.\n */\nconst gridCellMultipleFocusableBehavior: Accessibility = props => ({\n  attributes: {\n    root: {\n      role: 'gridcell',\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.bidirectional,\n    },\n  },\n  keyActions: {\n    root: {\n      focusCell: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport default gridCellMultipleFocusableBehavior;\n"]},"metadata":{},"sourceType":"module"}