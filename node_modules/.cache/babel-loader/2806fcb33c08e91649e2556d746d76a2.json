{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { pxToRem } from '../../../../utils';\nimport { embedSlotClassNames } from '../../../../components/Embed/Embed';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport playIndicatorUrl from './playIndicatorUrl';\nimport pauseIndicatorUrl from './pauseIndicatorUrl';\nexport default {\n  root: function root(_ref) {\n    var p = _ref.props,\n        v = _ref.variables,\n        siteVariables = _ref.theme.siteVariables;\n    var borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables\n    });\n    return Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      position: 'relative',\n      cursor: 'pointer',\n      width: v.width,\n      height: v.height || 'auto',\n      outline: 0\n    }, borderFocusStyles[':focus'], {\n      ':focus-visible': _defineProperty({}, \"& .\".concat(embedSlotClassNames.control), Object.assign({\n        borderColor: v.focusBorderColor,\n        opacity: 1\n      }, borderFocusStyles[':focus-visible'])),\n      ':hover': _defineProperty({}, \"& .\".concat(embedSlotClassNames.control), {\n        opacity: 1,\n        zIndex: v.zIndex\n      })\n    });\n  },\n  control: function control(_ref2) {\n    var p = _ref2.props,\n        v = _ref2.variables;\n    return Object.assign({\n      background: \"0 no-repeat \".concat(v.controlBackgroundColor),\n      backgroundPositionX: pxToRem(3),\n      width: pxToRem(48),\n      height: pxToRem(48),\n      color: v.controlColor,\n      padding: pxToRem(4),\n      borderRadius: '50%',\n      backgroundImage: playIndicatorUrl(v.controlColor),\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center'\n    }, p.active && {\n      backgroundImage: pauseIndicatorUrl(v.controlColor)\n    }, {\n      opacity: p.active ? 0 : 1,\n      pointerEvents: 'none',\n      transition: 'opacity .22s ease-in-out',\n      left: '50%',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    });\n  },\n  iframe: function iframe(_ref3) {\n    var p = _ref3.props;\n    return Object.assign({\n      display: 'block'\n    }, !p.iframeLoaded && {\n      display: 'none'\n    });\n  }\n};","map":{"version":3,"sources":["themes/teams/components/Embed/embedStyles.ts"],"names":["root","props","p","variables","v","theme","siteVariables","borderFocusStyles","getBorderFocusStyles","display","verticalAlign","position","cursor","width","height","outline","embedSlotClassNames","borderColor","opacity","zIndex","control","background","backgroundPositionX","pxToRem","color","padding","borderRadius","backgroundImage","playIndicatorUrl","backgroundRepeat","backgroundPosition","pauseIndicatorUrl","pointerEvents","transition","left","top","transform","iframe"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { pxToRem } from '../../../../utils';\nimport { EmbedStylesProps, embedSlotClassNames } from '../../../../components/Embed/Embed';\nimport { EmbedVariables } from './embedVariables';\nimport getBorderFocusStyles from '../../getBorderFocusStyles';\nimport playIndicatorUrl from './playIndicatorUrl';\nimport pauseIndicatorUrl from './pauseIndicatorUrl';\n\nexport default {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({ variables: siteVariables });\n\n    return {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      position: 'relative',\n      cursor: 'pointer',\n      width: v.width,\n      height: v.height || 'auto',\n      outline: 0,\n\n      ...borderFocusStyles[':focus'],\n      ':focus-visible': {\n        [`& .${embedSlotClassNames.control}`]: {\n          borderColor: v.focusBorderColor,\n          opacity: 1,\n          ...borderFocusStyles[':focus-visible'],\n        },\n      },\n\n      ':hover': {\n        [`& .${embedSlotClassNames.control}`]: {\n          opacity: 1,\n          zIndex: v.zIndex,\n        },\n      },\n    };\n  },\n  control: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    background: `0 no-repeat ${v.controlBackgroundColor}`,\n    backgroundPositionX: pxToRem(3),\n    width: pxToRem(48),\n    height: pxToRem(48),\n    color: v.controlColor,\n\n    padding: pxToRem(4),\n    borderRadius: '50%',\n\n    backgroundImage: playIndicatorUrl(v.controlColor),\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n\n    ...(p.active && {\n      backgroundImage: pauseIndicatorUrl(v.controlColor),\n    }),\n\n    opacity: p.active ? 0 : 1,\n    pointerEvents: 'none',\n    transition: 'opacity .22s ease-in-out',\n\n    left: '50%',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n  }),\n  iframe: ({ props: p }): ICSSInJSStyle => ({\n    display: 'block',\n    ...(!p.iframeLoaded && { display: 'none' }),\n  }),\n} as ComponentSlotStylesPrepared<EmbedStylesProps, EmbedVariables>;\n"]},"metadata":{},"sourceType":"module"}