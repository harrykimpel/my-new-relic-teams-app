{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/** Checks that the passed object is a valid React ref object. */\n\nvar isRefObject = function isRefObject(ref) {\n  return (// https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665\n    ref !== null && _typeof(ref) === 'object' && ref.hasOwnProperty('current')\n  );\n};\n\nexport default isRefObject;","map":{"version":3,"sources":["isRefObject.ts"],"names":["isRefObject","ref"],"mappings":";AAEA;;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,GAAA,EAAA;AAAA,SAClB;AACAC,IAAAA,GAAG,KAAHA,IAAAA,IAAgB,OAAA,CAAA,GAAA,CAAA,KAAhBA,QAAAA,IAA2CA,GAAG,CAAHA,cAAAA,CAAAA,SAAAA;AAFzB;AAApB,CAAA;;AAIA,eAAA,WAAA","sourcesContent":["import * as React from 'react';\n\n/** Checks that the passed object is a valid React ref object. */\nconst isRefObject = (ref: any): ref is React.RefObject<any> =>\n  // https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665\n  ref !== null && typeof ref === 'object' && ref.hasOwnProperty('current');\n\nexport default isRefObject;\n"]},"metadata":{},"sourceType":"module"}