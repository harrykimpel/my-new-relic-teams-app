{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar animationProps = ['animation', 'animationName', 'animationDuration', 'animationTimingFunction', 'animationDelay', 'animationIterationCount', 'animationDirection', 'animationFillMode', 'animationPlayState'];\n/**\n * Fela plugin for disabling animations. The animations are disabled or not based on the\n * props' disableAnimations param. If the value of the prop is true, all animation related\n * styles are removed.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\n\nexport default (function () {\n  var disableAnimations = function disableAnimations(styles, type, renderer, props) {\n    if (props && props.disableAnimations && type === 'RULE') {\n      return Object.keys(styles).reduce(function (acc, cssPropertyName) {\n        var cssPropertyValue = styles[cssPropertyName];\n\n        if (animationProps.indexOf(cssPropertyName) !== -1) {\n          return acc;\n        }\n\n        if (_typeof(cssPropertyValue) === 'object') {\n          return Object.assign({}, acc, _defineProperty({}, cssPropertyName, disableAnimations(cssPropertyValue, type, renderer, props)));\n        }\n\n        return Object.assign({}, acc, _defineProperty({}, cssPropertyName, styles[cssPropertyName]));\n      }, {});\n    }\n\n    return styles;\n  };\n\n  return disableAnimations;\n});","map":{"version":3,"sources":["utils/felaDisableAnimationsPlugin.ts"],"names":["animationProps","disableAnimations","props","type","cssPropertyValue","styles"],"mappings":";;AAAA,IAAMA,cAAc,GAAG,CAAA,WAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,yBAAA,EAAA,gBAAA,EAAA,yBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAvB,oBAAuB,CAAvB;AAYA;;;;;;;;;AAQA,gBAAe,YAAM;AACnB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAA8C;AACtE,QAAIC,KAAK,IAAIA,KAAK,CAAdA,iBAAAA,IAAoCC,IAAI,KAA5C,MAAA,EAAyD;AACvD,aAAO,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,MAAA,CAA2B,UAAA,GAAA,EAAA,eAAA,EAA0B;AAC1D,YAAMC,gBAAgB,GAAGC,MAAM,CAA/B,eAA+B,CAA/B;;AAEA,YAAIL,cAAc,CAAdA,OAAAA,CAAAA,eAAAA,MAA4C,CAAhD,CAAA,EAAoD;AAClD,iBAAA,GAAA;AACD;;AAED,YAAI,OAAA,CAAA,gBAAA,CAAA,KAAJ,QAAA,EAA0C;AACxC,iBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,EAEqBC,iBAAiB,CAAA,gBAAA,EAAA,IAAA,EAAA,QAAA,EAFtC,KAEsC,CAFtC,CAAA,CAAA;AAID;;AAED,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAAA,eAAA,EAAoCI,MAAM,CAA1C,eAA0C,CAA1C,CAAA,CAAA;AAdK,OAAA,EAAP,EAAO,CAAP;AAgBD;;AACD,WAAA,MAAA;AAnBF,GAAA;;AAsBA,SAAA,iBAAA;AAvBF,CAAA","sourcesContent":["const animationProps = [\n  'animation',\n  'animationName',\n  'animationDuration',\n  'animationTimingFunction',\n  'animationDelay',\n  'animationIterationCount',\n  'animationDirection',\n  'animationFillMode',\n  'animationPlayState',\n];\n\n/**\n * Fela plugin for disabling animations. The animations are disabled or not based on the\n * props' disableAnimations param. If the value of the prop is true, all animation related\n * styles are removed.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\nexport default () => {\n  const disableAnimations = (styles: Object, type?, renderer?, props?) => {\n    if (props && props.disableAnimations && type === 'RULE') {\n      return Object.keys(styles).reduce((acc, cssPropertyName) => {\n        const cssPropertyValue = styles[cssPropertyName];\n\n        if (animationProps.indexOf(cssPropertyName) !== -1) {\n          return acc;\n        }\n\n        if (typeof cssPropertyValue === 'object') {\n          return {\n            ...acc,\n            [cssPropertyName]: disableAnimations(cssPropertyValue, type, renderer, props),\n          };\n        }\n\n        return { ...acc, [cssPropertyName]: styles[cssPropertyName] };\n      }, {});\n    }\n    return styles;\n  };\n\n  return disableAnimations;\n};\n"]},"metadata":{},"sourceType":"module"}