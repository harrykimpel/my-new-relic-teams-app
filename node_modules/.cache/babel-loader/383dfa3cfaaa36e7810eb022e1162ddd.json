{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _noop from \"lodash/noop\";\nimport _isBoolean from \"lodash/isBoolean\";\nimport _isFunction from \"lodash/isFunction\";\nimport _forEach from \"lodash/forEach\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport { getElementType, useUnhandledProps, Telemetry, unstable_getStyles, useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport { mergeSiteVariables } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // @ts-ignore\n\nimport { RendererProvider, ThemeProvider, ThemeContext } from 'react-fela';\nimport { setUpWhatInput, tryCleanupWhatInput } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nimport mergeContexts from '../../utils/mergeProviderContexts';\nimport ProviderConsumer from './ProviderConsumer';\nimport usePortalBox, { PortalBoxContext } from './usePortalBox';\n\nvar renderFontFaces = function renderFontFaces(renderer, theme) {\n  if (!theme.fontFaces) {\n    return;\n  }\n\n  var renderFontObject = function renderFontObject(font) {\n    if (!_isPlainObject(font)) {\n      throw new Error(\"fontFaces must be objects, got: \".concat(_typeof(font)));\n    }\n\n    renderer.renderFont(font.name, font.paths, font.props);\n  };\n\n  theme.fontFaces.forEach(function (font) {\n    renderFontObject(font);\n  });\n};\n\nvar renderStaticStyles = function renderStaticStyles(renderer, theme, siteVariables) {\n  if (!theme.staticStyles) {\n    return;\n  }\n\n  var renderObject = function renderObject(object) {\n    _forEach(object, function (style, selector) {\n      renderer.renderStatic(style, selector);\n    });\n  };\n\n  theme.staticStyles.forEach(function (staticStyle) {\n    if (typeof staticStyle === 'string') {\n      renderer.renderStatic(staticStyle);\n    } else if (_isPlainObject(staticStyle)) {\n      renderObject(staticStyle);\n    } else if (_isFunction(staticStyle)) {\n      var preparedSiteVariables = mergeSiteVariables(siteVariables);\n      renderObject(staticStyle(preparedSiteVariables));\n    } else {\n      throw new Error(\"staticStyles array must contain CSS strings, style objects, or style functions, got: \".concat(_typeof(staticStyle)));\n    }\n  });\n};\n\nexport var providerClassName = 'ui-provider';\n/**\n * The Provider passes the CSS-in-JS renderer, theme styles and other settings to Fluent UI components.\n */\n\nvar Provider = function Provider(props) {\n  var children = props.children,\n      className = props.className,\n      design = props.design,\n      overwrite = props.overwrite,\n      styles = props.styles,\n      variables = props.variables,\n      telemetryRef = props.telemetryRef;\n  var ElementType = getElementType(props);\n  var unhandledProps = useUnhandledProps(Provider.handledProps, props);\n  var telemetry = React.useMemo(function () {\n    if (!telemetryRef) {\n      return undefined;\n    }\n\n    if (!telemetryRef.current) {\n      telemetryRef.current = new Telemetry();\n    }\n\n    return telemetryRef.current;\n  }, [telemetryRef]);\n  var inputContext = {\n    theme: props.theme,\n    rtl: props.rtl,\n    disableAnimations: props.disableAnimations,\n    performance: props.performance,\n    renderer: props.renderer,\n    target: props.target,\n    telemetry: telemetry\n  };\n  var consumedContext = React.useContext(ThemeContext);\n  var incomingContext = overwrite ? {} : consumedContext;\n  var outgoingContext = mergeContexts(incomingContext, inputContext);\n  var rtlProps = {}; // only add dir attribute for top level provider or when direction changes from parent to child\n\n  if (!consumedContext || consumedContext.rtl !== outgoingContext.rtl && _isBoolean(outgoingContext.rtl)) {\n    rtlProps.dir = outgoingContext.rtl ? 'rtl' : 'ltr';\n  }\n\n  var _unstable_getStyles = unstable_getStyles({\n    className: providerClassName,\n    displayNames: [Provider.displayName],\n    props: {\n      className: className,\n      design: design,\n      styles: styles,\n      variables: variables\n    },\n    disableAnimations: outgoingContext.disableAnimations,\n    performance: outgoingContext.performance,\n    renderer: outgoingContext.renderer,\n    rtl: outgoingContext.rtl,\n    theme: outgoingContext.theme,\n    saveDebug: _noop\n  }),\n      classes = _unstable_getStyles.classes;\n\n  var element = usePortalBox({\n    className: classes.root,\n    target: outgoingContext.target,\n    rtl: outgoingContext.rtl\n  });\n  useIsomorphicLayoutEffect(function () {\n    renderFontFaces(outgoingContext.renderer, props.theme);\n    renderStaticStyles(outgoingContext.renderer, props.theme, outgoingContext.theme.siteVariables);\n\n    if (props.target) {\n      setUpWhatInput(props.target);\n    }\n\n    return function () {\n      if (props.target) {\n        tryCleanupWhatInput(props.target);\n      }\n    };\n  }, []); // do not spread anything - React.Fragment can only have `key` and `children` props\n\n  var elementProps = ElementType === React.Fragment ? {} : Object.assign({\n    className: classes.root\n  }, rtlProps, {}, unhandledProps); // rehydration disabled to avoid leaking styles between renderers\n  // https://github.com/rofrischmann/fela/blob/master/docs/api/fela-dom/rehydrate.md\n\n  return React.createElement(RendererProvider, _extends({\n    renderer: outgoingContext.renderer\n  }, {\n    rehydrate: false,\n    targetDocument: outgoingContext.target\n  }), React.createElement(ThemeProvider, {\n    theme: outgoingContext,\n    overwrite: true\n  }, React.createElement(PortalBoxContext.Provider, {\n    value: element\n  }, React.createElement(ElementType, elementProps, children))));\n};\n\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n  theme: {}\n};\nProvider.propTypes = {\n  as: PropTypes.elementType,\n  design: PropTypes.object,\n  variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  theme: PropTypes.shape({\n    siteVariables: PropTypes.object,\n    componentVariables: PropTypes.object,\n    componentStyles: PropTypes.object,\n    fontFaces: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      paths: PropTypes.arrayOf(PropTypes.string),\n      style: PropTypes.shape({\n        fontStretch: PropTypes.string,\n        fontStyle: PropTypes.string,\n        fontVariant: PropTypes.string,\n        fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        localAlias: PropTypes.string,\n        unicodeRange: PropTypes.string\n      })\n    })),\n    staticStyles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])),\n    animations: PropTypes.object\n  }),\n  renderer: PropTypes.object,\n  rtl: PropTypes.bool,\n  disableAnimations: PropTypes.bool,\n  // Heads Up!\n  // Keep in sync with packages/react-bindings/src/styles/types.ts\n  performance: PropTypes.shape({\n    enableSanitizeCssPlugin: PropTypes.bool,\n    enableStylesCaching: PropTypes.bool,\n    enableVariablesCaching: PropTypes.bool\n  }),\n  children: PropTypes.node.isRequired,\n  overwrite: PropTypes.bool,\n  target: PropTypes.object,\n  telemetryRef: PropTypes.object\n};\nProvider.handledProps = Object.keys(Provider.propTypes);\nProvider.Consumer = ProviderConsumer;\nexport default withSafeTypeForAs(Provider);","map":{"version":3,"sources":["components/Provider/Provider.tsx"],"names":["renderFontFaces","theme","renderFontObject","renderer","font","renderStaticStyles","renderObject","preparedSiteVariables","mergeSiteVariables","staticStyle","providerClassName","Provider","children","className","design","overwrite","styles","variables","telemetryRef","props","ElementType","getElementType","unhandledProps","useUnhandledProps","telemetry","inputContext","rtl","disableAnimations","performance","target","consumedContext","React","incomingContext","outgoingContext","mergeContexts","rtlProps","classes","unstable_getStyles","displayNames","saveDebug","element","usePortalBox","useIsomorphicLayoutEffect","setUpWhatInput","tryCleanupWhatInput","elementProps","root","rehydrate","targetDocument","as","PropTypes","siteVariables","componentVariables","componentStyles","fontFaces","name","paths","style","fontStretch","fontStyle","fontVariant","fontWeight","localAlias","unicodeRange","string","staticStyles","animations","object","enableSanitizeCssPlugin","enableStylesCaching","enableVariablesCaching","bool","Object","withSafeTypeForAs"],"mappings":"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","sourcesContent":["import { IStyle } from 'fela';\nimport * as _ from 'lodash';\nimport {\n  getElementType,\n  useUnhandledProps,\n  Renderer,\n  StylesContextPerformanceInput,\n  Telemetry,\n  unstable_getStyles,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-bindings';\nimport {\n  mergeSiteVariables,\n  StaticStyleObject,\n  StaticStyle,\n  StaticStyleFunction,\n  FontFace,\n  ThemeInput,\n  SiteVariablesPrepared,\n} from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n// @ts-ignore\nimport { RendererProvider, ThemeProvider, ThemeContext } from 'react-fela';\n\nimport { ChildrenComponentProps, setUpWhatInput, tryCleanupWhatInput, UIComponentProps } from '../../utils';\n\nimport { WithAsProp, ProviderContextInput, ProviderContextPrepared, withSafeTypeForAs } from '../../types';\nimport mergeContexts from '../../utils/mergeProviderContexts';\nimport ProviderConsumer from './ProviderConsumer';\nimport usePortalBox, { PortalBoxContext } from './usePortalBox';\n\nexport interface ProviderProps extends ChildrenComponentProps, UIComponentProps {\n  renderer?: Renderer;\n  rtl?: boolean;\n  disableAnimations?: boolean;\n  performance?: StylesContextPerformanceInput;\n  overwrite?: boolean;\n  target?: Document;\n  theme?: ThemeInput;\n  telemetryRef?: React.MutableRefObject<Telemetry>;\n}\n\nconst renderFontFaces = (renderer: Renderer, theme: ThemeInput) => {\n  if (!theme.fontFaces) {\n    return;\n  }\n\n  const renderFontObject = (font: FontFace) => {\n    if (!_.isPlainObject(font)) {\n      throw new Error(`fontFaces must be objects, got: ${typeof font}`);\n    }\n\n    renderer.renderFont(font.name, font.paths, font.props);\n  };\n\n  theme.fontFaces.forEach((font: FontFace) => {\n    renderFontObject(font);\n  });\n};\n\nconst renderStaticStyles = (renderer: Renderer, theme: ThemeInput, siteVariables: SiteVariablesPrepared) => {\n  if (!theme.staticStyles) {\n    return;\n  }\n\n  const renderObject = (object: StaticStyleObject) => {\n    _.forEach(object, (style, selector) => {\n      renderer.renderStatic(style as IStyle, selector);\n    });\n  };\n\n  theme.staticStyles.forEach((staticStyle: StaticStyle) => {\n    if (typeof staticStyle === 'string') {\n      renderer.renderStatic(staticStyle);\n    } else if (_.isPlainObject(staticStyle)) {\n      renderObject(staticStyle as StaticStyleObject);\n    } else if (_.isFunction(staticStyle)) {\n      const preparedSiteVariables = mergeSiteVariables(siteVariables);\n      renderObject((staticStyle as StaticStyleFunction)(preparedSiteVariables));\n    } else {\n      throw new Error(\n        `staticStyles array must contain CSS strings, style objects, or style functions, got: ${typeof staticStyle}`,\n      );\n    }\n  });\n};\n\nexport const providerClassName = 'ui-provider';\n\n/**\n * The Provider passes the CSS-in-JS renderer, theme styles and other settings to Fluent UI components.\n */\nconst Provider: React.FC<WithAsProp<ProviderProps>> & {\n  Consumer: typeof ProviderConsumer;\n  handledProps: (keyof ProviderProps)[];\n} = props => {\n  const { children, className, design, overwrite, styles, variables, telemetryRef } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Provider.handledProps, props);\n\n  const telemetry = React.useMemo<Telemetry | undefined>(() => {\n    if (!telemetryRef) {\n      return undefined;\n    }\n\n    if (!telemetryRef.current) {\n      telemetryRef.current = new Telemetry();\n    }\n\n    return telemetryRef.current;\n  }, [telemetryRef]);\n  const inputContext: ProviderContextInput = {\n    theme: props.theme,\n    rtl: props.rtl,\n    disableAnimations: props.disableAnimations,\n    performance: props.performance,\n    renderer: props.renderer,\n    target: props.target,\n    telemetry,\n  };\n\n  const consumedContext: ProviderContextPrepared = React.useContext(ThemeContext);\n  const incomingContext: ProviderContextInput | ProviderContextPrepared = overwrite ? {} : consumedContext;\n\n  const outgoingContext = mergeContexts(incomingContext, inputContext);\n\n  const rtlProps: { dir?: 'rtl' | 'ltr' } = {};\n  // only add dir attribute for top level provider or when direction changes from parent to child\n  if (!consumedContext || (consumedContext.rtl !== outgoingContext.rtl && _.isBoolean(outgoingContext.rtl))) {\n    rtlProps.dir = outgoingContext.rtl ? 'rtl' : 'ltr';\n  }\n\n  const { classes } = unstable_getStyles({\n    className: providerClassName,\n    displayNames: [Provider.displayName],\n    props: {\n      className,\n      design,\n      styles,\n      variables,\n    },\n\n    disableAnimations: outgoingContext.disableAnimations,\n    performance: outgoingContext.performance,\n    renderer: outgoingContext.renderer,\n    rtl: outgoingContext.rtl,\n    theme: outgoingContext.theme,\n    saveDebug: _.noop,\n  });\n\n  const element = usePortalBox({\n    className: classes.root,\n    target: outgoingContext.target,\n    rtl: outgoingContext.rtl,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    renderFontFaces(outgoingContext.renderer, props.theme);\n    renderStaticStyles(outgoingContext.renderer, props.theme, outgoingContext.theme.siteVariables);\n\n    if (props.target) {\n      setUpWhatInput(props.target);\n    }\n\n    return () => {\n      if (props.target) {\n        tryCleanupWhatInput(props.target);\n      }\n    };\n  }, []);\n\n  // do not spread anything - React.Fragment can only have `key` and `children` props\n  const elementProps =\n    ElementType === React.Fragment\n      ? {}\n      : {\n          className: classes.root,\n          ...rtlProps,\n          ...unhandledProps,\n        };\n\n  // rehydration disabled to avoid leaking styles between renderers\n  // https://github.com/rofrischmann/fela/blob/master/docs/api/fela-dom/rehydrate.md\n  return (\n    <RendererProvider\n      renderer={outgoingContext.renderer}\n      {...{ rehydrate: false, targetDocument: outgoingContext.target }}\n    >\n      <ThemeProvider theme={outgoingContext} overwrite>\n        <PortalBoxContext.Provider value={element}>\n          <ElementType {...elementProps}>{children}</ElementType>\n        </PortalBoxContext.Provider>\n      </ThemeProvider>\n    </RendererProvider>\n  );\n};\n\nProvider.displayName = 'Provider';\n\nProvider.defaultProps = {\n  theme: {},\n};\nProvider.propTypes = {\n  as: PropTypes.elementType,\n  design: PropTypes.object,\n  variables: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  theme: PropTypes.shape({\n    siteVariables: PropTypes.object,\n    componentVariables: PropTypes.object,\n    componentStyles: PropTypes.object,\n    fontFaces: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        paths: PropTypes.arrayOf(PropTypes.string),\n        style: PropTypes.shape({\n          fontStretch: PropTypes.string,\n          fontStyle: PropTypes.string,\n          fontVariant: PropTypes.string,\n          fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          localAlias: PropTypes.string,\n          unicodeRange: PropTypes.string,\n        }),\n      }),\n    ),\n    staticStyles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])),\n    animations: PropTypes.object,\n  }),\n  renderer: PropTypes.object as PropTypes.Validator<Renderer>,\n  rtl: PropTypes.bool,\n  disableAnimations: PropTypes.bool,\n  // Heads Up!\n  // Keep in sync with packages/react-bindings/src/styles/types.ts\n  performance: PropTypes.shape({\n    enableSanitizeCssPlugin: PropTypes.bool,\n    enableStylesCaching: PropTypes.bool,\n    enableVariablesCaching: PropTypes.bool,\n  }),\n  children: PropTypes.node.isRequired,\n  overwrite: PropTypes.bool,\n  target: PropTypes.object as PropTypes.Validator<Document>,\n  telemetryRef: PropTypes.object as PropTypes.Validator<React.MutableRefObject<Telemetry>>,\n};\nProvider.handledProps = Object.keys(Provider.propTypes) as any;\n\nProvider.Consumer = ProviderConsumer;\n\nexport default withSafeTypeForAs<typeof Provider, ProviderProps>(Provider);\n"]},"metadata":{},"sourceType":"module"}