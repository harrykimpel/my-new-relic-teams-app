{"ast":null,"code":"import _findKey from \"lodash/findKey\";\nimport { RULE_TYPE } from 'fela-utils';\n/**\n * A Fela enhancer that allows to use `:focus-visible`. Uses `what-input` library and its global\n * selector. Modifies generated selectors:\n * `.a:focus-visible {}` => `html[data-whatinput=\"keyboard\"] a:focus`.\n */\n\nvar felaFocusVisibleEnhancer = function felaFocusVisibleEnhancer(renderer) {\n  return Object.assign({}, renderer, {\n    _emitChange: function _emitChange(change) {\n      if (change.type === RULE_TYPE && change.selector.indexOf(':focus-visible') !== -1) {\n        var pseudo = change.pseudo ? change.pseudo.replace(':focus-visible', ':focus') : undefined;\n        var selector = \"html[data-whatinput=\\\"keyboard\\\"] \".concat(change.selector.replace(':focus-visible', ':focus'));\n\n        var declarationReference = _findKey(renderer.cache, change);\n\n        var enhancedChange = Object.assign({}, change, {\n          pseudo: pseudo,\n          selector: selector\n        }); // Fela has two types for rendering:\n        // - DOM via subscriptions that's why `_emitChange()` is replaced, it will notify all\n        //   subscriptions\n        // - static rendering, it directly accesses `.cache` via `clusterCache()` and generates\n        //   stylesheets from changes\n\n        renderer.cache[declarationReference] = enhancedChange;\n\n        renderer._emitChange(enhancedChange);\n\n        return;\n      }\n\n      renderer._emitChange(change);\n    }\n  });\n};\n\nexport default felaFocusVisibleEnhancer;","map":{"version":3,"sources":["utils/felaFocusVisibleEnhancer.ts"],"names":["felaFocusVisibleEnhancer","_emitChange","change","pseudo","selector","declarationReference","renderer","enhancedChange"],"mappings":";AACA,SAAA,SAAA,QAAA,YAAA;AAkBA;;;;;;AAKA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,QAAA,EAAA;AAAA,SAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAE/BC,IAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,MAAA,EAA4B;AACvC,UAAIC,MAAM,CAANA,IAAAA,KAAAA,SAAAA,IAA6BA,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,MAA8C,CAA/E,CAAA,EAAmF;AACjF,YAAMC,MAAM,GAAGD,MAAM,CAANA,MAAAA,GAAgBA,MAAM,CAANA,MAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,EAAhBA,QAAgBA,CAAhBA,GAAf,SAAA;AACA,YAAME,QAAQ,GAAA,qCAAA,MAAA,CAAsCF,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,EAApD,QAAoDA,CAAtC,CAAd;;AAEA,YAAMG,oBAAoB,GAAG,QAAA,CAAUC,QAAQ,CAAlB,KAAA,EAA7B,MAA6B,CAA7B;;AACA,YAAMC,cAAc,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAElBJ,UAAAA,MAAM,EAFY,MAAA;AAGlBC,UAAAA,QAAQ,EAARA;AAHkB,SAAA,CAApB,CALiF,CAWjF;AACA;AACA;AACA;AACA;;AACAE,QAAAA,QAAQ,CAARA,KAAAA,CAAAA,oBAAAA,IAAAA,cAAAA;;AACAA,QAAAA,QAAQ,CAARA,WAAAA,CAAAA,cAAAA;;AAEA;AACD;;AAEDA,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,MAAAA;AACD;AA1B8B,GAAA,CAAA;AAAjC,CAAA;;AA6BA,eAAA,wBAAA","sourcesContent":["import { IRenderer } from 'fela';\nimport { RULE_TYPE } from 'fela-utils';\nimport * as _ from 'lodash';\n\ntype Renderer = IRenderer & {\n  cache: Record<string, RendererChange>;\n  _emitChange?: (change: RendererChange) => void;\n};\n\ntype RendererChange = {\n  type: 'RULE' | 'KEYFRAME' | 'FONT' | 'STATIC' | 'CLEAR';\n  className: string;\n  selector: string;\n  declaration: Object;\n  pseudo: string;\n  media: string;\n  support: string;\n};\n\n/**\n * A Fela enhancer that allows to use `:focus-visible`. Uses `what-input` library and its global\n * selector. Modifies generated selectors:\n * `.a:focus-visible {}` => `html[data-whatinput=\"keyboard\"] a:focus`.\n */\nconst felaFocusVisibleEnhancer = (renderer: Renderer) => ({\n  ...renderer,\n  _emitChange: (change: RendererChange) => {\n    if (change.type === RULE_TYPE && change.selector.indexOf(':focus-visible') !== -1) {\n      const pseudo = change.pseudo ? change.pseudo.replace(':focus-visible', ':focus') : undefined;\n      const selector = `html[data-whatinput=\"keyboard\"] ${change.selector.replace(':focus-visible', ':focus')}`;\n\n      const declarationReference = _.findKey(renderer.cache, change);\n      const enhancedChange = {\n        ...change,\n        pseudo,\n        selector,\n      };\n\n      // Fela has two types for rendering:\n      // - DOM via subscriptions that's why `_emitChange()` is replaced, it will notify all\n      //   subscriptions\n      // - static rendering, it directly accesses `.cache` via `clusterCache()` and generates\n      //   stylesheets from changes\n      renderer.cache[declarationReference] = enhancedChange;\n      renderer._emitChange(enhancedChange);\n\n      return;\n    }\n\n    renderer._emitChange(change);\n  },\n});\n\nexport default felaFocusVisibleEnhancer;\n"]},"metadata":{},"sourceType":"module"}