{"ast":null,"code":"import { FocusZoneDirection } from '../../focusZone/types';\nimport hierarchicalSubtreeBehavior from './hierarchicalSubtreeBehavior';\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n */\n\nvar hierarchicalTreeBehavior = function hierarchicalTreeBehavior(props) {\n  var subtreeBehaviorData = hierarchicalSubtreeBehavior({});\n  return {\n    attributes: {\n      root: Object.assign({}, subtreeBehaviorData.attributes.root, {\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby']\n      })\n    },\n    keyActions: {\n      root: Object.assign({}, subtreeBehaviorData.keyActions.root)\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical\n      }\n    }\n  };\n};\n\nexport default hierarchicalTreeBehavior;","map":{"version":3,"sources":["behaviors/HierarchicalTree/hierarchicalTreeBehavior.ts"],"names":["hierarchicalTreeBehavior","subtreeBehaviorData","hierarchicalSubtreeBehavior","attributes","root","role","props","keyActions","focusZone","direction","FocusZoneDirection","vertical"],"mappings":"AACA,SAAA,kBAAA,QAAA,uBAAA;AACA,OAAA,2BAAA,MAAA,+BAAA;AAEA;;;;;;;;AAOA,IAAMA,wBAA0D,GAAG,SAA7DA,wBAA6D,CAAA,KAAA,EAAS;AAC1E,MAAMC,mBAAmB,GAAGC,2BAA2B,CAAvD,EAAuD,CAAvD;AACA,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACCH,mBAAmB,CAAnBA,UAAAA,CADD,IAAA,EAAA;AAEFI,QAAAA,IAAI,EAFF,MAAA;AAGF,2BAAmBC,KAAK,CAAA,iBAAA;AAHtB,OAAA;AADM,KADP;AAQLC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACCH,mBAAmB,CAAnBA,UAAAA,CADD,IAAA;AADM,KARP;AAaLO,IAAAA,SAAS,EAAE;AACTF,MAAAA,KAAK,EAAE;AACLG,QAAAA,SAAS,EAAEC,kBAAkB,CAACC;AADzB;AADE;AAbN,GAAP;AAFF,CAAA;;AAyBA,eAAA,wBAAA","sourcesContent":["import { Accessibility, AccessibilityAttributes } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport hierarchicalSubtreeBehavior from './hierarchicalSubtreeBehavior';\n\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n */\nconst hierarchicalTreeBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const subtreeBehaviorData = hierarchicalSubtreeBehavior({});\n  return {\n    attributes: {\n      root: {\n        ...subtreeBehaviorData.attributes.root,\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby'],\n      },\n    },\n    keyActions: {\n      root: {\n        ...subtreeBehaviorData.keyActions.root,\n      },\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical,\n      },\n    },\n  };\n};\n\ntype TreeBehaviorProps = {} & Pick<AccessibilityAttributes, 'aria-labelledby'>;\n\nexport default hierarchicalTreeBehavior;\n"]},"metadata":{},"sourceType":"module"}