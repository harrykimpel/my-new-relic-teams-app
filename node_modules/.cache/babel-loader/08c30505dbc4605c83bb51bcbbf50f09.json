{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { menuDividerBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { createShorthandFactory, UIComponent, commonPropTypes, childrenExist, rtlTextContainer } from '../../utils';\nimport { withSafeTypeForAs } from '../../types';\nexport var menuDividerClassName = 'ui-menu__divider';\n\nvar MenuDivider = /*#__PURE__*/function (_UIComponent) {\n  _inherits(MenuDivider, _UIComponent);\n\n  function MenuDivider() {\n    _classCallCheck(this, MenuDivider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuDivider).apply(this, arguments));\n  }\n\n  _createClass(MenuDivider, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var ElementType = _ref.ElementType,\n          classes = _ref.classes,\n          unhandledProps = _ref.unhandledProps,\n          accessibility = _ref.accessibility;\n      var _this$props = this.props,\n          children = _this$props.children,\n          content = _this$props.content;\n      return React.createElement(ElementType, _extends({}, accessibility.attributes.root, rtlTextContainer.getAttributes({\n        forElements: [children, content]\n      }), unhandledProps, {\n        className: classes.root\n      }), childrenExist(children) ? children : content);\n    }\n  }]);\n\n  return MenuDivider;\n}(UIComponent);\n\n_defineProperty(MenuDivider, \"displayName\", 'MenuDivider');\n\n_defineProperty(MenuDivider, \"create\", void 0);\n\n_defineProperty(MenuDivider, \"deprecated_className\", menuDividerClassName);\n\n_defineProperty(MenuDivider, \"defaultProps\", {\n  as: 'li',\n  accessibility: menuDividerBehavior\n});\n\n_defineProperty(MenuDivider, \"propTypes\", Object.assign({}, commonPropTypes.createCommon(), {\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool\n}));\n\nMenuDivider.create = createShorthandFactory({\n  Component: MenuDivider,\n  mappedProp: 'content'\n});\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\n\nexport default withSafeTypeForAs(MenuDivider);","map":{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerClassName","MenuDivider","UIComponent","as","accessibility","menuDividerBehavior","commonPropTypes","primary","PropTypes","bool","secondary","vertical","inSubmenu","ElementType","classes","unhandledProps","children","content","forElements","root","childrenExist","createShorthandFactory","Component","mappedProp","withSafeTypeForAs"],"mappings":";;;;;;;AAAA,SAAA,mBAAA,QAAA,yBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AAEA,SAAA,sBAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,EAAA,gBAAA,QAAA,aAAA;AAWA,SAAA,iBAAA,QAAA,aAAA;AAYA,OAAO,IAAMA,oBAAoB,GAA1B,kBAAA;;IAEDC,W;;;;;;;;;;;0CAoBqE;AAAA,UAAvDY,WAAuD,GAAA,IAAA,CAAvDA,WAAuD;AAAA,UAA1CC,OAA0C,GAAA,IAAA,CAA1CA,OAA0C;AAAA,UAAjCC,cAAiC,GAAA,IAAA,CAAjCA,cAAiC;AAAA,UAAjBX,aAAiB,GAAA,IAAA,CAAjBA,aAAiB;AAAA,UAAA,WAAA,GACzC,KADyC,KAAA;AAAA,UAC/DY,QAD+D,GAAA,WAAA,CAAA,QAAA;AAAA,UACrDC,OADqD,GAAA,WAAA,CAAA,OAAA;AAGvE,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EACMb,aAAa,CAAbA,UAAAA,CADN,IAAA,EAEM,gBAAgB,CAAhB,aAAA,CAA+B;AAAEc,QAAAA,WAAW,EAAE,CAAA,QAAA,EAAA,OAAA;AAAf,OAA/B,CAFN,EAAA,cAAA,EAAA;AAIE,QAAA,SAAS,EAAEJ,OAAO,CAACK;AAJrB,OAAA,CAAA,EAMGC,aAAa,CAAbA,QAAa,CAAbA,GAAAA,QAAAA,GAPL,OACE,CADF;AAUD;;;;EAjCuBlB,W;;gBAApBD,W,iBACiB,a;;gBADjBA,W;;gBAAAA,W,0BAK0BD,oB;;gBAL1BC,W,kBAOkB;AACpBE,EAAAA,EAAE,EADkB,IAAA;AAEpBC,EAAAA,aAAa,EAAEC;AAFK,C;;gBAPlBJ,W,iCAaCK,eAAe,CAAfA,YAAAA,E;AACHC,EAAAA,OAAO,EAAEC,SAAS,CAACC,I;AACnBC,EAAAA,SAAS,EAAEF,SAAS,CAACC,I;AACrBE,EAAAA,QAAQ,EAAEH,SAAS,CAACC,I;AACpBG,EAAAA,SAAS,EAAEJ,SAAS,CAACC;;;AAmBzBR,WAAW,CAAXA,MAAAA,GAAqBoB,sBAAsB,CAAC;AAAEC,EAAAA,SAAS,EAAX,WAAA;AAA0BC,EAAAA,UAAU,EAAE;AAAtC,CAAD,CAA3CtB;AAEA;;;;AAGA,eAAeuB,iBAAiB,CAAhC,WAAgC,CAAhC","sourcesContent":["import { Accessibility, menuDividerBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  createShorthandFactory,\n  UIComponent,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { WithAsProp, withSafeTypeForAs } from '../../types';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  vertical?: boolean;\n  primary?: boolean;\n  secondary?: boolean;\n  inSubmenu?: boolean;\n}\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\nclass MenuDivider extends UIComponent<WithAsProp<MenuDividerProps>> {\n  static displayName = 'MenuDivider';\n\n  static create: ShorthandFactory<MenuDividerProps>;\n\n  static deprecated_className = menuDividerClassName;\n\n  static defaultProps = {\n    as: 'li',\n    accessibility: menuDividerBehavior as Accessibility,\n  };\n\n  static propTypes = {\n    ...commonPropTypes.createCommon(),\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool,\n    vertical: PropTypes.bool,\n    inSubmenu: PropTypes.bool,\n  };\n\n  renderComponent({ ElementType, classes, unhandledProps, accessibility }) {\n    const { children, content } = this.props;\n\n    return (\n      <ElementType\n        {...accessibility.attributes.root}\n        {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n        {...unhandledProps}\n        className={classes.root}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n  }\n}\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport default withSafeTypeForAs<typeof MenuDivider, MenuDividerProps, 'li'>(MenuDivider);\n"]},"metadata":{},"sourceType":"module"}